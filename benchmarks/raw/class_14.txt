<html><head><script type="text/javascript" src="https://code.jquery.com/jquery-3.4.1.slim.min.js"></script>
<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.1/umd/popper.min.js"></script>
<script type="text/javascript" src="https://maxcdn.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.min.js"></script>
<script type="text/javascript" src="https://cdn.ckeditor.com/4.13.1/standard/ckeditor.js"></script><style>.cke{visibility:hidden;}</style>
<script type="text/javascript" src="/app.5A784452FEDB3CF6AD10607A5A58CAE4F77B4876.js"></script>
<script type="text/javascript">s1_29=sc(exec({c:"c",v:""}));s1_30=sc(exec({c:"c",v:{_1:{_1:1580446800000000,_2:"Jan 31",_3:"01/31/2020 12:00 AM",_4:{_1:{_1:1580490000000000,_2:null,_3:"",_4:{n:50199,v:{_Notable:"Registration Day"}}},_2:null}},_2:{_1:{_1:1580533200000000,_2:"Feb  1",_3:"02/01/2020 12:00 AM",_4:null},_2:{_1:{_1:1580619600000000,_2:"Feb  2",_3:"02/02/2020 12:00 AM",_4:null},_2:{_1:{_1:1580706000000000,_2:"Feb  3",_3:"02/03/2020 12:00 AM",_4:{_1:{_1:1580749200000000,_2:null,_3:"",_4:{n:50199,v:{_Notable:"First Day of Classes"}}},_2:{_1:{_1:1580758200000000,_2:" 2:30",_3:"",_4:{n:50198,v:{_LectureNum:1,_LectureTitle:"IRIR: The Foundational Toolbox for Program Proof"}}},_2:{_1:{_1:1580763600000000,_2:" 4:00",_3:"released",_4:{n:50201,v:{_PsetNum:1}}},_2:null}}}},_2:{_1:{_1:1580792400000000,_2:"Feb  4",_3:"02/04/2020 12:00 AM",_4:null},_2:{_1:{_1:1580878800000000,_2:"Feb  5",_3:"02/05/2020 12:00 AM",_4:{_1:{_1:1580931000000000,_2:" 2:30",_3:"",_4:{n:50198,v:{_LectureNum:2,_LectureTitle:"Polymorphic Datatypes in Coq"}}},_2:{_1:{_1:1580936400000000,_2:" 4:00",_3:"",_4:{n:50200,v:{_LengthInHours:2,_OhUser:"Samuel Gruetter"}}},_2:null}}},_2:{_1:{_1:1580965200000000,_2:"Feb  6",_3:"02/06/2020 12:00 AM",_4:null},_2:{_1:{_1:1581051600000000,_2:"Feb  7",_3:"02/07/2020 12:00 AM",_4:{_1:{_1:1581094800000000,_2:null,_3:"",_4:{n:50199,v:{_Notable:"Registration Deadline"}}},_2:{_1:{_1:1581105600000000,_2:" 3:00",_3:"",_4:{n:50200,v:{_LengthInHours:2,_OhUser:"Andres Erbsen"}}},_2:null}}},_2:{_1:{_1:1581138000000000,_2:"Feb  8",_3:"02/08/2020 12:00 AM",_4:null},_2:{_1:{_1:1581224400000000,_2:"Feb  9",_3:"02/09/2020 12:00 AM",_4:null},_2:{_1:{_1:1581310800000000,_2:"Feb 10",_3:"02/10/2020 12:00 AM",_4:{_1:{_1:1581363000000000,_2:" 2:30",_3:"",_4:{n:50198,v:{_LectureNum:3,_LectureTitle:"Interpreters as Formal Semantics for Programs"}}},_2:{_1:{_1:1581368400000000,_2:" 4:00",_3:"",_4:{n:50200,v:{_LengthInHours:2,_OhUser:"Samuel Gruetter"}}},_2:null}}},_2:{_1:{_1:1581397200000000,_2:"Feb 11",_3:"02/11/2020 12:00 AM",_4:{_1:{_1:1581454800000000,_2:" 4:00",_3:"",_4:{n:50200,v:{_LengthInHours:3,_OhUser:"Andres Erbsen"}}},_2:null}},_2:{_1:{_1:1581483600000000,_2:"Feb 12",_3:"02/12/2020 12:00 AM",_4:{_1:{_1:1581535800000000,_2:" 2:30",_3:"",_4:{n:50198,v:{_LectureNum:4,_LectureTitle:"First-Class Functions in Coq"}}},_2:{_1:{_1:1581535800000000,_2:" 2:30",_3:"due",_4:{n:50201,v:{_PsetNum:1}}},_2:{_1:{_1:1581541200000000,_2:" 4:00",_3:"",_4:{n:50200,v:{_LengthInHours:2,_OhUser:"Andres Erbsen"}}},_2:{_1:{_1:1581541200000000,_2:" 4:00",_3:"released",_4:{n:50201,v:{_PsetNum:2}}},_2:null}}}}},_2:{_1:{_1:1581570000000000,_2:"Feb 13",_3:"02/13/2020 12:00 AM",_4:null},_2:{_1:{_1:1581656400000000,_2:"Feb 14",_3:"02/14/2020 12:00 AM",_4:{_1:{_1:1581710400000000,_2:" 3:00",_3:"",_4:{n:50200,v:{_LengthInHours:2,_OhUser:"Samuel Gruetter"}}},_2:null}},_2:{_1:{_1:1581742800000000,_2:"Feb 15",_3:"02/15/2020 12:00 AM",_4:null},_2:{_1:{_1:1581829200000000,_2:"Feb 16",_3:"02/16/2020 12:00 AM",_4:null},_2:{_1:{_1:1581915600000000,_2:"Feb 17",_3:"02/17/2020 12:00 AM",_4:{_1:{_1:1581958800000000,_2:null,_3:"",_4:{n:50199,v:{_Notable:"Presidents Day - Holiday"}}},_2:null}},_2:{_1:{_1:1582002000000000,_2:"Feb 18",_3:"02/18/2020 12:00 AM",_4:{_1:{_1:1582045200000000,_2:null,_3:"",_4:{n:50199,v:{_Notable:"Monday Schedule of Classes"}}},_2:{_1:{_1:1582054200000000,_2:" 2:30",_3:"",_4:{n:50198,v:{_LectureNum:5,_LectureTitle:"Transition Systems: A Uniform Way to Model Algorithmic Systems"}}},_2:{_1:{_1:1582059600000000,_2:" 4:00",_3:"",_4:{n:50200,v:{_LengthInHours:2,_OhUser:"Andres Erbsen"}}},_2:{_1:{_1:1582059600000000,_2:" 4:00",_3:"",_4:{n:50200,v:{_LengthInHours:2,_OhUser:"Samuel Gruetter"}}},_2:null}}}}},_2:{_1:{_1:1582088400000000,_2:"Feb 19",_3:"02/19/2020 12:00 AM",_4:{_1:{_1:1582140600000000,_2:" 2:30",_3:"",_4:{n:50198,v:{_LectureNum:6,_LectureTitle:"Coq Proof Automation I: Pattern Matching on Goals"}}},_2:{_1:{_1:1582140600000000,_2:" 2:30",_3:"due",_4:{n:50201,v:{_PsetNum:2}}},_2:{_1:{_1:1582146000000000,_2:" 4:00",_3:"",_4:{n:50200,v:{_LengthInHours:2,_OhUser:"Samuel Gruetter"}}},_2:{_1:{_1:1582146000000000,_2:" 4:00",_3:"released",_4:{n:50201,v:{_PsetNum:3}}},_2:null}}}}},_2:{_1:{_1:1582174800000000,_2:"Feb 20",_3:"02/20/2020 12:00 AM",_4:null},_2:{_1:{_1:1582261200000000,_2:"Feb 21",_3:"02/21/2020 12:00 AM",_4:{_1:{_1:1582315200000000,_2:" 3:00",_3:"",_4:{n:50200,v:{_LengthInHours:2,_OhUser:"Andres Erbsen"}}},_2:null}},_2:{_1:{_1:1582347600000000,_2:"Feb 22",_3:"02/22/2020 12:00 AM",_4:null},_2:{_1:{_1:1582434000000000,_2:"Feb 23",_3:"02/23/2020 12:00 AM",_4:null},_2:{_1:{_1:1582520400000000,_2:"Feb 24",_3:"02/24/2020 12:00 AM",_4:{_1:{_1:1582572600000000,_2:" 2:30",_3:"",_4:{n:50198,v:{_LectureNum:7,_LectureTitle:"Coq Modules and Data Abstraction"}}},_2:{_1:{_1:1582578000000000,_2:" 4:00",_3:"",_4:{n:50200,v:{_LengthInHours:2,_OhUser:"Samuel Gruetter"}}},_2:{_1:{_1:1582578000000000,_2:" 4:00",_3:"released",_4:{n:50201,v:{_PsetNum:4}}},_2:null}}}},_2:{_1:{_1:1582606800000000,_2:"Feb 25",_3:"02/25/2020 12:00 AM",_4:{_1:{_1:1582664400000000,_2:" 4:00",_3:"",_4:{n:50200,v:{_LengthInHours:3,_OhUser:"Samuel Gruetter"}}},_2:null}},_2:{_1:{_1:1582693200000000,_2:"Feb 26",_3:"02/26/2020 12:00 AM",_4:{_1:{_1:1582745400000000,_2:" 2:30",_3:"",_4:{n:50198,v:{_LectureNum:8,_LectureTitle:"Model Checking: Smart State-Space Enumeration for Free Theorems"}}},_2:{_1:{_1:1582745400000000,_2:" 2:30",_3:"due",_4:{n:50201,v:{_PsetNum:3}}},_2:{_1:{_1:1582750800000000,_2:" 4:00",_3:"",_4:{n:50200,v:{_LengthInHours:2,_OhUser:"Andres Erbsen"}}},_2:null}}}},_2:{_1:{_1:1582779600000000,_2:"Feb 27",_3:"02/27/2020 12:00 AM",_4:null},_2:{_1:{_1:1582866000000000,_2:"Feb 28",_3:"02/28/2020 12:00 AM",_4:{_1:{_1:1582920000000000,_2:" 3:00",_3:"",_4:{n:50200,v:{_LengthInHours:2,_OhUser:"Andres Erbsen"}}},_2:null}},_2:{_1:{_1:1582952400000000,_2:"Feb 29",_3:"02/29/2020 12:00 AM",_4:null},_2:{_1:{_1:1583038800000000,_2:"Mar  1",_3:"03/01/2020 12:00 AM",_4:null},_2:{_1:{_1:1583125200000000,_2:"Mar  2",_3:"03/02/2020 12:00 AM",_4:{_1:{_1:1583177400000000,_2:" 2:30",_3:"",_4:{n:50198,v:{_LectureNum:9,_LectureTitle:"Operational Semantics"}}},_2:{_1:{_1:1583182800000000,_2:" 4:00",_3:"",_4:{n:50200,v:{_LengthInHours:2,_OhUser:"Andres Erbsen"}}},_2:{_1:{_1:1583182800000000,_2:" 4:00",_3:"released",_4:{n:50201,v:{_PsetNum:5}}},_2:null}}}},_2:{_1:{_1:1583211600000000,_2:"Mar  3",_3:"03/03/2020 12:00 AM",_4:{_1:{_1:1583269200000000,_2:" 4:00",_3:"",_4:{n:50200,v:{_LengthInHours:3,_OhUser:"Andres Erbsen"}}},_2:null}},_2:{_1:{_1:1583298000000000,_2:"Mar  4",_3:"03/04/2020 12:00 AM",_4:{_1:{_1:1583350200000000,_2:" 2:30",_3:"",_4:{n:50198,v:{_LectureNum:10,_LectureTitle:"Coq Proof Automation II: Logic Programming"}}},_2:{_1:{_1:1583350200000000,_2:" 2:30",_3:"due",_4:{n:50201,v:{_PsetNum:4}}},_2:{_1:{_1:1583355600000000,_2:" 4:00",_3:"",_4:{n:50200,v:{_LengthInHours:2,_OhUser:"Samuel Gruetter"}}},_2:null}}}},_2:{_1:{_1:1583384400000000,_2:"Mar  5",_3:"03/05/2020 12:00 AM",_4:null},_2:{_1:{_1:1583470800000000,_2:"Mar  6",_3:"03/06/2020 12:00 AM",_4:{_1:{_1:1583514000000000,_2:null,_3:"",_4:{n:50199,v:{_Notable:"Add Date"}}},_2:{_1:{_1:1583524800000000,_2:" 3:00",_3:"",_4:{n:50200,v:{_LengthInHours:2,_OhUser:"Samuel Gruetter"}}},_2:null}}},_2:{_1:{_1:1583557200000000,_2:"Mar  7",_3:"03/07/2020 12:00 AM",_4:null},_2:{_1:{_1:1583643600000000,_2:"Mar  8",_3:"03/08/2020 12:00 AM",_4:null},_2:{_1:{_1:1583730000000000,_2:"Mar  9",_3:"03/09/2020 12:00 AM",_4:{_1:{_1:1583778600000000,_2:" 2:30",_3:"",_4:{n:50198,v:{_LectureNum:11,_LectureTitle:"Abstract Interpretation"}}},_2:{_1:{_1:1583784000000000,_2:" 4:00",_3:"",_4:{n:50200,v:{_LengthInHours:2,_OhUser:"Andres Erbsen"}}},_2:null}}},_2:{_1:{_1:1583816400000000,_2:"Mar 10",_3:"03/10/2020 12:00 AM",_4:{_1:{_1:1583870400000000,_2:" 4:00",_3:"",_4:{n:50200,v:{_LengthInHours:3,_OhUser:"Samuel Gruetter"}}},_2:null}},_2:{_1:{_1:1583902800000000,_2:"Mar 11",_3:"03/11/2020 12:00 AM",_4:{_1:{_1:1583951400000000,_2:" 2:30",_3:"",_4:{n:50198,v:{_LectureNum:12,_LectureTitle:"Compiler Correctness"}}},_2:{_1:{_1:1583956800000000,_2:" 4:00",_3:"",_4:{n:50200,v:{_LengthInHours:2,_OhUser:"Samuel Gruetter"}}},_2:{_1:{_1:1583956800000000,_2:" 4:00",_3:"released",_4:{n:50201,v:{_PsetNum:6}}},_2:null}}}},_2:{_1:{_1:1583989200000000,_2:"Mar 12",_3:"03/12/2020 12:00 AM",_4:null},_2:{_1:{_1:1584075600000000,_2:"Mar 13",_3:"03/13/2020 12:00 AM",_4:{_1:{_1:1584126000000000,_2:" 3:00",_3:"",_4:{n:50200,v:{_LengthInHours:2,_OhUser:"Andres Erbsen"}}},_2:null}},_2:{_1:{_1:1584162000000000,_2:"Mar 14",_3:"03/14/2020 12:00 AM",_4:null},_2:{_1:{_1:1584248400000000,_2:"Mar 15",_3:"03/15/2020 12:00 AM",_4:null},_2:{_1:{_1:1584334800000000,_2:"Mar 16",_3:"03/16/2020 12:00 AM",_4:{_1:{_1:1584388800000000,_2:" 4:00",_3:"",_4:{n:50200,v:{_LengthInHours:2,_OhUser:"Samuel Gruetter"}}},_2:null}},_2:{_1:{_1:1584421200000000,_2:"Mar 17",_3:"03/17/2020 12:00 AM",_4:null},_2:{_1:{_1:1584507600000000,_2:"Mar 18",_3:"03/18/2020 12:00 AM",_4:null},_2:{_1:{_1:1584594000000000,_2:"Mar 19",_3:"03/19/2020 12:00 AM",_4:null},_2:{_1:{_1:1584680400000000,_2:"Mar 20",_3:"03/20/2020 12:00 AM",_4:{_1:{_1:1584730800000000,_2:" 3:00",_3:"",_4:{n:50200,v:{_LengthInHours:2,_OhUser:"Andres Erbsen"}}},_2:null}},_2:{_1:{_1:1584766800000000,_2:"Mar 21",_3:"03/21/2020 12:00 AM",_4:null},_2:{_1:{_1:1584853200000000,_2:"Mar 22",_3:"03/22/2020 12:00 AM",_4:null},_2:{_1:{_1:1584939600000000,_2:"Mar 23",_3:"03/23/2020 12:00 AM",_4:{_1:{_1:1584979200000000,_2:null,_3:"",_4:{n:50199,v:{_Notable:"Spring Vacation"}}},_2:null}},_2:{_1:{_1:1585026000000000,_2:"Mar 24",_3:"03/24/2020 12:00 AM",_4:{_1:{_1:1585065600000000,_2:null,_3:"",_4:{n:50199,v:{_Notable:"Spring Vacation"}}},_2:null}},_2:{_1:{_1:1585112400000000,_2:"Mar 25",_3:"03/25/2020 12:00 AM",_4:{_1:{_1:1585152000000000,_2:null,_3:"",_4:{n:50199,v:{_Notable:"Spring Vacation"}}},_2:null}},_2:{_1:{_1:1585198800000000,_2:"Mar 26",_3:"03/26/2020 12:00 AM",_4:{_1:{_1:1585238400000000,_2:null,_3:"",_4:{n:50199,v:{_Notable:"Spring Vacation"}}},_2:null}},_2:{_1:{_1:1585285200000000,_2:"Mar 27",_3:"03/27/2020 12:00 AM",_4:{_1:{_1:1585324800000000,_2:null,_3:"",_4:{n:50199,v:{_Notable:"Spring Vacation"}}},_2:null}},_2:{_1:{_1:1585371600000000,_2:"Mar 28",_3:"03/28/2020 12:00 AM",_4:null},_2:{_1:{_1:1585458000000000,_2:"Mar 29",_3:"03/29/2020 12:00 AM",_4:null},_2:{_1:{_1:1585544400000000,_2:"Mar 30",_3:"03/30/2020 12:00 AM",_4:{_1:{_1:1585593000000000,_2:" 2:30",_3:"",_4:{n:50198,v:{_LectureNum:13,_LectureTitle:"Lambda Calculus and Type Soundness"}}},_2:{_1:{_1:1585602000000000,_2:" 5:00",_3:"",_4:{n:50200,v:{_LengthInHours:2,_OhUser:"Andres Erbsen"}}},_2:null}}},_2:{_1:{_1:1585630800000000,_2:"Mar 31",_3:"03/31/2020 12:00 AM",_4:{_1:{_1:1585684800000000,_2:" 4:00",_3:"",_4:{n:50200,v:{_LengthInHours:2,_OhUser:"Samuel Gruetter"}}},_2:null}},_2:{_1:{_1:1585717200000000,_2:"Apr  1",_3:"04/01/2020 12:00 AM",_4:{_1:{_1:1585765800000000,_2:" 2:30",_3:"",_4:{n:50198,v:{_LectureNum:14,_LectureTitle:"Type Soundness for Imperative Programs"}}},_2:{_1:{_1:1585765800000000,_2:" 2:30",_3:"due",_4:{n:50201,v:{_PsetNum:5}}},_2:{_1:{_1:1585765800000000,_2:" 2:30",_3:"due",_4:{n:50201,v:{_PsetNum:6}}},_2:{_1:{_1:1585771200000000,_2:" 4:00",_3:"",_4:{n:50200,v:{_LengthInHours:2,_OhUser:"Samuel Gruetter"}}},_2:{_1:{_1:1585771200000000,_2:" 4:00",_3:"released",_4:{n:50201,v:{_PsetNum:7}}},_2:null}}}}}},_2:{_1:{_1:1585803600000000,_2:"Apr  2",_3:"04/02/2020 12:00 AM",_4:null},_2:{_1:{_1:1585890000000000,_2:"Apr  3",_3:"04/03/2020 12:00 AM",_4:{_1:{_1:1585940400000000,_2:" 3:00",_3:"",_4:{n:50200,v:{_LengthInHours:2,_OhUser:"Andres Erbsen"}}},_2:null}},_2:{_1:{_1:1585976400000000,_2:"Apr  4",_3:"04/04/2020 12:00 AM",_4:null},_2:{_1:{_1:1586062800000000,_2:"Apr  5",_3:"04/05/2020 12:00 AM",_4:null},_2:{_1:{_1:1586149200000000,_2:"Apr  6",_3:"04/06/2020 12:00 AM",_4:{_1:{_1:1586197800000000,_2:" 2:30",_3:"",_4:{n:50198,v:{_LectureNum:15,_LectureTitle:"Hoare Logic: Verifying Imperative Programs"}}},_2:{_1:{_1:1586203200000000,_2:" 4:00",_3:"",_4:{n:50200,v:{_LengthInHours:2,_OhUser:"Samuel Gruetter"}}},_2:null}}},_2:{_1:{_1:1586235600000000,_2:"Apr  7",_3:"04/07/2020 12:00 AM",_4:{_1:{_1:1586289600000000,_2:" 4:00",_3:"",_4:{n:50200,v:{_LengthInHours:2,_OhUser:"Andres Erbsen"}}},_2:null}},_2:{_1:{_1:1586322000000000,_2:"Apr  8",_3:"04/08/2020 12:00 AM",_4:{_1:{_1:1586370600000000,_2:" 2:30",_3:"",_4:{n:50198,v:{_LectureNum:16,_LectureTitle:"Encoding the Syntax of Expressive Languages in Coq"}}},_2:{_1:{_1:1586370600000000,_2:" 2:30",_3:"due",_4:{n:50201,v:{_PsetNum:7}}},_2:{_1:{_1:1586376000000000,_2:" 4:00",_3:"",_4:{n:50200,v:{_LengthInHours:2,_OhUser:"Samuel Gruetter"}}},_2:{_1:{_1:1586376000000000,_2:" 4:00",_3:"released",_4:{n:50201,v:{_PsetNum:8}}},_2:null}}}}},_2:{_1:{_1:1586408400000000,_2:"Apr  9",_3:"04/09/2020 12:00 AM",_4:null},_2:{_1:{_1:1586494800000000,_2:"Apr 10",_3:"04/10/2020 12:00 AM",_4:{_1:{_1:1586545200000000,_2:" 3:00",_3:"",_4:{n:50200,v:{_LengthInHours:2,_OhUser:"Andres Erbsen"}}},_2:null}},_2:{_1:{_1:1586581200000000,_2:"Apr 11",_3:"04/11/2020 12:00 AM",_4:null},_2:{_1:{_1:1586667600000000,_2:"Apr 12",_3:"04/12/2020 12:00 AM",_4:null},_2:{_1:{_1:1586754000000000,_2:"Apr 13",_3:"04/13/2020 12:00 AM",_4:{_1:{_1:1586802600000000,_2:" 2:30",_3:"",_4:{n:50198,v:{_LectureNum:17,_LectureTitle:"Separation Logic: Taming Aliasing in Pointer Programs"}}},_2:{_1:{_1:1586808000000000,_2:" 4:00",_3:"",_4:{n:50200,v:{_LengthInHours:2,_OhUser:"Andres Erbsen"}}},_2:null}}},_2:{_1:{_1:1586840400000000,_2:"Apr 14",_3:"04/14/2020 12:00 AM",_4:{_1:{_1:1586894400000000,_2:" 4:00",_3:"",_4:{n:50200,v:{_LengthInHours:2,_OhUser:"Samuel Gruetter"}}},_2:null}},_2:{_1:{_1:1586926800000000,_2:"Apr 15",_3:"04/15/2020 12:00 AM",_4:{_1:{_1:1586975400000000,_2:" 2:30",_3:"",_4:{n:50198,v:{_LectureNum:18,_LectureTitle:"How to Connect Coq Proofs to Real-World Programming Languages"}}},_2:{_1:{_1:1586975400000000,_2:" 2:30",_3:"due",_4:{n:50201,v:{_PsetNum:8}}},_2:{_1:{_1:1586980800000000,_2:" 4:00",_3:"",_4:{n:50200,v:{_LengthInHours:2,_OhUser:"Samuel Gruetter"}}},_2:{_1:{_1:1586980800000000,_2:" 4:00",_3:"released",_4:{n:50201,v:{_PsetNum:9}}},_2:null}}}}},_2:{_1:{_1:1587013200000000,_2:"Apr 16",_3:"04/16/2020 12:00 AM",_4:{_1:{_1:1587052800000000,_2:null,_3:"",_4:{n:50199,v:{_Notable:"Campus Preview Weekend"}}},_2:null}},_2:{_1:{_1:1587099600000000,_2:"Apr 17",_3:"04/17/2020 12:00 AM",_4:{_1:{_1:1587139200000000,_2:null,_3:"",_4:{n:50199,v:{_Notable:"Campus Preview Weekend"}}},_2:{_1:{_1:1587150000000000,_2:" 3:00",_3:"",_4:{n:50200,v:{_LengthInHours:2,_OhUser:"Andres Erbsen"}}},_2:null}}},_2:{_1:{_1:1587186000000000,_2:"Apr 18",_3:"04/18/2020 12:00 AM",_4:{_1:{_1:1587225600000000,_2:null,_3:"",_4:{n:50199,v:{_Notable:"Campus Preview Weekend"}}},_2:null}},_2:{_1:{_1:1587272400000000,_2:"Apr 19",_3:"04/19/2020 12:00 AM",_4:{_1:{_1:1587312000000000,_2:null,_3:"",_4:{n:50199,v:{_Notable:"Campus Preview Weekend"}}},_2:null}},_2:{_1:{_1:1587358800000000,_2:"Apr 20",_3:"04/20/2020 12:00 AM",_4:{_1:{_1:1587398400000000,_2:null,_3:"",_4:{n:50199,v:{_Notable:"Patriots Day - Vacation"}}},_2:null}},_2:{_1:{_1:1587445200000000,_2:"Apr 21",_3:"04/21/2020 12:00 AM",_4:{_1:{_1:1587481200000000,_2:"11:00",_3:"",_4:{n:50200,v:{_LengthInHours:1,_OhUser:"Samuel Gruetter"}}},_2:{_1:{_1:1587484800000000,_2:null,_3:"",_4:{n:50199,v:{_Notable:"Drop Date"}}},_2:{_1:{_1:1587490200000000,_2:" 1:30",_3:"",_4:{n:50200,v:{_LengthInHours:1,_OhUser:"Samuel Gruetter"}}},_2:{_1:{_1:1587499200000000,_2:" 4:00",_3:"",_4:{n:50200,v:{_LengthInHours:2,_OhUser:"Andres Erbsen"}}},_2:null}}}}},_2:{_1:{_1:1587531600000000,_2:"Apr 22",_3:"04/22/2020 12:00 AM",_4:{_1:{_1:1587580200000000,_2:" 2:30",_3:"",_4:{n:50198,v:{_LectureNum:19,_LectureTitle:"Operational Semantics for Concurrent Programs"}}},_2:{_1:{_1:1587580200000000,_2:" 2:30",_3:"due",_4:{n:50201,v:{_PsetNum:9}}},_2:{_1:{_1:1587585600000000,_2:" 4:00",_3:"",_4:{n:50200,v:{_LengthInHours:2,_OhUser:"Samuel Gruetter"}}},_2:{_1:{_1:1587585600000000,_2:" 4:00",_3:"released",_4:{n:50201,v:{_PsetNum:10}}},_2:null}}}}},_2:{_1:{_1:1587618000000000,_2:"Apr 23",_3:"04/23/2020 12:00 AM",_4:null},_2:{_1:{_1:1587704400000000,_2:"Apr 24",_3:"04/24/2020 12:00 AM",_4:{_1:{_1:1587754800000000,_2:" 3:00",_3:"",_4:{n:50200,v:{_LengthInHours:2,_OhUser:"Andres Erbsen"}}},_2:null}},_2:{_1:{_1:1587790800000000,_2:"Apr 25",_3:"04/25/2020 12:00 AM",_4:null},_2:{_1:{_1:1587877200000000,_2:"Apr 26",_3:"04/26/2020 12:00 AM",_4:null},_2:{_1:{_1:1587963600000000,_2:"Apr 27",_3:"04/27/2020 12:00 AM",_4:{_1:{_1:1588012200000000,_2:" 2:30",_3:"",_4:{n:50198,v:{_LectureNum:20,_LectureTitle:"Program Derivation in Coq"}}},_2:{_1:{_1:1588017600000000,_2:" 4:00",_3:"",_4:{n:50200,v:{_LengthInHours:2,_OhUser:"Samuel Gruetter"}}},_2:null}}},_2:{_1:{_1:1588050000000000,_2:"Apr 28",_3:"04/28/2020 12:00 AM",_4:{_1:{_1:1588104000000000,_2:" 4:00",_3:"",_4:{n:50200,v:{_LengthInHours:2,_OhUser:"Andres Erbsen"}}},_2:null}},_2:{_1:{_1:1588136400000000,_2:"Apr 29",_3:"04/29/2020 12:00 AM",_4:{_1:{_1:1588185000000000,_2:" 2:30",_3:"",_4:{n:50198,v:{_LectureNum:21,_LectureTitle:"Concurrent Separation Logic"}}},_2:{_1:{_1:1588185000000000,_2:" 2:30",_3:"due",_4:{n:50201,v:{_PsetNum:10}}},_2:{_1:{_1:1588190400000000,_2:" 4:00",_3:"",_4:{n:50200,v:{_LengthInHours:2,_OhUser:"Samuel Gruetter"}}},_2:{_1:{_1:1588190400000000,_2:" 4:00",_3:"released",_4:{n:50201,v:{_PsetNum:11}}},_2:null}}}}},_2:{_1:{_1:1588222800000000,_2:"Apr 30",_3:"04/30/2020 12:00 AM",_4:null},_2:{_1:{_1:1588309200000000,_2:"May  1",_3:"05/01/2020 12:00 AM",_4:{_1:{_1:1588359600000000,_2:" 3:00",_3:"",_4:{n:50200,v:{_LengthInHours:2,_OhUser:"Andres Erbsen"}}},_2:null}},_2:{_1:{_1:1588395600000000,_2:"May  2",_3:"05/02/2020 12:00 AM",_4:null},_2:{_1:{_1:1588482000000000,_2:"May  3",_3:"05/03/2020 12:00 AM",_4:null},_2:{_1:{_1:1588568400000000,_2:"May  4",_3:"05/04/2020 12:00 AM",_4:{_1:{_1:1588617000000000,_2:" 2:30",_3:"",_4:{n:50198,v:{_LectureNum:22,_LectureTitle:"Message Passing and Refinement"}}},_2:{_1:{_1:1588622400000000,_2:" 4:00",_3:"",_4:{n:50200,v:{_LengthInHours:2,_OhUser:"Andres Erbsen"}}},_2:null}}},_2:{_1:{_1:1588654800000000,_2:"May  5",_3:"05/05/2020 12:00 AM",_4:{_1:{_1:1588708800000000,_2:" 4:00",_3:"",_4:{n:50200,v:{_LengthInHours:2,_OhUser:"Samuel Gruetter"}}},_2:null}},_2:{_1:{_1:1588741200000000,_2:"May  6",_3:"05/06/2020 12:00 AM",_4:{_1:{_1:1588789800000000,_2:" 2:30",_3:"",_4:{n:50198,v:{_LectureNum:23,_LectureTitle:"Session Types"}}},_2:{_1:{_1:1588789800000000,_2:" 2:30",_3:"due",_4:{n:50201,v:{_PsetNum:11}}},_2:{_1:{_1:1588795200000000,_2:" 4:00",_3:"",_4:{n:50200,v:{_LengthInHours:2,_OhUser:"Samuel Gruetter"}}},_2:{_1:{_1:1588795200000000,_2:" 4:00",_3:"released",_4:{n:50201,v:{_PsetNum:12}}},_2:null}}}}},_2:{_1:{_1:1588827600000000,_2:"May  7",_3:"05/07/2020 12:00 AM",_4:null},_2:{_1:{_1:1588914000000000,_2:"May  8",_3:"05/08/2020 12:00 AM",_4:{_1:{_1:1588964400000000,_2:" 3:00",_3:"",_4:{n:50200,v:{_LengthInHours:2,_OhUser:"Andres Erbsen"}}},_2:null}},_2:{_1:{_1:1589000400000000,_2:"May  9",_3:"05/09/2020 12:00 AM",_4:null},_2:{_1:{_1:1589086800000000,_2:"May 10",_3:"05/10/2020 12:00 AM",_4:null},_2:{_1:{_1:1589173200000000,_2:"May 11",_3:"05/11/2020 12:00 AM",_4:{_1:{_1:1589209200000000,_2:"11:00",_3:"",_4:{n:50200,v:{_LengthInHours:2,_OhUser:"Samuel Gruetter"}}},_2:{_1:{_1:1589221800000000,_2:" 2:30",_3:"",_4:{n:50198,v:{_LectureNum:24,_LectureTitle:"Coq Proof Automation III: Proof by Reflection"}}},_2:{_1:{_1:1589221800000000,_2:" 2:30",_3:"due",_4:{n:50201,v:{_PsetNum:12}}},_2:null}}}},_2:{_1:{_1:1589259600000000,_2:"May 12",_3:"05/12/2020 12:00 AM",_4:{_1:{_1:1589299200000000,_2:null,_3:"",_4:{n:50199,v:{_Notable:"Last Day of Classes"}}},_2:null}},_2:{_1:{_1:1589346000000000,_2:"May 13",_3:"05/13/2020 12:00 AM",_4:null},_2:{_1:{_1:1589432400000000,_2:"May 14",_3:"05/14/2020 12:00 AM",_4:null},_2:{_1:{_1:1589518800000000,_2:"May 15",_3:"05/15/2020 12:00 AM",_4:null},_2:{_1:{_1:1589605200000000,_2:"May 16",_3:"05/16/2020 12:00 AM",_4:null},_2:{_1:{_1:1589691600000000,_2:"May 17",_3:"05/17/2020 12:00 AM",_4:null},_2:null}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}));s1_31=sc(exec({c:"c",v:0}));</script>
<title>MIT 6.822, Spring 2020</title>
<meta content="width=device-width, initial-scale=1, shrink-to-fit=no" name="viewport">
<link href="https://maxcdn.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css" rel="stylesheet"><link href="https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css" rel="stylesheet"><link href="/style.css" rel="stylesheet">
<link href="https://www.eecs.mit.edu/sites/all/themes/adaptivetheme/miteecs_adaptive_production/favicon.ico" rel="shortcut icon" type="image/vnd.microsoft.icon">
</head>
<body onload="isPost=false;client_id=37;client_pass=1014117143;url_prefix=&quot;/&quot;;timeout=7200;sig=&quot;DD25BB6756D732155A40F48A3A7919DD29F456DDC4C5F5B581977DFE8F23A93E&quot;;listener();exec({c:&quot;a&quot;,f:{c:&quot;a&quot;,f:{c:&quot;a&quot;,f:{c:&quot;n&quot;,n:51395},x:{c:&quot;c&quot;,v:{n:50191,v:null}}},x:{c:&quot;c&quot;,v:{_1:{_1:null,_2:null},_2:{_1:null,_2:{_1:{_Lecture:{_Description:null,_LectureNum:null,_LectureTitle:null,_VideoUrl:null},_Notable:{_Notable:null},_OfficeHours:{_LengthInHours:null,_OhUser:{_1:&quot;Adam Chlipala&quot;,_2:{_1:&quot;Samuel Gruetter&quot;,_2:{_1:&quot;Andres Erbsen&quot;,_2:null}}}},_Pset:{_GradesDue:&quot;09/16/2020 02:11 PM&quot;,_Instructions:null,_PsetNum:null}},_2:0,_3:s1_30,_4:{_Lecture:false,_Notable:false,_OfficeHours:false,_Pset:false}}}}}},x:{c:&quot;c&quot;,v:null}})" onunload="unloading=true;;unload()" style="padding-top: 79px;">
<div class="modal" id="uw1">
<script type="text/javascript">dyn("span", execD({c:"a",f:{c:"a",f:{c:"n",n:51396},x:{c:"c",v:s1_29}},x:{c:"c",v:null}}))</script><span></span><script></script>
</div>
<header>
<nav class="navbar navbar-expand-md navbar-dark fixed-top bg-dark">
<a class="navbar-brand" href="/main">MIT 6.822, Spring 2020</a>
<button class="navbar-toggler" data-toggle="collapse" data-target="#uw0" aria-controls="navbarCollapse" aria-expanded="false" aria-label="Toggle navigation">
<span class="navbar-toggler-icon"></span>
</button>
<div class="collapse navbar-collapse" id="uw0">
<ul class="nav navbar-nav">

 <script type="text/javascript">dynClass("span",execD({c:"a",f:{c:"a",f:{c:"a",f:{c:"n",n:51398},x:{c:"c",v:2}},x:{c:"c",v:s1_31}},x:{c:"c",v:null}}),execD({c:"a",f:{c:"a",f:{c:"a",f:{c:"n",n:51399},x:{c:"c",v:2}},x:{c:"c",v:s1_31}},x:{c:"c",v:null}}),null)</script><li onclick="uw_event=event;exec(cr(0))" class="nav-item active"><a class="nav-link">Course Info</a><script></script></li>

 <script type="text/javascript">dynClass("span",execD({c:"a",f:{c:"a",f:{c:"a",f:{c:"a",f:{c:"n",n:51401},x:{c:"c",v:2}},x:{c:"c",v:s1_31}},x:{c:"c",v:"Calendar"}},x:{c:"c",v:null}}),execD({c:"a",f:{c:"a",f:{c:"a",f:{c:"n",n:51402},x:{c:"c",v:2}},x:{c:"c",v:s1_31}},x:{c:"c",v:null}}),null)</script><li onclick="uw_event=event;exec(cr(1))" class="nav-item"><a class="nav-link">Calendar</a><script></script></li>

</ul>
</div>
</nav>
</header>
<main class="container" role="main">
<script type="text/javascript">dyn("span", execD({c:"a",f:{c:"a",f:{c:"a",f:{c:"a",f:{c:"a",f:{c:"a",f:{c:"a",f:{c:"n",n:51404},x:{c:"c",v:{n:50191,v:null}}},x:{c:"c",v:"uw1"}},x:{c:"c",v:s1_29}},x:{c:"c",v:{_1:{_1:null,_2:null},_2:{_1:null,_2:{_1:{_Lecture:{_Description:null,_LectureNum:null,_LectureTitle:null,_VideoUrl:null},_Notable:{_Notable:null},_OfficeHours:{_LengthInHours:null,_OhUser:{_1:"Adam Chlipala",_2:{_1:"Samuel Gruetter",_2:{_1:"Andres Erbsen",_2:null}}}},_Pset:{_GradesDue:"09/16/2020 02:11 PM",_Instructions:null,_PsetNum:null}},_2:0,_3:s1_30,_4:{_Lecture:false,_Notable:false,_OfficeHours:false,_Pset:false}}}}}},x:{c:"c",v:2}},x:{c:"c",v:s1_31}},x:{c:"c",v:null}}))</script><span><p>
<a class="btn btn-primary btn-lg" href="/Private/student/_">Go to student portal</a>
(requires an <a href="https://ist.mit.edu/certificates">MIT client certificate</a>)
</p>
<div class="jumbotron">
<div class="container">
<h1>Formal Reasoning About Programs</h1>
<p>A graduate course at MIT in Spring 2020</p>
</div>
</div>
<table class="table">
<tbody><tr> <th>Subject number:</th> <td>6.822</td> </tr>
<tr> <th>Instructor:</th> <td><a href="http://adam.chlipala.net/">Adam Chlipala</a></td> </tr>
<tr> <th>Teaching assistants:</th> <td><a href="http://andres.systems/">Andres Erbsen</a><br><a href="https://samuelgruetter.net/">Sam Gruetter</a></td> </tr>
<tr> <th>Class meets:</th> <td>MW 2:30-4:00, 2-105</td> </tr>
</tbody></table>
<h3>Key links: <a href="http://adam.chlipala.net/frap/">book and related source code</a>; <a href="https://github.com/mit-frap/spring20">GitHub repo with problem sets</a></h3>
<h2>What's it all about?</h2>
<p><i>Briefly</i>, this course is about an approach to bringing software engineering up to speed with more traditional engineering disciplines, providing a mathematical foundation for rigorous analysis of realistic computer systems. As civil engineers apply their mathematical canon to reach high certainty that bridges will not fall down, the software engineer should apply a different canon to argue that programs behave properly. As other engineering disciplines have their computer-aided-design tools, computer science has <i>proof assistants</i>, IDEs for logical arguments. We will learn how to apply these tools to certify that programs behave as expected.</p>
<p><i>More specifically</i>: Introductions to two intertangled subjects: <b><a href="http://coq.inria.fr/">the Coq proof assistant</a>, a tool for machine-checked mathematical theorem proving</b>; and <b>formal logical reasoning about the correctness of programs</b>. The latter category overlaps significantly with MIT's <a href="http://stellar.mit.edu/S/course/6/fa15/6.820/">6.820</a>, but we will come to appreciate the material at a different level, by focusing on machine-checked proofs, both of the soundness of general reasoning techniques and of the correctness of particular programs.</p>
<p>We welcome participation by graduate and undergraduate students from MIT and other local universities, as well as other auditors interested in jumping into this material. Per MIT's academic calendar, the first class meeting will be on February 3rd.</p>
<h2>Major topics covered</h2>
<p>Here's a tentative syllabus.</p>
<table class="table">
<tbody><tr><th>Foundations</th></tr>
<tr><td>Inductive types, recursive functions, induction, and rewriting: the heart of formal reasoning, and useful for defining and reasoning about language interpreters</td></tr>
<tr><td>Data abstraction in the presence of formal proofs</td></tr>
<tr><td>Inductively defined relations and rule induction, applied to invariant-based verification of state machines</td></tr>
<tr><td>Model checking and abstraction: finitizing state spaces with clever relations</td></tr>
<tr><td>Operational semantics: the standard approach to give meanings to programs</td></tr>
<tr><td>Compiler verification</td></tr>
<tr><td>Abstract interpretation</td></tr>
<tr><th>Type Systems</th></tr>
<tr><td>Lambda-calculus semantics</td></tr>
<tr><td>Type systems and the syntactic approach to type soundness</td></tr>
<tr><td>Advanced type-system features: subtyping, mutable references</td></tr>
<tr><th>Program Logics</th></tr>
<tr><td>Hoare logic: an approach to verifying imperative programs</td></tr>
<tr><td>Deep embeddings, shallow embeddings, and options in between: choices for how to represent programs formally</td></tr>
<tr><td>Separation logic: reasoning about aliasing and pointer-based data structures</td></tr>
<tr><th>Concurrency</th></tr>
<tr><td>Operational semantics for concurrent programs, illustrated with partial-order reduction for model checking</td></tr>
<tr><td>Concurrent Separation Logic and rely-guarantee reasoning: verifying shared-memory programs</td></tr>
<tr><td>Pi-calculus and behavioral refinement: modular reasoning about message-passing functional programs</td></tr>
</tbody></table>
<h2>The big ideas</h2>
<p>That's quite a lot of topics, isn't it? We'll be sticking to techniques for proving <i>safety properties</i> (and we'll clarify what that term means), so there's even a whole other world of foundational ideas for proving other sorts of program properties! Nonetheless, a key goal of the course is to clarify how all of these techniques can be seen as applying a few <b>big ideas</b> of semantics and verification:</p>
<table class="table">
<tbody><tr><th>Encoding</th> <td>There are an awful lot of different ways to formalize the shape and behavior of programs, and the choice of a method can have big consequences for how easy the proofs are.</td></tr>
<tr><th>Invariants</th> <td>Almost all program proofs come down to finding invariants of state machines. That is, we prove that some property holds of all reachable states of a formal system, and we show that the property implies the one we started out trying to prove.</td></tr>
<tr><th>Abstraction</th> <td>Often we replace one state machine with a simpler one that somehow represents it faithfully enough with respect to the property of interest.</td></tr>
<tr><th>Modularity</th> <td>We also often break a complex state machine into several simpler ones that can be analyzed independently.</td></tr>
</tbody></table>
<h2>Mechanics</h2>
<p>Most homework assignments are mechanized proofs that are checked automatically. Once a month, though, we'll have an assignment that also involves choosing the right theorems to prove in the first place, which usually involves defining some program reasoning system for a domain that we describe in a handout.</p>
<p>There are two lectures per week. At the very beginning, we'll spend all the lecture time on basics of Coq. Shortly afterward, we'll switch to, each week, having one lecture on a concept in semantics and/or proofs of program correctness and one lecture on some moderate-to-advanced feature of Coq.</p>
<p>Grades are based entirely on <i>problem sets</i> (mostly graded by the machines), and a new one is released right after each Wednesday lecture, due a week later (or a little earlier, usually starts of class periods; see each assignment's posting for details). Late problem-set turn-in is accepted, but 20% is subtracted from the grade for every day late, starting one second after the posted deadline, so don't bet your grade on details of the server's clock! (In other words, any fractional late time is rounded up to a whole day, before applying the 20%-per-day penalty.)</p>
<p>It takes a while to internalize all the pro tips for writing Coq proofs productively. It really helps to have experts nearby to ask in person. For that reason, we will also have copious <i>office hours</i>, in the neighborhood of 10 hours per week. Course staff members will be around, and we also encourage students to help each other at these sessions. We'll take a poll on the best times for office hours, but the default theory is that the day before an assignment is due and the day after it is released are the best times.</p>
<p><b>Academic-integrity guidelines:</b> Learning to drive a proof assistant is hard work, and it's valuable to be able to ask for help from your classmates. For that reason, we allow asking for help from classmates, not just the course staff, with no particular acknowledgment in turned-in solutions. However, the requirement is that <i>you have entered your problem-set code/proofs yourself, without someone else looking over your shoulder telling you more or less what to type at every stage</i>. Use your judgment about exactly which interaction styles will stay compatible with this rule. You'll generally learn more as you spend time working through the parts of assignments where you don't wind up stuck on something, and it's generally valuable to seek help (from classmates or course staff) when you're stuck.</p>
<h2>Prerequisites</h2>
<p>Two main categories of prior knowledge are assumed: <i>mathematical foundations of computer science, including rigorous proofs with induction</i>; and <i>intermediate-level programming experience, including familiarity with concepts like higher-order functions, pointers, and multithreading</i>. MIT's 6.042 and 6.031 should respectively satisfy those requirements, but many other ways of coming by this core knowledge should also be fine. We'll start off pretty quickly with functional programming in Coq, as our main vehicle for expressing programs and their specifications. Many students find it unnecessary to have studied functional programming beforehand, but others appreciate learning a bit about Haskell or OCaml on their own first. (6.820 also provides lightning-speed introductions to those languages.)</p>
<h2>Suggested reading</h2>
<p>The main source is <a href="http://adam.chlipala.net/frap/">the book <i>Formal Reasoning About Programs</i></a>, which is in decent shape from the prior offering of this subject, but which will likely have small changes made as we go.</p>
<p>The course is intended to be self-contained, and notes and example Coq code will be in <a href="https://github.com/achlipala/frap">the book's GitHub repo</a>. We'll also be using a custom Coq library designed to present a relatively small set of primitive commands to be learned. However, the following popular sources may be helpful supplements.</p>
<h3>The Coq proof assistant</h3>
<ul>
<li><a href="http://adam.chlipala.net/cpdt/"><i>Certified Programming with Dependent Types</i></a>, the instructor's book introducing Coq at a more advanced level</li>
<li><a href="https://www.labri.fr/perso/casteran/CoqArt/"><i>Interactive Theorem Proving and Program Development (Coq'Art)</i></a>, the first book about Coq</li>
<li><a href="https://softwarefoundations.cis.upenn.edu/"><i>Software Foundations</i></a>, a popular introduction to Coq that covers ideas similar to the ones in this course, at a slower pace</li>
</ul>
<h3>Semantics and program proof</h3>
<ul>
<li><a href="https://www.cis.upenn.edu/~bcpierce/tapl/"><i>Types and Programming Languages</i></a></li>
<li><a href="https://mitpress.mit.edu/books/formal-semantics-programming-languages"><i>The Formal Semantics of Programming Languages: An Introduction</i></a></li>
<li><a href="http://www.amazon.com/Practical-Foundations-Programming-Languages-Professor/dp/1107029570"><i>Practical Foundations for Programming Languages</i></a></li>
</ul>
<h2>This web app...</h2>
<p>...is built using advanced type-system ideas relevant to the course, and <a href="https://github.com/achlipala/frapapp">the source code is available</a>. Pull requests welcome!</p>
</span><script></script>
</main>

</body></html>