<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
<meta content="text/html; charset=utf-8" http-equiv="Content-Type"/>
<title>Seth Copen Goldstein's Homepage</title>
</head>
<body>
<div>
<table>
<tbody>
<tr>
<td align="left" nowrap="nowrap">
<h1>Seth Copen Goldstein</h1>
</td>
<td width="100%"> </td>
<td align="right" nowrap="nowrap" valign="top"></td>
</tr>
</tbody>
</table>
<p style="margin-left: 40px;"><span style="font-family: cambria;">You
can reach me at:<br/>
</span></p>
<p><span style="font-family: cambria;"></span></p>
<table border="0" cellpadding="2" cellspacing="2" style="margin-left: auto; margin-right: auto; width: 75%; text-align: left;">
<tbody>
<tr>
<td style="vertical-align: top; font-family: cambria;"> <b>Office:
      </b><br/>
<div style="margin-left: 40px;">7111 Gates-Hillman Complex<br/>
<a href="http://www.cs.cmu.edu/">School of Computer Science</a> <br/>
<a href="http://www.cmu.edu/">Carnegie Mellon University</a><br/>
5000 Forbes Avenue<br/>
Pittsburgh, PA  15213-3891<br/>
(412) 268-3828 <br/>
<br/>
</div>
<b>Fax:</b>  (412) 268-5576  <br/>
<br/>
<b>Email:  </b><a href="mailto:seth@cs.cmu.edu">seth AT
cmu.edu</a> <br/>
<br/>
<span style="font-weight: bold;">Assistant:</span><br/>
<div style="margin-left: 40px;">Christina Contreras<br/>
</div>
<div style="margin-left: 40px;">7008 Gates-Hillman Complex<br/>
</div>
<div style="margin-left: 40px;">(412) 268-1120<br/>
</div>
<div style="margin-left: 40px;"><a href="mailto:christina@cs.cmu.edu"> christina AT cs.cmu.edu</a></div>
</td>
<td style="vertical-align: top;">
<p style="text-align: center;"><a href="http://www.cs.cmu.edu/%7Eseth/seth.jpg"><img alt="seth goldstein" hspace="12" id="_x0000_i1025" src="seth_goldstein.jpg" style="border: 0px solid ; width: 464px; height: 320px;"/></a></p>
</td>
</tr>
</tbody>
</table>
<p style="font-family: cambria; margin-left: 40px;">The best way to
schedule an appointment with me is through Christina Contreras.<br/>
</p><p style="font-family: cambria; margin-left: 40px;">Here are my <a href="https://www.andrew.cmu.edu/user/sethg/oh.html">office hours for Fall 2017</a>.<br/>
<br/>
</p>
<div align="center" style="text-align: center;">
<hr align="center" size="2" width="100%"/></div>
<ul>
<li><a href="http://www.cs.cmu.edu/~seth/llvm">LLVM related notes</a>: My recent experiences with llvm.  Questions, Answers, and hints.</li>
<li><a href="http://www.cs.cmu.edu/%7Eclaytronics">Claytronics</a>:
A form of Programmable matter and the basis for synthetic reality </li>
<li><a href="http://www.cs.cmu.edu/%7Ephoenix">Phoenix</a>:
Computing without processors </li>
<li><a href="http://www.cs.cmu.edu/%7Ephoenix/amail/">Authenticated
E-mail Project</a> </li>
<li><a href="http://www.cinr.org/">Center for Interdisciplinary
Nanotechnology Research</a> </li>
<li><a href="papers.html">Publications</a> </li>
<li><a href="http://www.cs.cmu.edu/%7Eseth/pubkey.html">Public Key</a>
</li>
<li><a href="sfsf.htm">Science Fact from Science Fiction</a> </li>
</ul>
<h4 align="center" style="text-align: center;">
<hr align="center" size="2" width="100%"/></h4>
<h4>Teaching:</h4>
<p style="margin-left: 0.5in;">Spring 19:  <a href="http://www.cs.cmu.edu/afs/cs/academic/class/15213-s19/www">15-213/15-513/18-213 Introduction to Computer Systems</a><br/>
</p><p style="margin-left: 0.5in;">Fall 18:  <a href="http://www.cs.cmu.edu/~msakr/15619-f18/">15-319/15-619 Cloud Computing</a><br/>
</p><p style="margin-left: 0.5in;">Spring 18:  <a href="http://www.cs.cmu.edu/afs/cs/academic/class/15213-s18/www">15-213/15-513/18-213 Introduction to Computer Systems</a><br/>
</p><p style="margin-left: 0.5in;">Fall 17:  <a href="http://www.cs.cmu.edu/~msakr/15619-f17/">15-319/15-619 Cloud Computing</a><br/>
</p><p style="margin-left: 0.5in;">Spring 17:  <a href="http://www.cs.cmu.edu/afs/cs/academic/class/15213-s17/www">15-213/15-513/18-213 Introduction to Computer Systems</a><br/>
</p><p style="margin-left: 0.5in;">Fall 16:  <a href="http://www.cs.cmu.edu/~msakr/15619-f16/">15-319/15-619 Cloud Computing</a><br/>
</p><p style="margin-left: 0.5in;">Spring 16:  <a href="http://www.cs.cmu.edu/afs/cs/academic/class/15213-s16/www">15-213/15-513/18-213 Introduction to Computer Systems</a><br/>
</p><p style="margin-left: 0.5in;">Fall 15:  <a href="http://www.cs.cmu.edu/afs/cs/academic/class/15740-f15/www">15-740 Computer Architecture</a><br/>
</p><p style="margin-left: 0.5in;">Spring 15:  <a href="http://www.cs.cmu.edu/afs/cs/academic/class/15213-s15/www">15-213/15-513/18-213 Introduction to Computer Systems</a><br/>
</p><p style="margin-left: 0.5in;">Fall 14:  <a href="http://www.cs.cmu.edu/afs/cs/academic/class/15740-f14/www">15-740 Computer Architecture</a><br/>
</p><p style="margin-left: 0.5in;">Spring 14:  <a href="http://www.cs.cmu.edu/afs/cs/academic/class/15213-s14/www">Introduction to Computer Systems</a>
</p><p style="margin-left: 0.5in;">Fall 13:  <a href="http://www.cs.cmu.edu/afs/cs/academic/class/15740-f13/www">15-740 Computer Architecture</a>
</p><p style="margin-left: 0.5in;">Spring 13:  <a href="http://www.cs.cmu.edu/afs/cs/academic/class/15213-s13/www">Introduction to Computer Systems</a>
</p><p style="margin-left: 0.5in;">Spring 10:  <a href="http://www.cs.cmu.edu/%7Esrini/15-441/Spring 2010/">Computer Networks</a><br/>
Fall 09: <a href="http://www.cs.cmu.edu/afs/cs/academic/class/15745-f09/www/index.html">Optimizing
Compilers for Modern Architectures</a><br/>
Spring 09: <a href="http://www.cs.cmu.edu/afs/cs/academic/class/15745-s09/www/index.html">Optimizing
Compilers for Modern Architectures</a><br/>
Fall 08: <a href="http://www.cs.cmu.edu/%7Edga/15-441/Fall 2008/">15-411
Introduction to Computer Networks</a><br/>
Spring 08: <a href="http://www.cs.cmu.edu/afs/cs/academic/class/15745-s08/www/index.html">Optimizing
Compilers for Modern Architectures</a><br/>
Spring 07: Optimizing Compilers for Modern Architectures<br/>
Fall 06: Compiler Design <br/>
Spring  2006: Fundamental Data Structures and Algorithms<br/>
Fall  2005: <a href="http://www.cs.cmu.edu/afs/cs/academic/class/15398-f05/www/index.html">Introduction
to Nanotechnology</a><br/>
Spring  2005: <a href="http://www.cs.cmu.edu/afs/cs/academic/class/15745-s05/www/index.html">Optimizing
Compilers for Modern Architectures</a><br/>
Fall  2004: <a href="http://www.cs.cmu.edu/afs/cs/academic/class/15398-f04/www/index.html">Introduction
to Nanotechnology</a> <br/>
Spring  2004: <a href="http://www.cs.cmu.edu/afs/cs/academic/class/15213-s04/www/index.html">Introduction
to Computer Systems</a> <br/>
Fall  2003: <a href="http://www.cs.cmu.edu/afs/cs/academic/class/15740-f03/www/index.html">Computer
Architecture</a> <br/>
Spring  2003: <a href="http://www.cs.cmu.edu/afs/cs/academic/class/15213-s03/www/index.html">Introduction
to Computer Systems</a> <br/>
Fall  2002: Computer Architecture <br/>
Spring  2002: <a href="http://www.cs.cmu.edu/afs/cs/academic/class/15849c-s02/www/index.html">Electronic
Nanotechnology</a> <br/>
Spring  2002: <a href="http://www.cs.cmu.edu/afs/cs/academic/class/15745-s02/www/index.html">Optimizing
Compilers for Modern Architectures</a> <br/>
Fall  2001: Compiler Design, 15-411 <br/>
Spring  2001: Optimizing Compilers for Modern Architectures <br/>
Fall  2000: Compiler Design, 15-411 <br/>
Fall  1999: Fundamental Structures of Computer Science I, 15-211 <br/>
Spring  1999: Reconfigurable Computing, 15-828 <br/>
Fall  1998: Fundamental Structures of Computer Science I, 15-211 <br/>
Spring  1998: <a href="http://www.cs.cmu.edu/%7Eseth/15828">Reconfigurable
Computing, 15-828</a> . <br/>
Fall  1997: Fundamental Structures of Computer Science I, 15-211.</p>
<h4>Research:</h4>
<p style="margin-left: 0.5in;">My current research is focused on
electronic nanotechnology and reconfigurable computing.  I am
involved in
the <a href="http://www-2.cs.cmu.edu/%7Eseth/phoenix">Phoenix</a>
project and the
<a href="http://www.ece.cmu.edu/research/piperench/">CMU reconfigurable
computing project</a>.  My special interest is in compilers and
high-level
architectures for reconfigurable computing devices.</p>
<h4>Current Graduate Students:</h4>
<ul>
<li>Field Cady </li>
<li><a href="http://www-2.cs.cmu.edu/%7Emderosa/">Mike
DeRosa</a> </li>
<li>Mustafa Emre Karagozler </li>
<li><a href="http://www.cs.cmu.edu/%7Edkoes">David
Koes</a> </li>
<li><a href="http://www.cs.cmu.edu/%7Emahim">Mahim
Mishra</a> </li>
<li><a href="http://www.cs.cmu.edu/%7Empa">Michael
Ashley-Rollman</a> </li>
</ul>
<h4>Graduated Students:</h4>
<ul>
<li><a href="http://www.ece.cmu.edu/%7Egirishv">Girish
Venkataramani</a> </li>
<li>Suraj Sudhir, Sun Microsystems </li>
<li>Hari Cadambi, NEC Labs </li>
<li><a href="http://www.cs.cmu.edu/%7Emihaib">Mihai-Dan
Budiu</a>, Microsoft Research </li>
</ul>
<h4>Past Post Docs/System Scientists:</h4>
<ul>
<li><a href="http://www-2.cs.cmu.edu/%7Etcal/">Tim
Callahan</a> </li>
<li>Tiberiu Chelcea </li>
</ul>
<div align="center" style="text-align: center;">
<hr align="center" size="2" width="100%"/></div>
</div>
<script type="text/javascript">
var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
</script>
<script type="text/javascript">
try {
var pageTracker = _gat._getTracker("UA-10235745-1");
pageTracker._trackPageview();
} catch(err) {}</script>
<div>
<!-- CONTENT -->
<h1>Seth Copen Goldstein Publications Listed  by Year</h1>
<table><tr><td class="sidebar"><table>
<tr><td nowrap="">Papers by year</td></tr>
<tr><td nowrap=""><a href="papersbytopic.html">Papers by topic</a></td></tr>
<tr><td nowrap=""><a href="papersbycoauthor.html">Papers by author</a></td></tr>
<tr><td nowrap=""><hr/></td></tr>
<tr><td nowrap=""><a href="javascript:toggleallabs()">toggle abstracts</a></td></tr>
<tr><td nowrap=""><hr/></td></tr>
<tr><td nowrap=""><a href="mailto:seth@cs.cmu.edu">Report bugs</a></td></tr>
<tr><td nowrap=""><hr/></td></tr>
<tr><td>Click on title for info on paper</td></tr>
</table></td><td class="vertical"> </td><td class="content">
<a name="byyear"></a><h2>Papers by Year (Most Recent on the top)</h2>
<table class="all">
<tr><td class="year">2016</td><td class="entry"><a name="npgb16a"></a><a name="topnpgb16a">
</a><a class="title" href="http://www.cs.cmu.edu/~seth/papers/npgb16a.html">A Time Synchronization Protocol for Modular Robots</a></td><td class="links" nowrap=""><a class="pdf" href="http://dx.doi.org/10.1109/PDP.2016.73">pdf</a> <a class="bib" href="javascript:togglebib('npgb16a')">bib</a> </td></tr><tr><td></td><td class="authinfo" colspan="2">
<a class="authinfo" href="http://www.cs.cmu.edu/~seth/helpmefind.html">Andre Naz</a>, <a class="authinfo" href="http://www.cs.cmu.edu/~seth/helpmefind.html">Benoît Piranda</a>, <a class="authinfo" href="http://www.cs.cmu.edu/~seth">Seth Copen Goldstein</a>, and <a class="authinfo" href="http://www.cs.cmu.edu/~seth/helpmefind.html">Julien Bourgeois</a>.
In <em>24th Euromicro International Conference on Parallel, Distributed, and Network-Based Processing, PDP 2016, Heraklion, Crete, Greece, February 17-19, 2016</em>,
pages 109–118, 2016.
</td></tr>
<tr><td></td><td colspan="2"><a name="bibnpgb16a"><pre class="invisible" id="bibtextnpgb16a">@inproceedings{npgb16a,
  author = {Naz, Andre and Piranda, Beno{\^{\i}}t and Goldstein, Seth
     Copen and Bourgeois, Julien},
  title = {A Time Synchronization Protocol for Modular Robots},
  booktitle = {24th Euromicro International Conference on Parallel,
     Distributed, and Network-Based Processing, {PDP} 2016, Heraklion,
     Crete, Greece, February 17-19, 2016},
  pages = {109--118},
  year = {2016},
  url = {http://dx.doi.org/10.1109/PDP.2016.73},
  doi = {10.1109/PDP.2016.73},
}
</pre></a></td></tr>
<tr><td></td><td class="entry"><a name="npgb16"></a><a name="topnpgb16">
</a><a class="title" href="http://www.cs.cmu.edu/~seth/papers/npgb16.html">Approximate-Centroid Election in Large-Scale Distributed Embedded Systems</a></td><td class="links" nowrap=""><a class="pdf" href="http://dx.doi.org/10.1109/AINA.2016.109">pdf</a> <a class="bib" href="javascript:togglebib('npgb16')">bib</a> </td></tr><tr><td></td><td class="authinfo" colspan="2">
<a class="authinfo" href="http://www.cs.cmu.edu/~seth/helpmefind.html">André Naz</a>, <a class="authinfo" href="http://www.cs.cmu.edu/~seth/helpmefind.html">Benoît Piranda</a>, <a class="authinfo" href="http://www.cs.cmu.edu/~seth">Seth Copen Goldstein</a>, and <a class="authinfo" href="http://www.cs.cmu.edu/~seth/helpmefind.html">Julien Bourgeois</a>.
In <em>30th IEEE International Conference on Advanced Information Networking and Applications, AINA 2016, Crans-Montana, Switzerland, 23-25 March, 2016</em>,
pages 548–556, 2016.
</td></tr>
<tr><td></td><td colspan="2"><a name="bibnpgb16"><pre class="invisible" id="bibtextnpgb16">@inproceedings{npgb16,
  author = {Naz, Andr{\'{e}} and Piranda, Beno{\^{\i}}t and Goldstein,
     Seth Copen and Bourgeois, Julien},
  title = {Approximate-Centroid Election in Large-Scale Distributed
     Embedded Systems},
  booktitle = {30th {IEEE} International Conference on Advanced
     Information Networking and Applications, {AINA} 2016,
     Crans-Montana, Switzerland, 23-25 March, 2016},
  pages = {548--556},
  year = {2016},
  url = {http://dx.doi.org/10.1109/AINA.2016.109},
  doi = {10.1109/AINA.2016.109},
}
</pre></a></td></tr>
<tr><td></td><td class="entry"><a name="crb16"></a><a name="topcrb16">
</a><a class="title" href="http://www.cs.cmu.edu/~seth/papers/crb16.html">Declarative coordination of graph-based parallel programs</a></td><td class="links" nowrap=""><a class="pdf" href="http://doi.acm.org/10.1145/2851141.2851153">pdf</a> <a class="bib" href="javascript:togglebib('crb16')">bib</a> </td></tr><tr><td></td><td class="authinfo" colspan="2">
<a class="authinfo" href="http://www.cs.cmu.edu/~seth/helpmefind.html">Flávio Cruz</a>, <a class="authinfo" href="http://www.cs.cmu.edu/~seth/helpmefind.html">Ricardo Rocha</a>, and <a class="authinfo" href="http://www.cs.cmu.edu/~seth">Seth Copen Goldstein</a>.
In <em>Proceedings of the 21st ACM SIGPLAN Symposium on Principles and Practice of Parallel Programming, PPoPP 2016, Barcelona, Spain, March 12-16, 2016</em>,
pages 4:1–4:12, 2016.
</td></tr>
<tr><td></td><td colspan="2"><a name="bibcrb16"><pre class="invisible" id="bibtextcrb16">@inproceedings{crb16,
  author = {Cruz, Fl{\'{a}}vio and Rocha, Ricardo and Goldstein, Seth
     Copen},
  title = {Declarative coordination of graph-based parallel programs},
  booktitle = {Proceedings of the 21st {ACM} {SIGPLAN} Symposium on
     Principles and Practice of Parallel Programming, PPoPP 2016,
     Barcelona, Spain, March 12-16, 2016},
  pages = {4:1--4:12},
  year = {2016},
  url = {http://doi.acm.org/10.1145/2851141.2851153},
  doi = {10.1145/2851141.2851153},
}
</pre></a></td></tr>
<tr><td class="year">2015</td><td class="entry"><a name="bg15"></a><a name="topbg15">
</a><a class="title" href="http://www.cs.cmu.edu/~seth/papers/bg15.html">Distributed Intelligent MEMS: Progresses and Perspectives</a></td><td class="links" nowrap=""><a class="pdf" href="http://dx.doi.org/10.1109/JSYST.2013.2281124">pdf</a> <a class="bib" href="javascript:togglebib('bg15')">bib</a> </td></tr><tr><td></td><td class="authinfo" colspan="2">
<a class="authinfo" href="http://www.cs.cmu.edu/~seth/helpmefind.html">Julien Bourgeois</a> and <a class="authinfo" href="http://www.cs.cmu.edu/~seth">Seth Copen Goldstein</a>.
<em>IEEE Systems Journal</em>,
9(3):1057–1068, Sep 2015.
</td></tr>
<tr><td></td><td colspan="2"><a name="bibbg15"><pre class="invisible" id="bibtextbg15">@article{bg15,
  author = {Bourgeois, Julien and Goldstein, Seth Copen},
  title = {Distributed Intelligent {MEMS:} Progresses and
     Perspectives},
  journal = {{IEEE} Systems Journal},
  volume = {9},
  number = {3},
  issn = {1932-8184},
  month = {Sep},
  keywords = {distributed programming;electronic engineering
     computing;knowledge based systems;mechanical engineering
     computing;micromechanical devices;communication;coordinated
     actuation;distributed computing;distributed intelligent MEMS
     systems;embedded intelligence;manufacturing
     scalability;microelectromechanical systems;mobility
     management;programming;Actuators;Hardware;Micromechanical
     devices;Network
     topology;Scalability;Sensors;Topology;Claytronics;Smart
     Blocks;Smart Surface;distributed computing;microelectromechanical
     systems (MEMS)},
  pages = {1057--1068},
  year = {2015},
  url = {http://dx.doi.org/10.1109/JSYST.2013.2281124},
  doi = {10.1109/JSYST.2013.2281124},
}
</pre></a></td></tr>
<tr><td></td><td class="entry"><a name="npgb15"></a><a name="topnpgb15">
</a><a class="title" href="http://www.cs.cmu.edu/~seth/papers/npgb15.html">ABC-Center: Approximate-center election in modular robots</a></td><td class="links" nowrap=""><a class="pdf" href="http://dx.doi.org/10.1109/IROS.2015.7353784">pdf</a> <a class="bib" href="javascript:togglebib('npgb15')">bib</a> </td></tr><tr><td></td><td class="authinfo" colspan="2">
<a class="authinfo" href="http://www.cs.cmu.edu/~seth/helpmefind.html">Andre Naz</a>, <a class="authinfo" href="http://www.cs.cmu.edu/~seth/helpmefind.html">Benoît Piranda</a>, <a class="authinfo" href="http://www.cs.cmu.edu/~seth">Seth Copen Goldstein</a>, and <a class="authinfo" href="http://www.cs.cmu.edu/~seth/helpmefind.html">Julien Bourgeois</a>.
In <em>2015 IEEE/RSJ International Conference on Intelligent Robots and Systems, IROS 2015, Hamburg, Germany, September 28 - October 2, 2015</em>,
pages 2951–2957, 2015.
</td></tr>
<tr><td></td><td colspan="2"><a name="bibnpgb15"><pre class="invisible" id="bibtextnpgb15">@inproceedings{npgb15,
  author = {Naz, Andre and Piranda, Beno{\^{\i}}t and Goldstein, Seth
     Copen and Bourgeois, Julien},
  title = {ABC-Center: Approximate-center election in modular robots},
  booktitle = {2015 {IEEE/RSJ} International Conference on Intelligent
     Robots and Systems, {IROS} 2015, Hamburg, Germany, September 28 -
     October 2, 2015},
  pages = {2951--2957},
  year = {2015},
  url = {http://dx.doi.org/10.1109/IROS.2015.7353784},
  doi = {10.1109/IROS.2015.7353784},
}
</pre></a></td></tr>
<tr><td></td><td class="entry"><a name="lbmg15"></a><a name="toplbmg15">
</a><a class="title" href="http://www.cs.cmu.edu/~seth/papers/lbmg15.html">Energy-aware parallel self-reconfiguration for chains microrobot networks</a></td><td class="links" nowrap=""><a class="pdf" href="http://dx.doi.org/10.1016/j.jpdc.2014.10.003">pdf</a> <a class="bib" href="javascript:togglebib('lbmg15')">bib</a> </td></tr><tr><td></td><td class="authinfo" colspan="2">
<a class="authinfo" href="http://www.cs.cmu.edu/~seth/helpmefind.html">Hicham Lakhlef</a>, <a class="authinfo" href="http://www.cs.cmu.edu/~seth/helpmefind.html">Julien Bourgeois</a>, <a class="authinfo" href="http://www.cs.cmu.edu/~seth/helpmefind.html">Hakim Mabed</a>, and <a class="authinfo" href="http://www.cs.cmu.edu/~seth">Seth Copen Goldstein</a>.
<em>J. Parallel Distrib. Comput.</em>,
volume 75, pages 67–80, 2015.
</td></tr>
<tr><td></td><td colspan="2"><a name="biblbmg15"><pre class="invisible" id="bibtextlbmg15">@article{lbmg15,
  author = {Lakhlef, Hicham and Bourgeois, Julien and Mabed, Hakim and
     Goldstein, Seth Copen},
  title = {Energy-aware parallel self-reconfiguration for chains
     microrobot networks},
  journal = {J. Parallel Distrib. Comput.},
  volume = {75},
  pages = {67--80},
  year = {2015},
  url = {http://dx.doi.org/10.1016/j.jpdc.2014.10.003},
  doi = {10.1016/j.jpdc.2014.10.003},
}
</pre></a></td></tr>
<tr><td></td><td class="entry"><a name="crg15"></a><a name="topcrg15">
</a><a class="title" href="http://www.cs.cmu.edu/~seth/papers/crg15.html">Thread-Aware Logic Programming for Data-Driven Parallel Programs</a></td><td class="links" nowrap=""><a class="pdf" href="http://ceur-ws.org/Vol-1433/tc_50.pdf">pdf</a> <a class="bib" href="javascript:togglebib('crg15')">bib</a> </td></tr><tr><td></td><td class="authinfo" colspan="2">
<a class="authinfo" href="http://www.cs.cmu.edu/~seth/helpmefind.html">Flávio Cruz</a>, <a class="authinfo" href="http://www.cs.cmu.edu/~seth/helpmefind.html">Ricardo Rocha</a>, and <a class="authinfo" href="http://www.cs.cmu.edu/~seth">Seth Copen Goldstein</a>.
In <em>Proceedings of the Technical Communications of the 31st International Conference on Logic Programming (ICLP 2015), Cork, Ireland, August 31 - September 4, 2015.</em>,
2015.
</td></tr>
<tr><td></td><td colspan="2"><a name="bibcrg15"><pre class="invisible" id="bibtextcrg15">@inproceedings{crg15,
  author = {Cruz, Fl{\'{a}}vio and Rocha, Ricardo and Goldstein, Seth
     Copen},
  title = {Thread-Aware Logic Programming for Data-Driven Parallel
     Programs},
  booktitle = {Proceedings of the Technical Communications of the 31st
     International Conference on Logic Programming {(ICLP} 2015),
     Cork, Ireland, August 31 - September 4, 2015.},
  year = {2015},
  url = {http://ceur-ws.org/Vol-1433/tc_50.pdf},
}
</pre></a></td></tr>
<tr><td class="year">2014</td><td class="entry"><a name="cruz-ppdp14"></a><a name="topcruz-ppdp14">
</a><a class="title" href="http://www.cs.cmu.edu/~seth/papers/cruz-ppdp14.html">Design and Implementation of a Multithreaded Virtual Machine for Executing Linear Logic Programs</a></td><td class="links" nowrap=""><a class="pdf" href="http://doi.acm.org/10.1145/2643135.2643150">pdf</a> <a class="bib" href="javascript:togglebib('cruz-ppdp14')">bib</a> </td></tr><tr><td></td><td class="authinfo" colspan="2">
<a class="authinfo" href="http://www.cs.cmu.edu/~seth/helpmefind.html">Flávio Cruz</a>, <a class="authinfo" href="http://www.cs.cmu.edu/~seth/helpmefind.html">Ricardo Rocha</a>, and <a class="authinfo" href="http://www.cs.cmu.edu/~seth">Seth Copen Goldstein</a>.
In <em>Proceedings of the International Symposium on Principles and Practice of Declarative Programming (PPDP 2014)</em>,
pages 43–53, Sep 2014.
</td></tr>
<tr><td></td><td colspan="2"><a name="bibcruz-ppdp14"><pre class="invisible" id="bibtextcruz-ppdp14">@inproceedings{cruz-ppdp14,
  author = {Cruz, Fl{\'{a}}vio and Rocha, Ricardo and Goldstein, Seth
     Copen},
  title = {{Design and Implementation of a Multithreaded Virtual
     Machine for Executing Linear Logic Programs}},
  booktitle = {Proceedings of the International Symposium on
     Principles and Practice of Declarative Programming (PPDP 2014)},
  pages = {43--53},
  publisher = {ACM Press},
  editor = {O. Danvy},
  month = {Sep},
  url = {http://doi.acm.org/10.1145/2643135.2643150},
  doi = {10.1145/2643135.2643150},
  year = {2014},
  address = {Canterbury, UK},
}
</pre></a></td></tr>
<tr><td></td><td class="entry"><a name="cruz-iclp14"></a><a name="topcruz-iclp14">
</a><a class="title" href="http://www.cs.cmu.edu/~seth/papers/cruz-iclp14.html">A Linear Logic Programming Language for Concurrent Programming over Graph Structures</a></td><td class="links" nowrap=""> <a class="bib" href="javascript:togglebib('cruz-iclp14')">bib</a> </td></tr><tr><td></td><td class="authinfo" colspan="2">
<a class="authinfo" href="http://www.cs.cmu.edu/~seth/helpmefind.html">Flavio Cruz</a>, <a class="authinfo" href="http://www.cs.cmu.edu/~seth/helpmefind.html">Richard Rocha</a>, <a class="authinfo" href="http://www.cs.cmu.edu/~seth">Seth Copen Goldstein</a>, and <a class="authinfo" href="http://www.cs.cmu.edu/~seth/helpmefind.html">Frank Pfenning</a>.
<em>Journal of Theory and Practice of Logic Programming, 30th International Conference on Logic Programming (ICLP 2014), Special Issue</em>,
pages 493–507, Jul 2014.
</td></tr>
<tr><td></td><td colspan="2"><a name="bibcruz-iclp14"><pre class="invisible" id="bibtextcruz-iclp14">@article{cruz-iclp14,
  author = {Cruz, Flavio and Rocha, Richard and Goldstein, Seth Copen
     and Pfenning, Frank},
  journal = {Journal of Theory and Practice of Logic Programming, 30th
     International Conference on Logic Programming (ICLP 2014),
     Special Issue},
  month = {Jul},
  pages = {493-507},
  title = {{A Linear Logic Programming Language for Concurrent
     Programming over Graph Structures}},
  year = {2014},
}
</pre></a></td></tr>
<tr><td class="year">2012</td><td class="entry"><a name="kgr12a"></a><a name="topkgr12a">
</a><a class="title" href="http://www.cs.cmu.edu/~seth/papers/kgr12a.html">Analysis and Modeling of Capacitive Power Transfer in Microsystems</a></td><td class="links" nowrap=""> <a class="bib" href="javascript:togglebib('kgr12a')">bib</a> </td></tr><tr><td></td><td class="authinfo" colspan="2">
<a class="authinfo" href="http://www.andrew.cmu.edu/user/mkaragoz/">Mustafa Emre Karagozler</a>, <a class="authinfo" href="http://www.cs.cmu.edu/~seth">Seth Copen Goldstein</a>, and <a class="authinfo" href="http://www.cs.cmu.edu/~seth/helpmefind.html">David S. Ricketts</a>.
<em>Circuits and Systems I: Regular Papers, IEEE Transactions on</em>,
59(7):1557–1566, Jul 2012.
</td></tr>
<tr><td></td><td colspan="2"><a name="bibkgr12a"><pre class="invisible" id="bibtextkgr12a">@article{kgr12a,
  author = {Karagozler, Mustafa Emre and Goldstein, Seth Copen and
     Ricketts, David S.},
  journal = {Circuits and Systems I: Regular Papers, IEEE Transactions
     on},
  title = {Analysis and Modeling of Capacitive Power Transfer in
     Microsystems},
  year = {2012},
  month = {Jul},
  volume = {59},
  number = {7},
  pages = {1557--1566},
  keywords = {Actuation, Adhesion,Power},
  doi = {10.1109/TCSI.2011.2177011},
  issn = {1549-8328},
}
</pre></a></td></tr>
<tr><td></td><td class="entry"><a name="kgr12"></a><a name="topkgr12">
</a><a class="title" href="http://www.cs.cmu.edu/~seth/papers/kgr12.html">Analysis and Modeling of Capacitive Power Transfer in Microsystems</a></td><td class="links" nowrap=""> <a class="bib" href="javascript:togglebib('kgr12')">bib</a> </td></tr><tr><td></td><td class="authinfo" colspan="2">
<a class="authinfo" href="http://www.andrew.cmu.edu/user/mkaragoz/">Mustafa Emre Karagozler</a>, <a class="authinfo" href="http://www.cs.cmu.edu/~seth">Seth Copen Goldstein</a>, and <a class="authinfo" href="http://www.cs.cmu.edu/~seth/helpmefind.html">David S. Ricketts</a>.
<em>IEEE Trans. on Circuits and Systems</em>,
59-I(7):1557–1566, 2012.
</td></tr>
<tr><td></td><td colspan="2"><a name="bibkgr12"><pre class="invisible" id="bibtextkgr12">@article{kgr12,
  author = {Karagozler, Mustafa Emre and Goldstein, Seth Copen and
     Ricketts, David S.},
  title = {Analysis and Modeling of Capacitive Power Transfer in
     Microsystems},
  journal = {IEEE Trans. on Circuits and Systems},
  volume = {59-I},
  number = {7},
  year = {2012},
  pages = {1557-1566},
}
</pre></a></td></tr>
<tr><td></td><td class="entry"><a name="bg11"></a><a name="topbg11">
</a><a class="title" href="http://www.cs.cmu.edu/~seth/papers/bg11.html">Distributed Intelligent MEMS: Progresses and Perspectives</a></td><td class="links" nowrap=""> <a class="bib" href="javascript:togglebib('bg11')">bib</a> </td></tr><tr><td></td><td class="authinfo" colspan="2">
<a class="authinfo" href="http://www.cs.cmu.edu/~seth/helpmefind.html">Julien Bourgeois</a> and <a class="authinfo" href="http://www.cs.cmu.edu/~seth">Seth Copen Goldstein</a>.
In <em>ICT Innovations 2011</em>,
volume 150, pages 15–25, 2012.
</td></tr>
<tr><td></td><td colspan="2"><a name="bibbg11"><pre class="invisible" id="bibtextbg11">@inproceedings{bg11,
  author = {Bourgeois, Julien and Goldstein, Seth Copen},
  title = {Distributed Intelligent {MEMS}: Progresses and
     Perspectives},
  booktitle = {ICT Innovations 2011},
  pages = {15--25},
  series = {Advances in Intelligent and Soft Computing},
  volume = {150},
  isbn = {978-3-642-28663-6},
  editor = {Kocarev, Ljupco},
  address = {Ohrid, Macedonia},
  publisher = {Springer Berlin / Heidelberg},
  year = {2012},
  note = {Keynote talk at the ICT Innovations 2011 conference},
  keywords = {Claytronics},
}
</pre></a></td></tr>
<tr><td class="year">2011</td><td class="entry"><a name="ktgr11"></a><a name="topktgr11">
</a><a class="title" href="http://www.cs.cmu.edu/~seth/papers/ktgr11.html">Electrostatic actuation and control of micro robots using a post-processed high-voltage SOI CMOS chip</a></td><td class="links" nowrap=""> <a class="bib" href="javascript:togglebib('ktgr11')">bib</a> </td></tr><tr><td></td><td class="authinfo" colspan="2">
<a class="authinfo" href="http://www.andrew.cmu.edu/user/mkaragoz/">Mustafa Emre Karagozler</a>, <a class="authinfo" href="http://www.cs.cmu.edu/~seth/helpmefind.html">A. Thaker</a>, <a class="authinfo" href="http://www.cs.cmu.edu/~seth">Seth Copen Goldstein</a>, and <a class="authinfo" href="http://www.cs.cmu.edu/~seth/helpmefind.html">David S. Ricketts</a>.
In <em>Circuits and Systems (ISCAS), 2011 IEEE International Symposium on</em>,
pages 2509–2512, May 2011.
</td></tr>
<tr><td></td><td colspan="2"><a name="bibktgr11"><pre class="invisible" id="bibtextktgr11">@inproceedings{ktgr11,
  author = {Karagozler, Mustafa Emre and Thaker, A. and Goldstein,
     Seth Copen and Ricketts, David S.},
  booktitle = {Circuits and Systems (ISCAS), 2011 IEEE International
     Symposium on},
  title = {Electrostatic actuation and control of micro robots using a
     post-processed high-voltage SOI CMOS chip},
  year = {2011},
  month = {May},
  pages = {2509--2512},
  keywords = {Si backside carrier substrate;electrostatic actuation
     electrodes;energy efficient control;low power digital
     design;micro robots;parasitic FET gates;post-processed
     high-voltage SOI CMOS chip;power conversion circuit;CMOS
     integrated circuits;electrodes;electrostatic
     actuators;microrobots;silicon-on-insulator;},
  keywords = {Si backside carrier substrate;electrostatic actuation
     electrodes;energy efficient control;low power digital
     design;micro robots;parasitic FET gates;post-processed
     high-voltage SOI CMOS chip;power conversion circuit;CMOS
     integrated circuits;electrodes;electrostatic
     actuators;microrobots;silicon-on-insulator;},
  doi = {10.1109/ISCAS.2011.5938114},
  issn = {0271-4302},
}
</pre></a></td></tr>
<tr><td></td><td class="entry"><a name="kag11"></a><a name="topkag11">
</a><a class="title" href="http://www.cs.cmu.edu/~seth/papers/kag11.html">Blinky blocks: a physical ensemble programming platform</a></td><td class="links" nowrap=""> <a class="bib" href="javascript:togglebib('kag11')">bib</a> </td></tr><tr><td></td><td class="authinfo" colspan="2">
<a class="authinfo" href="http://www.cs.cmu.edu/~seth/helpmefind.html">Brian T. Kirby</a>, <a class="authinfo" href="http://www.cs.cmu.edu/~seth/helpmefind.html">Michael Ashley-Rollman</a>, and <a class="authinfo" href="http://www.cs.cmu.edu/~seth">Seth Copen Goldstein</a>.
In <em>CHI  2011 Extended Abstracts on Human Factors in Computing Systems</em>,
pages 1111–1116, 2011.
</td></tr>
<tr><td></td><td colspan="2"><a name="bibkag11"><pre class="invisible" id="bibtextkag11">@inproceedings{kag11,
  author = {Kirby, Brian T. and Ashley-Rollman, Michael and Goldstein,
     Seth Copen},
  title = {Blinky blocks: a physical ensemble programming platform},
  booktitle = {CHI  2011 Extended Abstracts on Human Factors in
     Computing Systems},
  series = {CHI EA  2011},
  year = {2011},
  isbn = {978-1-4503-0268-5},
  pages = {1111--1116},
  doi = {10.1145/1979742.1979712},
  publisher = {ACM},
  address = {New York, NY, USA},
  keywords = {development tools, programming environments, robots,
     tangible UI},
  keywords = {development tools, programming environments, robots,
     tangible UI},
}
</pre></a></td></tr>
<tr><td></td><td class="entry"><a name="DBLP:journals/puc/WellerGG11"></a><a name="topDBLP:journals/puc/WellerGG11">
</a><a class="title" href="http://www.cs.cmu.edu/~seth/papers/DBLP:journals/puc/WellerGG11.html">Hyperform specification: designing and interacting with self-reconfiguring materials</a></td><td class="links" nowrap=""><a class="pdf" href="http://dx.doi.org/10.1007/s00779-010-0315-7">pdf</a> <a class="bib" href="javascript:togglebib('DBLP:journals/puc/WellerGG11')">bib</a> </td></tr><tr><td></td><td class="authinfo" colspan="2">
<a class="authinfo" href="http://code.arc.cmu.edu/~philetus/">Michael Philetus Weller</a>, <a class="authinfo" href="http://www.cs.cmu.edu/~seth/helpmefind.html">Mark D. Gross</a>, and <a class="authinfo" href="http://www.cs.cmu.edu/~seth">Seth Copen Goldstein</a>.
<em>Personal and Ubiquitous Computing</em>,
15(2):133–149, 2011.
</td></tr>
<tr><td></td><td colspan="2"><a name="bibDBLP:journals/puc/WellerGG11"><pre class="invisible" id="bibtextDBLP:journals/puc/WellerGG11">@article{DBLP:journals/puc/WellerGG11,
  author = {Weller, Michael Philetus and Gross, Mark D. and Goldstein,
     Seth Copen},
  title = {Hyperform specification: designing and interacting with
     self-reconfiguring materials},
  journal = {Personal and Ubiquitous Computing},
  volume = {15},
  number = {2},
  pages = {133--149},
  year = {2011},
  url = {http://dx.doi.org/10.1007/s00779-010-0315-7},
  doi = {10.1007/s00779-010-0315-7},
}
</pre></a></td></tr>
<tr><td class="year">2009</td><td class="entry"><a name="karagozler-iros09"></a><a name="topkaragozler-iros09">
</a><a class="title" href="http://www.cs.cmu.edu/~seth/papers/karagozler-iros09.html">Stress-Driven MEMS Assembly + Electrostatic Forces = 1mm Diameter Robot</a></td><td class="links" nowrap=""><a class="pdf" href="http://www.cs.cmu.edu/~claytronics/papers/karagozler-iros09.pdf">pdf</a> <a class="bib" href="javascript:togglebib('karagozler-iros09')">bib</a> <a class="abs" href="javascript:toggleabs('karagozler-iros09')">abstract</a> </td></tr><tr><td></td><td class="authinfo" colspan="2">
<a class="authinfo" href="http://www.andrew.cmu.edu/user/mkaragoz/">Mustafa Emre Karagozler</a>, <a class="authinfo" href="http://www.cs.cmu.edu/~seth">Seth Copen Goldstein</a>, and <a class="authinfo" href="http://www.cs.cmu.edu/~seth/helpmefind.html">James Robert Reid</a>.
In <em>Proceedings of the IEEE International Conference on Intelligent Robots and Systems (IROS  2009)</em>,
Oct 2009.
See <a href="#karagozler-iros09">karagozler-iros09</a>.
</td></tr>
<tr><td></td><td colspan="2"><div class="invisible" id="abstextkaragozler-iros09"><table><tr><td class="hide"><a href="javascript:toggleabs('karagozler-iros09')">hide<br/>Abstract</a></td><td><p class="abs">As the size of the modules in a self-reconfiguring modular robotic system shrinks and the number of modules increases, the flexibility of the system as a whole increases. In this paper, we describe the manufacturing methods and mechanisms for a 1 millimeter diameter module which can be manufactured en masse. The module is the first step towards realizing the basic unit of claytronics, a modular robotic system designed to scale to millions of units.</p></td></tr></table></div></td></tr><tr><td></td><td colspan="2"><a name="bibkaragozler-iros09"><pre class="invisible" id="bibtextkaragozler-iros09">@inproceedings{karagozler-iros09,
  author = {Karagozler, Mustafa Emre and Goldstein, Seth Copen and
     Reid, James Robert},
  title = {Stress-Driven MEMS Assembly + Electrostatic Forces = 1mm
     Diameter Robot},
  booktitle = {Proceedings of the IEEE International Conference on
     Intelligent Robots and Systems ({IROS  2009})},
  venue = {IEEE/RSJ International Conference on Intelligent Robots and
     Systems (IROS)},
  see = {karagozler-iros09},
  year = {2009},
  month = {Oct},
  abstract = {As the size of the modules in a self-reconfiguring
     modular robotic system shrinks and the number of modules
     increases, the flexibility of the system as a whole increases. In
     this paper, we describe the manufacturing methods and mechanisms
     for a 1 millimeter diameter module which can be manufactured en
     masse. The module is the first step towards realizing the basic
     unit of claytronics, a modular robotic system designed to scale
     to millions of units.},
  keywords = {Actuation, Adhesion, Robot Fabrication},
  url = {http://www.cs.cmu.edu/~claytronics/papers/karagozler-iros09.pdf},
}
</pre></a></td></tr>
<tr><td></td><td class="entry"><a name="ashley-rollman-iclp09"></a><a name="topashley-rollman-iclp09">
</a><a class="title" href="http://www.cs.cmu.edu/~seth/papers/ashley-rollman-iclp09.html">A Language for Large Ensembles of Independently Executing Nodes</a></td><td class="links" nowrap=""><a class="pdf" href="http://www.cs.cmu.edu/~claytronics/papers/ashley-rollman-iclp09.pdf">pdf</a> <a class="bib" href="javascript:togglebib('ashley-rollman-iclp09')">bib</a> <a class="abs" href="javascript:toggleabs('ashley-rollman-iclp09')">abstract</a> </td></tr><tr><td></td><td class="authinfo" colspan="2">
<a class="authinfo" href="http://www.cs.cmu.edu/~mpa">Michael P. Ashley-Rollman</a>, <a class="authinfo" href="http://www.cs.cmu.edu/~petel/">Peter Lee</a>, <a class="authinfo" href="http://www.cs.cmu.edu/~seth">Seth Copen Goldstein</a>, <a class="authinfo" href="http://www.pittsburgh.intel-research.net/people/pillai.html">Padmanabhan Pillai</a>, and <a class="authinfo" href="http://www.pittsburgh.intel-research.net/people/campbell.html">Jason D. Campbell</a>.
In <em>Proceedings of the International Conference on Logic Programming (ICLP  2009)</em>,
Jul 2009.
</td></tr>
<tr><td></td><td colspan="2"><div class="invisible" id="abstextashley-rollman-iclp09"><table><tr><td class="hide"><a href="javascript:toggleabs('ashley-rollman-iclp09')">hide<br/>Abstract</a></td><td><p class="abs">We address how to write programs for distributed computing systems in which the network topology can change dynamically. Examples of such systems, which we call <em>ensembles</em>, include programmable sensor networks (where the network topology can change due to failures in the nodes or links) and modular robotics systems (whose physical configuration can be rearranged under program control). We extend Meld, a logic programming language that allows an ensemble to be viewed as a single computing system. In addition to proving some key properties of the language, we have also implemented a complete compiler for Meld. It generates code for TinyOS and for a Claytronics simulator. We have successfully written correct, efficient, and complex programs for ensembles containing over one million nodes.</p></td></tr></table></div></td></tr><tr><td></td><td colspan="2"><a name="bibashley-rollman-iclp09"><pre class="invisible" id="bibtextashley-rollman-iclp09">@inproceedings{ashley-rollman-iclp09,
  author = {Ashley-Rollman, Michael P. and Lee, Peter and Goldstein,
     Seth Copen and Pillai, Padmanabhan and Campbell, Jason D.},
  booktitle = {Proceedings of the International Conference on Logic
     Programming (ICLP  2009)},
  title = {A Language for Large Ensembles of Independently Executing
     Nodes},
  year = {2009},
  month = {Jul},
  keywords = {Distributed Systems, Meld, Programming Languages},
  url = {http://www.cs.cmu.edu/~claytronics/papers/ashley-rollman-iclp09.pdf},
  abstract = {We address how to write programs for distributed
     computing systems in which the network topology can change
     dynamically. Examples of such systems, which we call {\em
     ensembles}, include programmable sensor networks (where the
     network topology can change due to failures in the nodes or
     links) and modular robotics systems (whose physical configuration
     can be rearranged under program control). We extend Meld, a logic
     programming language that allows an ensemble to be viewed as a
     single computing system. In addition to proving some key
     properties of the language, we have also implemented a complete
     compiler for Meld. It generates code for TinyOS and for a
     Claytronics simulator. We have successfully written correct,
     efficient, and complex programs for ensembles containing over one
     million nodes.},
  booktitle = {Proceedings of the International Conference on Logic
     Programming (ICLP  2009)},
}
</pre></a></td></tr>
<tr><td></td><td class="entry"><a name="goldstein09"></a><a name="topgoldstein09">
</a><a class="title" href="http://www.cs.cmu.edu/~seth/papers/goldstein09.html">Beyond Audio and Video: Using Claytronics to Enable Pario</a></td><td class="links" nowrap=""> <a class="bib" href="javascript:togglebib('goldstein09')">bib</a> <a class="abs" href="javascript:toggleabs('goldstein09')">abstract</a> </td></tr><tr><td></td><td class="authinfo" colspan="2">
<a class="authinfo" href="http://www.cs.cmu.edu/~seth">Seth Copen Goldstein</a>, <a class="authinfo" href="http://www.cs.cmu.edu/~tcm">Todd C. Mowry</a>, <a class="authinfo" href="http://www.pittsburgh.intel-research.net/people/campbell.html">Jason D. Campbell</a>, <a class="authinfo" href="http://www.cs.cmu.edu/~mpa">Michael P. Ashley-Rollman</a>, <a class="authinfo" href="http://www.cs.cmu.edu/~mderosa/">Michael De Rosa</a>, <a class="authinfo" href="www.cs.cmu.edu/~sfuniak/">Stanislav Funiak</a>, <a class="authinfo" href="http://www.ece.cmu.edu/directory/details/69">James F. Hoburg</a>, <a class="authinfo" href="http://www.andrew.cmu.edu/user/mkaragoz/">Mustafa Emre Karagozler</a>, <a class="authinfo" href="http://people.cs.cmu.edu/person/46359.html">Brian Kirby</a>, <a class="authinfo" href="http://www.cs.cmu.edu/~petel/">Peter Lee</a>, <a class="authinfo" href="http://www.pittsburgh.intel-research.net/people/pillai.html">Padmanabhan Pillai</a>, <a class="authinfo" href="http://www.cs.cmu.edu/~seth/helpmefind.html">J. Robert Reid</a>, <a class="authinfo" href="http://www.cs.cmu.edu/~seth/helpmefind.html">Daniel D. Stancil</a>, and <a class="authinfo" href="http://code.arc.cmu.edu/~philetus/">Michael Philetus Weller</a>.
<em>AI Magazine</em>,
30(2), Jul 2009.
</td></tr>
<tr><td></td><td colspan="2"><div class="invisible" id="abstextgoldstein09"><table><tr><td class="hide"><a href="javascript:toggleabs('goldstein09')">hide<br/>Abstract</a></td><td><p class="abs">In this article, we describe the hardware and software challenges involved in realizing Claytronics, a form of programmable matter made out of very large numbers-potentially millions-of submillimeter sized spherical robots. The goal of the claytronics project is to create ensembles of cooperating submillimeter robots, which work together to form dynamic 3D physical objects. For example, claytronics might be used in telepresense to mimic, with high-fidelity and in 3-dimensional solid form, the look, feel, and motion of the person at the other end of the telephone call. To achieve this long-range vision we are investigating hardware mechanisms for constructing submillimeter robots, which can be manufactured en masse using photolithography. We also propose the creation of a new media type, which we call pario. The idea behind pario is to render arbitrary moving, physical 3-dimensional objects that you can see, touch, and even hold in your hands. In parallel with our hardware effort, we are developing novel distributed programming languages and algorithms to control the ensembles, LDP and Meld. Pario may fundamentally change how we communicate with others and interact with the world around us. Our research results to date suggest that there is a viable path to implementing both the hardware and software necessary for claytronics, which is a form of programmable matter that can be used to implement pario. While we have made significant progress, there is still much research ahead in order to turn this vision into reality.</p></td></tr></table></div></td></tr><tr><td></td><td colspan="2"><a name="bibgoldstein09"><pre class="invisible" id="bibtextgoldstein09">@article{goldstein09,
  author = {Goldstein, Seth Copen and Mowry, Todd C. and Campbell,
     Jason D. and Ashley-Rollman, Michael P. and De~Rosa, Michael and
     Funiak, Stanislav and Hoburg, James F. and Karagozler, Mustafa
     Emre and Kirby, Brian and Lee, Peter and Pillai, Padmanabhan and
     Reid, J. Robert and Stancil, Daniel D. and Weller, Michael
     Philetus},
  title = {Beyond Audio and Video: Using Claytronics to Enable Pario},
  journal = {AI Magazine},
  year = {2009},
  volume = {30},
  number = {2},
  month = {Jul},
  keywords = {Claytronics},
  abstract = {In this article, we describe the hardware and software
     challenges involved in realizing Claytronics, a form of
     programmable matter made out of very large numbers-potentially
     millions-of submillimeter sized spherical robots. The goal of the
     claytronics project is to create ensembles of cooperating
     submillimeter robots, which work together to form dynamic 3D
     physical objects. For example, claytronics might be used in
     telepresense to mimic, with high-fidelity and in 3-dimensional
     solid form, the look, feel, and motion of the person at the other
     end of the telephone call. To achieve this long-range vision we
     are investigating hardware mechanisms for constructing
     submillimeter robots, which can be manufactured en masse using
     photolithography. We also propose the creation of a new media
     type, which we call pario. The idea behind pario is to render
     arbitrary moving, physical 3-dimensional objects that you can
     see, touch, and even hold in your hands. In parallel with our
     hardware effort, we are developing novel distributed programming
     languages and algorithms to control the ensembles, LDP and Meld.
     Pario may fundamentally change how we communicate with others and
     interact with the world around us. Our research results to date
     suggest that there is a viable path to implementing both the
     hardware and software necessary for claytronics, which is a form
     of programmable matter that can be used to implement pario. While
     we have made significant progress, there is still much research
     ahead in order to turn this vision into reality.},
}
</pre></a></td></tr>
<tr><td></td><td class="entry"><a name="cannon-tranpe09"></a><a name="topcannon-tranpe09">
</a><a class="title" href="http://www.cs.cmu.edu/~seth/papers/cannon-tranpe09.html">Magnetic resonant coupling as a potential means for wireless power transfer to multiple small receivers</a></td><td class="links" nowrap=""><a class="pdf" href="http://www.cs.cmu.edu/~claytronics/papers/cannon-tranpe09.pdf">pdf</a> <a class="bib" href="javascript:togglebib('cannon-tranpe09')">bib</a> <a class="abs" href="javascript:toggleabs('cannon-tranpe09')">abstract</a> </td></tr><tr><td></td><td class="authinfo" colspan="2">
<a class="authinfo" href="http://www.cs.cmu.edu/~seth/helpmefind.html">Benjamin L. Cannon</a>, <a class="authinfo" href="http://www.ece.cmu.edu/directory/details/69">James F. Hoburg</a>, <a class="authinfo" href="http://www.cs.cmu.edu/~seth/helpmefind.html">Daniel D. Stancil</a>, and <a class="authinfo" href="http://www.cs.cmu.edu/~seth">Seth Copen Goldstein</a>.
<em>IEEE Transactions on Power Electronics</em>,
24(7), Jul 2009.
</td></tr>
<tr><td></td><td colspan="2"><div class="invisible" id="abstextcannon-tranpe09"><table><tr><td class="hide"><a href="javascript:toggleabs('cannon-tranpe09')">hide<br/>Abstract</a></td><td><p class="abs">Wireless power transfer via magnetic resonant coupling is experimentally demonstrated in a system with a large source coil and either one or two small receivers. Resonance between source and load coils is achieved with lumped capacitors terminating the coils. A circuit model is developed to describe the system with a single receiver, and extended to describe the system with two receivers. With parameter values chosen to obtain good fits, the circuit models yield transfer frequency responses that are in good agreement with experimental measurements over a range of frequencies that span the resonance. Resonant frequency splitting is observed experimentally and described theoretically for the multiple receiver system. In the single receiver system at resonance, more than 50% of the power that is supplied by the actual source is delivered to the load. In a multiple receiver system, a means for tracking frequency shifts and continuously retuning the lumped capacitances that terminate each receiver coil so as to maximize efficiency is a key issue for future work.</p></td></tr></table></div></td></tr><tr><td></td><td colspan="2"><a name="bibcannon-tranpe09"><pre class="invisible" id="bibtextcannon-tranpe09">@article{cannon-tranpe09,
  author = {Cannon, Benjamin L. and Hoburg, James F. and Stancil,
     Daniel D. and Goldstein, Seth Copen},
  title = {Magnetic resonant coupling as a potential means for
     wireless power transfer to multiple small receivers},
  year = {2009},
  url = {http://www.cs.cmu.edu/~claytronics/papers/cannon-tranpe09.pdf},
  month = {Jul},
  volume = {24},
  number = {7},
  journal = {IEEE Transactions on Power Electronics},
  keywords = {Power},
  abstract = {Wireless power transfer via magnetic resonant coupling
     is experimentally demonstrated in a system with a large source
     coil and either one or two small receivers. Resonance between
     source and load coils is achieved with lumped capacitors
     terminating the coils. A circuit model is developed to describe
     the system with a single receiver, and extended to describe the
     system with two receivers. With parameter values chosen to obtain
     good fits, the circuit models yield transfer frequency responses
     that are in good agreement with experimental measurements over a
     range of frequencies that span the resonance. Resonant frequency
     splitting is observed experimentally and described theoretically
     for the multiple receiver system. In the single receiver system
     at resonance, more than 50\% of the power that is supplied by the
     actual source is delivered to the load. In a multiple receiver
     system, a means for tracking frequency shifts and continuously
     retuning the lumped capacitances that terminate each receiver
     coil so as to maximize efficiency is a key issue for future
     work.},
}
</pre></a></td></tr>
<tr><td></td><td class="entry"><a name="funiak-ijrr09"></a><a name="topfuniak-ijrr09">
</a><a class="title" href="http://www.cs.cmu.edu/~seth/papers/funiak-ijrr09.html">Distributed Localization of Modular Robot Ensembles</a></td><td class="links" nowrap=""> <a class="bib" href="javascript:togglebib('funiak-ijrr09')">bib</a> <a class="abs" href="javascript:toggleabs('funiak-ijrr09')">abstract</a> </td></tr><tr><td></td><td class="authinfo" colspan="2">
<a class="authinfo" href="www.cs.cmu.edu/~sfuniak/">Stanislav Funiak</a>, <a class="authinfo" href="http://www.pittsburgh.intel-research.net/people/pillai.html">Padmanabhan Pillai</a>, <a class="authinfo" href="http://www.cs.cmu.edu/~mpa">Michael P. Ashley-Rollman</a>, <a class="authinfo" href="http://www.pittsburgh.intel-research.net/people/campbell.html">Jason D. Campbell</a>, and <a class="authinfo" href="http://www.cs.cmu.edu/~seth">Seth Copen Goldstein</a>.
<em>International Journal of Robotics Research</em>,
28(8):946–61, 2009.
</td></tr>
<tr><td></td><td colspan="2"><div class="invisible" id="abstextfuniak-ijrr09"><table><tr><td class="hide"><a href="javascript:toggleabs('funiak-ijrr09')">hide<br/>Abstract</a></td><td><p class="abs">Internal localization, the problem of estimating relative pose for each module of a modular robot, is a prerequisite for many shape control, locomotion, and actuation algorithms. In this paper, we propose a robust hierarchical approach that uses normalized cut to identify dense sub-regions with small mutual localization error, then progressively merges those sub-regions to localize the entire ensemble. Our method works well in both two and three dimensions, and requires neither exact measurements nor rigid inter-module connectors. Most of the computations in our method can be distributed effectively. The result is a robust algorithm that scales to large ensembles. We evaluate our algorithm in two- and three-dimensional simulations of scenarios with up to 10,000 modules.</p></td></tr></table></div></td></tr><tr><td></td><td colspan="2"><a name="bibfuniak-ijrr09"><pre class="invisible" id="bibtextfuniak-ijrr09">@article{funiak-ijrr09,
  author = {Funiak, Stanislav and Pillai, Padmanabhan and
     Ashley-Rollman, Michael P. and Campbell, Jason D. and Goldstein,
     Seth Copen},
  title = {Distributed Localization of Modular Robot Ensembles},
  journal = {International Journal of Robotics Research},
  year = {2009},
  abstract = {Internal localization, the problem of estimating
     relative pose for each module of a modular robot, is a
     prerequisite for many shape control, locomotion, and actuation
     algorithms. In this paper, we propose a robust hierarchical
     approach that uses normalized cut to identify dense sub-regions
     with small mutual localization error, then progressively merges
     those sub-regions to localize the entire ensemble. Our method
     works well in both two and three dimensions, and requires neither
     exact measurements nor rigid inter-module connectors. Most of the
     computations in our method can be distributed effectively. The
     result is a robust algorithm that scales to large ensembles. We
     evaluate our algorithm in two- and three-dimensional simulations
     of scenarios with up to 10,000 modules.},
  volume = {28},
  number = {8},
  pages = {946--61},
}
</pre></a></td></tr>
<tr><td></td><td class="entry"><a name="koes-scopes09"></a><a name="topkoes-scopes09">
</a><a class="title" href="http://www.cs.cmu.edu/~seth/papers/koes-scopes09.html">Register allocation deconstructed</a></td><td class="links" nowrap=""> <a class="bib" href="javascript:togglebib('koes-scopes09')">bib</a> <a class="abs" href="javascript:toggleabs('koes-scopes09')">abstract</a> </td></tr><tr><td></td><td class="authinfo" colspan="2">
<a class="authinfo" href="http://www.cs.cmu.edu/~dkoes/">David Ryan Koes</a> and <a class="authinfo" href="http://www.cs.cmu.edu/~seth">Seth Copen Goldstein</a>.
In <em>SCOPES  2009: Proceedings of th 12th International Workshop on Software and Compilers for Embedded Systems</em>,
pages 21–30, 2009.
</td></tr>
<tr><td></td><td colspan="2"><div class="invisible" id="abstextkoes-scopes09"><table><tr><td class="hide"><a href="javascript:toggleabs('koes-scopes09')">hide<br/>Abstract</a></td><td><p class="abs">Register allocation is a fundamental part of any optimizing compiler. Effectively managing the limited register resources of the constrained architectures commonly found in embedded systems is essential in order to maximize code quality. In this paper we deconstruct the register allocation problem into distinct components: coalescing, spilling, move insertion, and assignment. Using an optimal register allocation framework, we empirically evaluate the importance of each of the components, the impact of component integration, and the effectiveness of existing heuristics. We evaluate code quality both in terms of code performance and code size and consider four distinct instruction set architectures: ARM, Thumb, x86, and x86-64. The results of our investigation reveal general principles for register allocation design.</p></td></tr></table></div></td></tr><tr><td></td><td colspan="2"><a name="bibkoes-scopes09"><pre class="invisible" id="bibtextkoes-scopes09">@inproceedings{koes-scopes09,
  author = {Koes, David Ryan and Goldstein, Seth Copen},
  title = {Register allocation deconstructed},
  booktitle = {SCOPES  2009: Proceedings of th 12th International
     Workshop on Software and Compilers for Embedded Systems},
  year = {2009},
  isbn = {978-1-60558-696-0},
  pages = {21--30},
  abstract = {Register allocation is a fundamental part of any
     optimizing compiler. Effectively managing the limited register
     resources of the constrained architectures commonly found in
     embedded systems is essential in order to maximize code quality.
     In this paper we deconstruct the register allocation problem into
     distinct components: coalescing, spilling, move insertion, and
     assignment. Using an optimal register allocation framework, we
     empirically evaluate the importance of each of the components,
     the impact of component integration, and the effectiveness of
     existing heuristics. We evaluate code quality both in terms of
     code performance and code size and consider four distinct
     instruction set architectures: ARM, Thumb, x86, and x86-64. The
     results of our investigation reveal general principles for
     register allocation design.},
}
</pre></a></td></tr>
<tr><td class="year">2008</td><td class="entry"><a name="venkataramani-codes08"></a><a name="topvenkataramani-codes08">
</a><a class="title" href="http://www.cs.cmu.edu/~seth/papers/venkataramani-codes08.html">Slack Analysis in the System Design Loop</a></td><td class="links" nowrap=""> <a class="bib" href="javascript:togglebib('venkataramani-codes08')">bib</a> <a class="pdf" href="http://www.cs.cmu.edu/~seth/papers/talk-venkataramani-codes08.pdf">talk</a> </td></tr><tr><td></td><td class="authinfo" colspan="2">
<a class="authinfo" href="http://www.ece.cmu.edu/~girishv/">Girish Venkataramani</a> and <a class="authinfo" href="http://www.cs.cmu.edu/~seth">Seth Copen Goldstein</a>.
In <em>IEEE/ACM/IFIP International Conference on Hardware/Software Codesign and System Synthesis (CODES-ISSS)</em>,
pages 231–236, Oct 2008.
</td></tr>
<tr><td></td><td colspan="2"><a name="bibvenkataramani-codes08"><pre class="invisible" id="bibtextvenkataramani-codes08">@inproceedings{venkataramani-codes08,
  author = {Venkataramani, Girish and Goldstein, Seth Copen},
  booktitle = {IEEE/ACM/IFIP International Conference on
     Hardware/Software Codesign and System Synthesis {(CODES-ISSS)}},
  year = {2008},
  address = {Atlanta, GE},
  month = {Oct},
  keywords = {Asychronous Circuits, CAD, Global Critical Path},
  title = {Slack Analysis in the System Design Loop},
  talk = {http://www.cs.cmu.edu/~seth/papers/talk-venkataramani-codes08.pdf},
  pages = {231--236},
}
</pre></a></td></tr>
<tr><td></td><td class="entry"><a name="dewey-iros08"></a><a name="topdewey-iros08">
</a><a class="title" href="http://www.cs.cmu.edu/~seth/papers/dewey-iros08.html">Generalizing Metamodules to Simplify Planning in Modular Robotic Systems</a></td><td class="links" nowrap=""><a class="pdf" href="http://www.cs.cmu.edu/~claytronics/papers/dewey-iros08.pdf">pdf</a> <a class="bib" href="javascript:togglebib('dewey-iros08')">bib</a> <a class="abs" href="javascript:toggleabs('dewey-iros08')">abstract</a> </td></tr><tr><td></td><td class="authinfo" colspan="2">
<a class="authinfo" href="http://www.cs.cmu.edu/~seth/helpmefind.html">Daniel Dewey</a>, <a class="authinfo" href="http://www.pittsburgh.intel-research.net/people/siddh.html">Siddhartha S. Srinivasa</a>, <a class="authinfo" href="http://www.cs.cmu.edu/~mpa">Michael P. Ashley-Rollman</a>, <a class="authinfo" href="http://www.cs.cmu.edu/~mderosa/">Michael De Rosa</a>, <a class="authinfo" href="http://www.pittsburgh.intel-research.net/people/pillai.html">Padmanabhan Pillai</a>, <a class="authinfo" href="http://www.cs.cmu.edu/~tcm">Todd C. Mowry</a>, <a class="authinfo" href="http://www.pittsburgh.intel-research.net/people/campbell.html">Jason D. Campbell</a>, and <a class="authinfo" href="http://www.cs.cmu.edu/~seth">Seth Copen Goldstein</a>.
In <em>Proceedings of IEEE/RSJ 2008 International Conference on Intelligent Robots and Systems IROS  2008</em>,
Sep 2008.
</td></tr>
<tr><td></td><td colspan="2"><div class="invisible" id="abstextdewey-iros08"><table><tr><td class="hide"><a href="javascript:toggleabs('dewey-iros08')">hide<br/>Abstract</a></td><td><p class="abs">In this paper we develop a theory of metamodules and an associated distributed asynchronous planner which generalizes previous work on metamodules for lattice-based modular robotic systems. All extant modular robotic systems have some form of non-holonomic motion constraints. This has prompted many researchers to look to metamodules, i.e., groups of modules that act as a unit, as a way to reduce motion constraints and the complexity of planning. However, previous metamodule designs have been specific to a particular modular robot. </p><p>By analyzing the constraints found in modular robotic systems we develop a holonomic metamodule which has two important properties: (1) it can be used as the basic unit of an efficient planner and (2) it can be instantiated by a wide variety of different underlying modular robots, e.g., modular robot arms, expanding cubes, hex-packed spheres, etc. Using a series of transformations we show that our practical metamodule system has a provably complete planner. Finally, our approach allows the task of shape transformation to be separated into a planning task and a resource allocation task. We implement our planner for two different metamodule systems and show that the time to completion scales linearly with the diameter of the ensemble.</p></td></tr></table></div></td></tr><tr><td></td><td colspan="2"><a name="bibdewey-iros08"><pre class="invisible" id="bibtextdewey-iros08">@inproceedings{dewey-iros08,
  author = {Dewey, Daniel and Srinivasa, Siddhartha S. and
     Ashley-Rollman, Michael P. and De~Rosa, Michael and Pillai,
     Padmanabhan and Mowry, Todd C. and Campbell, Jason D. and
     Goldstein, Seth Copen},
  title = {Generalizing Metamodules to Simplify Planning in Modular
     Robotic Systems},
  booktitle = {Proceedings of IEEE/RSJ 2008 International Conference
     on Intelligent Robots and Systems {IROS  2008}},
  year = {2008},
  address = {Nice, France},
  month = {Sep},
  abstract = {In this paper we develop a theory of metamodules and an
     associated distributed asynchronous planner which generalizes
     previous work on metamodules for lattice-based modular robotic
     systems. All extant modular robotic systems have some form of
     non-holonomic motion constraints. This has prompted many
     researchers to look to metamodules, i.e., groups of modules that
     act as a unit, as a way to reduce motion constraints and the
     complexity of planning. However, previous metamodule designs have
     been specific to a particular modular robot. <p>By analyzing the
     constraints found in modular robotic systems we develop a
     holonomic metamodule which has two important properties: (1) it
     can be used as the basic unit of an efficient planner and (2) it
     can be instantiated by a wide variety of different underlying
     modular robots, e.g., modular robot arms, expanding cubes,
     hex-packed spheres, etc. Using a series of transformations we
     show that our practical metamodule system has a provably complete
     planner. Finally, our approach allows the task of shape
     transformation to be separated into a planning task and a
     resource allocation task. We implement our planner for two
     different metamodule systems and show that the time to completion
     scales linearly with the diameter of the ensemble.},
  url = {http://www.cs.cmu.edu/~claytronics/papers/dewey-iros08.pdf},
  keywords = {Meld, Planning, Multi-Robot Formations, Controlling
     Ensembles, Robotics},
}
</p></pre></a></td></tr>
<tr><td></td><td class="entry"><a name="funiak-rss08"></a><a name="topfuniak-rss08">
</a><a class="title" href="http://www.cs.cmu.edu/~seth/papers/funiak-rss08.html">Distributed Localization of Modular Robot Ensembles</a></td><td class="links" nowrap=""><a class="pdf" href="http://www.cs.cmu.edu/~claytronics/papers/funiak-rss2008.pdf">pdf</a> <a class="bib" href="javascript:togglebib('funiak-rss08')">bib</a> <a class="abs" href="javascript:toggleabs('funiak-rss08')">abstract</a> </td></tr><tr><td></td><td class="authinfo" colspan="2">
<a class="authinfo" href="www.cs.cmu.edu/~sfuniak/">Stanislav Funiak</a>, <a class="authinfo" href="http://www.pittsburgh.intel-research.net/people/pillai.html">Padmanabhan Pillai</a>, <a class="authinfo" href="http://www.cs.cmu.edu/~mpa">Michael P. Ashley-Rollman</a>, <a class="authinfo" href="http://www.pittsburgh.intel-research.net/people/campbell.html">Jason D. Campbell</a>, and <a class="authinfo" href="http://www.cs.cmu.edu/~seth">Seth Copen Goldstein</a>.
In <em>Proceedings of Robotics: Science and Systems</em>,
Jun 2008.
See <a href="#funiak-ijrr09">funiak-ijrr09</a>.
</td></tr>
<tr><td></td><td colspan="2"><div class="invisible" id="abstextfuniak-rss08"><table><tr><td class="hide"><a href="javascript:toggleabs('funiak-rss08')">hide<br/>Abstract</a></td><td><p class="abs">Internal localization, the problem of estimating relative pose for each module (part) of a modular robot is a prerequisite for many shape control, locomotion, and actuation algorithms. In this paper, we propose a robust hierarchical approach that uses normalized cut to identify dense subregions with small mutual localization error, then progressively merges those subregions to localize the entire ensemble. Our method works well in both 2D and 3D, and requires neither exact measurements nor rigid inter-module connectors. Most of the computations in our method can be effectively distributed. The result is a robust algorithm that scales to large, non-homogeneous ensembles. We evaluate our algorithm in accurate 2D and 3D simulations of scenarios with up to 10,000 modules.</p></td></tr></table></div></td></tr><tr><td></td><td colspan="2"><a name="bibfuniak-rss08"><pre class="invisible" id="bibtextfuniak-rss08">@inproceedings{funiak-rss08,
  author = {Funiak, Stanislav and Pillai, Padmanabhan and
     Ashley-Rollman, Michael P. and Campbell, Jason D. and Goldstein,
     Seth Copen},
  title = {Distributed Localization of Modular Robot Ensembles},
  booktitle = {Proceedings of Robotics: Science and Systems},
  year = {2008},
  month = {Jun},
  abstract = {Internal localization, the problem of estimating
     relative pose for each module (part) of a modular robot is a
     prerequisite for many shape control, locomotion, and actuation
     algorithms. In this paper, we propose a robust hierarchical
     approach that uses normalized cut to identify dense subregions
     with small mutual localization error, then progressively merges
     those subregions to localize the entire ensemble. Our method
     works well in both 2D and 3D, and requires neither exact
     measurements nor rigid inter-module connectors. Most of the
     computations in our method can be effectively distributed. The
     result is a robust algorithm that scales to large,
     non-homogeneous ensembles. We evaluate our algorithm in accurate
     2D and 3D simulations of scenarios with up to 10,000 modules.},
  keywords = {Distributed Systems, Localization, Meld},
  url = {http://www.cs.cmu.edu/~claytronics/papers/funiak-rss2008.pdf},
  see = {funiak-ijrr09},
}
</pre></a></td></tr>
<tr><td></td><td class="entry"><a name="mderosa-ijrr-2008"></a><a name="topmderosa-ijrr-2008">
</a><a class="title" href="http://www.cs.cmu.edu/~seth/papers/mderosa-ijrr-2008.html">Distributed Watchpoints: Debugging Large Modular Robotic Systems</a></td><td class="links" nowrap=""><a class="pdf" href="http://www.cs.cmu.edu/~claytronics/papers/mderosa-ijrr-2008.pdf">pdf</a> <a class="bib" href="javascript:togglebib('mderosa-ijrr-2008')">bib</a> <a class="abs" href="javascript:toggleabs('mderosa-ijrr-2008')">abstract</a> </td></tr><tr><td></td><td class="authinfo" colspan="2">
<a class="authinfo" href="http://www.cs.cmu.edu/~mderosa/">Michael De Rosa</a>, <a class="authinfo" href="http://www.cs.cmu.edu/~seth">Seth Copen Goldstein</a>, <a class="authinfo" href="http://www.cs.cmu.edu/~petel/">Peter Lee</a>, <a class="authinfo" href="http://www.pittsburgh.intel-research.net/people/campbell.html">Jason D. Campbell</a>, and <a class="authinfo" href="http://www.pittsburgh.intel-research.net/people/pillai.html">Padmanabhan Pillai</a>.
<em>International Journal of Robotics Research</em>,
27(3), Mar 2008.
Also appeared as Distributed Watchpoints: Debugging Large Multi-Robot Systems, (ICRA07).
</td></tr>
<tr><td></td><td colspan="2"><div class="invisible" id="abstextmderosa-ijrr-2008"><table><tr><td class="hide"><a href="javascript:toggleabs('mderosa-ijrr-2008')">hide<br/>Abstract</a></td><td><p class="abs">Distributed systems frequently exhibit properties of interest which span multiple entities. These properties cannot easily be detected from any single entity, but can be readily be detected by combining the knowledge of multiple entities. Testing for distributed properties is especially important in debugging or verifying software for modular robots. We have developed a technique we call distributed watchpoint triggers which can efficiently recognize distributed conditions. Our watchpoint description language can handle a variety of temporal, spatial, and logical properties spanning multiple robots. This paper presents the specification language, describes the distributed online mechanism for detecting distributed conditions in a running system, and evaluates the performance of our implementation.</p></td></tr></table></div></td></tr><tr><td></td><td colspan="2"><a name="bibmderosa-ijrr-2008"><pre class="invisible" id="bibtextmderosa-ijrr-2008">@article{mderosa-ijrr-2008,
  author = {De~Rosa, Michael and Goldstein, Seth Copen and Lee, Peter
     and Campbell, Jason D. and Pillai, Padmanabhan},
  journal = {International Journal of Robotics Research},
  keywords = {Debugging Distributed Systems},
  month = {Mar},
  note = {Special Issue on Modular Robotics},
  url = {http://www.cs.cmu.edu/~claytronics/papers/mderosa-ijrr-2008.pdf},
  venue = {International Journal of Robotics Research},
  number = {3},
  title = {Distributed Watchpoints: Debugging Large Modular Robotic
     Systems},
  abstract = {Distributed systems frequently exhibit properties of
     interest which span multiple entities. These properties cannot
     easily be detected from any single entity, but can be readily be
     detected by combining the knowledge of multiple entities. Testing
     for distributed properties is especially important in debugging
     or verifying software for modular robots. We have developed a
     technique we call distributed watchpoint triggers which can
     efficiently recognize distributed conditions. Our watchpoint
     description language can handle a variety of temporal, spatial,
     and logical properties spanning multiple robots. This paper
     presents the specification language, describes the distributed
     online mechanism for detecting distributed conditions in a
     running system, and evaluates the performance of our
     implementation.},
  volume = {27},
  also = {Distributed Watchpoints: Debugging Large Multi-Robot
     Systems, (ICRA07)},
  year = {2008},
}
</pre></a></td></tr>
<tr><td></td><td class="entry"><a name="dewey08"></a><a name="topdewey08">
</a><a class="title" href="http://www.cs.cmu.edu/~seth/papers/dewey08.html">Generalizing metamodules to simplify planning in modular robotic systems</a></td><td class="links" nowrap=""> <a class="bib" href="javascript:togglebib('dewey08')">bib</a> </td></tr><tr><td></td><td class="authinfo" colspan="2">
<a class="authinfo" href="http://www.cs.cmu.edu/~seth/helpmefind.html">Daniel Dewey</a>, <a class="authinfo" href="http://www.pittsburgh.intel-research.net/people/siddh.html">Siddhartha Srinivasa</a>, <a class="authinfo" href="http://www.cs.cmu.edu/~seth/helpmefind.html">Michael Ashley-Rollman</a>, <a class="authinfo" href="http://www.cs.cmu.edu/~seth/helpmefind.html">Michael De Rosa</a>, <a class="authinfo" href="http://www.pittsburgh.intel-research.net/people/pillai.html">Padmanabhan Pillai</a>, <a class="authinfo" href="http://www.cs.cmu.edu/~seth/helpmefind.html">Todd Mowry</a>, <a class="authinfo" href="http://www.cs.cmu.edu/~seth/helpmefind.html">Jason Campbell</a>, and <a class="authinfo" href="http://www.cs.cmu.edu/~seth">Seth Copen Goldstein</a>.
Carnegie Mellon University Technical Report No. CMU-CS-08-139,
2008.
</td></tr>
<tr><td></td><td colspan="2"><a name="bibdewey08"><pre class="invisible" id="bibtextdewey08">@techreport{dewey08,
  author = {Dewey, Daniel and Srinivasa, Siddhartha and
     Ashley-Rollman, Michael and De Rosa, Michael and Pillai,
     Padmanabhan and Mowry, Todd and Campbell, Jason and Goldstein,
     Seth Copen},
  title = {Generalizing metamodules to simplify planning in modular
     robotic systems},
  institution = {Carnegie Mellon University},
  year = {2008},
  number = {CMU-CS-08-139},
}
</pre></a></td></tr>
<tr><td></td><td class="entry"><a name="venkataramani-async08"></a><a name="topvenkataramani-async08">
</a><a class="title" href="http://www.cs.cmu.edu/~seth/papers/venkataramani-async08.html">Heterogeneous Latch-Based Asynchronous Pipelines</a></td><td class="links" nowrap=""><a class="pdf" href="http://www.cs.cmu.edu/~seth/papers/venkataramani-async08.pdf">pdf</a> <a class="bib" href="javascript:togglebib('venkataramani-async08')">bib</a> <a class="abs" href="javascript:toggleabs('venkataramani-async08')">abstract</a> </td></tr><tr><td></td><td class="authinfo" colspan="2">
<a class="authinfo" href="http://www.ece.cmu.edu/~girishv/">Girish Venkataramani</a>, <a class="authinfo" href="http://www.cs.cmu.edu/~tibi/">Tiberiu Chelcea</a>, and <a class="authinfo" href="http://www.cs.cmu.edu/~seth">Seth Copen Goldstein</a>.
<em>Asynchronous Circuits and Systems, International Symposium on</em>,
pages 83–92, 2008.
</td></tr>
<tr><td></td><td colspan="2"><div class="invisible" id="abstextvenkataramani-async08"><table><tr><td class="hide"><a href="javascript:toggleabs('venkataramani-async08')">hide<br/>Abstract</a></td><td><p class="abs">We present a technique to automatically synthesize heterogeneous asynchronous pipelines by combining two different latching styles: normally open D-latches for high performance and self-resetting D-latches for low power. Theformer is fast but results in high power consumption due to data glitches that leak through the latch when it is open. The latter is normally closed and is opened just before data stabilizes. Thus, it is more power-efficient but slower than normally open D-latches. We propose a module selection optimization that assigns each pipeline stage to one of these two latching styles. This is performed by an automated algorithm that uses two types of heuristics: (1) it uses the Global Critical Path (GCP), to assign D-latches to stages that are sequentially critical, and (2) it estimates potential datapath glitching to make SR-latch assignment decisions. The algorithm has quadratic-time complexity and experiments that apply the algorithm on several media processing kernels indicate that, on average, the heterogeneous pipelining algorithm achieves higher performance and is more energy efficient than either the homogeneous D-latch or SR-latch pipeline styles.</p></td></tr></table></div></td></tr><tr><td></td><td colspan="2"><a name="bibvenkataramani-async08"><pre class="invisible" id="bibtextvenkataramani-async08">@inproceedings{venkataramani-async08,
  author = {Venkataramani, Girish and Chelcea, Tiberiu and Goldstein,
     Seth Copen},
  title = {Heterogeneous Latch-Based Asynchronous Pipelines},
  journal = {Asynchronous Circuits and Systems, International
     Symposium on},
  year = {2008},
  issn = {1522-8681},
  pages = {83--92},
  keywords = {Asychronous Circuits},
  doi = {http://doi.ieeecomputersociety.org/10.1109/ASYNC.2008.21},
  publisher = {IEEE Computer Society},
  address = {Los Alamitos, CA, USA},
  abstract = {We present a technique to automatically synthesize
     heterogeneous asynchronous pipelines by combining two different
     latching styles: normally open D-latches for high performance and
     self-resetting D-latches for low power. Theformer is fast but
     results in high power consumption due to data glitches that leak
     through the latch when it is open. The latter is normally closed
     and is opened just before data stabilizes. Thus, it is more
     power-efficient but slower than normally open D-latches. We
     propose a module selection optimization that assigns each
     pipeline stage to one of these two latching styles. This is
     performed by an automated algorithm that uses two types of
     heuristics: (1) it uses the Global Critical Path (GCP), to assign
     D-latches to stages that are sequentially critical, and (2) it
     estimates potential datapath glitching to make SR-latch
     assignment decisions. The algorithm has quadratic-time complexity
     and experiments that apply the algorithm on several media
     processing kernels indicate that, on average, the heterogeneous
     pipelining algorithm achieves higher performance and is more
     energy efficient than either the homogeneous D-latch or SR-latch
     pipeline styles.},
  url = {http://www.cs.cmu.edu/~seth/papers/venkataramani-async08.pdf},
}
</pre></a></td></tr>
<tr><td></td><td class="entry"><a name="koes-cgo08"></a><a name="topkoes-cgo08">
</a><a class="title" href="http://www.cs.cmu.edu/~seth/papers/koes-cgo08.html">Near-Optimal Instruction Selection on DAGs</a></td><td class="links" nowrap=""><a class="pdf" href="http://www.cs.cmu.edu/~seth/papers/koes-cgo08.pdf">pdf</a> <a class="bib" href="javascript:togglebib('koes-cgo08')">bib</a> <a class="abs" href="javascript:toggleabs('koes-cgo08')">abstract</a> </td></tr><tr><td></td><td class="authinfo" colspan="2">
<a class="authinfo" href="http://www.cs.cmu.edu/~dkoes/">David Ryan Koes</a> and <a class="authinfo" href="http://www.cs.cmu.edu/~seth">Seth Copen Goldstein</a>.
In <em>Proceedings of the International Symposium on Code Generation and Optimization (CGO 2008)</em>,
2008.
</td></tr>
<tr><td></td><td colspan="2"><div class="invisible" id="abstextkoes-cgo08"><table><tr><td class="hide"><a href="javascript:toggleabs('koes-cgo08')">hide<br/>Abstract</a></td><td><p class="abs">Instruction selection is a key component of code generation. High quality instruction selection is of particular importance in the embedded space where complex instruction sets are common and code size is a prime concern. Although instruction selection on tree expressions is a well understood and easily solved problem, instruction selection on directed acyclic graphs is NP-complete. In this paper we present NOLTIS, a near-optimal, linear time instruction selection algorithm for DAG expressions. NOLTIS is easy to implement, fast, and effective with a demonstrated average code size improvement of 5.1% compared to the traditional tree decomposition and tiling approach.</p></td></tr></table></div></td></tr><tr><td></td><td colspan="2"><a name="bibkoes-cgo08"><pre class="invisible" id="bibtextkoes-cgo08">@inproceedings{koes-cgo08,
  author = {Koes, David Ryan and Goldstein, Seth Copen},
  title = {Near-Optimal Instruction Selection on {DAG}s},
  booktitle = {Proceedings of the International Symposium on Code
     Generation and Optimization {(CGO 2008)}},
  year = {2008},
  keywords = {Compilers:Instruction Selection},
  abstract = {Instruction selection is a key component of code
     generation. High quality instruction selection is of particular
     importance in the embedded space where complex instruction sets
     are common and code size is a prime concern. Although instruction
     selection on tree expressions is a well understood and easily
     solved problem, instruction selection on directed acyclic graphs
     is NP-complete. In this paper we present NOLTIS, a near-optimal,
     linear time instruction selection algorithm for DAG expressions.
     NOLTIS is easy to implement, fast, and effective with a
     demonstrated average code size improvement of 5.1\% compared to
     the traditional tree decomposition and tiling approach.},
  publisher = {IEEE Computer Society},
  url = {http://www.cs.cmu.edu/~seth/papers/koes-cgo08.pdf},
  address = {Washington, DC, USA},
}
</pre></a></td></tr>
<tr><td></td><td class="entry"><a name="derosa-icra08"></a><a name="topderosa-icra08">
</a><a class="title" href="http://www.cs.cmu.edu/~seth/papers/derosa-icra08.html">Programming Modular Robots with Locally Distributed Predicates</a></td><td class="links" nowrap=""><a class="pdf" href="http://www.cs.cmu.edu/~claytronics/papers/derosa-icra08.pdf">pdf</a> <a class="bib" href="javascript:togglebib('derosa-icra08')">bib</a> <a class="abs" href="javascript:toggleabs('derosa-icra08')">abstract</a> </td></tr><tr><td></td><td class="authinfo" colspan="2">
<a class="authinfo" href="http://www.cs.cmu.edu/~mderosa/">Michael De Rosa</a>, <a class="authinfo" href="http://www.cs.cmu.edu/~seth">Seth Copen Goldstein</a>, <a class="authinfo" href="http://www.cs.cmu.edu/~petel/">Peter Lee</a>, <a class="authinfo" href="http://www.pittsburgh.intel-research.net/people/campbell.html">Jason D. Campbell</a>, and <a class="authinfo" href="http://www.pittsburgh.intel-research.net/people/pillai.html">Padmanabhan Pillai</a>.
In <em>Proceedings of the IEEE International Conference on Robotics and Automation ICRA  2008</em>,
2008.
</td></tr>
<tr><td></td><td colspan="2"><div class="invisible" id="abstextderosa-icra08"><table><tr><td class="hide"><a href="javascript:toggleabs('derosa-icra08')">hide<br/>Abstract</a></td><td><p class="abs">We present a high-level language for programming modular robotic systems, based on locally distributed predicates (LDP), which are distributed conditions that hold for a connected subensemble of the robotic system. An LDP program is a collection of LDPs with associated actions which are triggered on any subensemble that matches the predicate. The result is a reactive programming language which efficiently and concisely supports ensemble-level programming. We demonstrate the utility of LDP by implementing three common, but diverse, modular robotic tasks.</p></td></tr></table></div></td></tr><tr><td></td><td colspan="2"><a name="bibderosa-icra08"><pre class="invisible" id="bibtextderosa-icra08">@inproceedings{derosa-icra08,
  author = {De~Rosa, Michael and Goldstein, Seth Copen and Lee, Peter
     and Campbell, Jason D. and Pillai, Padmanabhan},
  booktitle = {Proceedings of the IEEE International Conference on
     Robotics and Automation {ICRA  2008}},
  venue = {IEEE International Conference on Robotics and Automation
     (ICRA)},
  keywords = {Claytronics, Modular Robotics, Programming, LDP},
  title = {Programming Modular Robots with Locally Distributed
     Predicates},
  year = {2008},
  abstract = {We present a high-level language for programming modular
     robotic systems, based on locally distributed predicates (LDP),
     which are distributed conditions that hold for a connected
     subensemble of the robotic system. An LDP program is a collection
     of LDPs with associated actions which are triggered on any
     subensemble that matches the predicate. The result is a reactive
     programming language which efficiently and concisely supports
     ensemble-level programming. We demonstrate the utility of LDP by
     implementing three common, but diverse, modular robotic tasks.},
  url = {http://www.cs.cmu.edu/~claytronics/papers/derosa-icra08.pdf},
}
</pre></a></td></tr>
<tr><td></td><td class="entry"><a name="cannon08"></a><a name="topcannon08">
</a><a class="title" href="http://www.cs.cmu.edu/~seth/papers/cannon08.html">Magnetic Resonant Coupling as a Potential Means for Wireless Power Transfer to Multiple Small Receivers</a></td><td class="links" nowrap=""> <a class="bib" href="javascript:togglebib('cannon08')">bib</a> </td></tr><tr><td></td><td class="authinfo" colspan="2">
<a class="authinfo" href="http://www.cs.cmu.edu/~seth/helpmefind.html">Benjamin L. Cannon</a>, <a class="authinfo" href="http://www.ece.cmu.edu/directory/details/69">James F. Hoburg</a>, <a class="authinfo" href="http://www.cs.cmu.edu/~seth/helpmefind.html">Daniel D. Stancil</a>, and <a class="authinfo" href="http://www.cs.cmu.edu/~seth">Seth Copen Goldstein</a>.
Carnegie Mellon University Technical Report No. CMU-CS-08-167,
Dec 2008.
</td></tr>
<tr><td></td><td colspan="2"><a name="bibcannon08"><pre class="invisible" id="bibtextcannon08">@techreport{cannon08,
  author = {Cannon, Benjamin L. and Hoburg, James F. and Stancil,
     Daniel D. and Goldstein, Seth Copen},
  title = {Magnetic Resonant Coupling as a Potential Means for
     Wireless Power Transfer to Multiple Small Receivers},
  institution = {Carnegie Mellon University},
  year = {2008},
  number = {CMU-CS-08-167},
  month = {Dec},
}
</pre></a></td></tr>
<tr><td class="year">2007</td><td class="entry"><a name="bkirby-iros07"></a><a name="topbkirby-iros07">
</a><a class="title" href="http://www.cs.cmu.edu/~seth/papers/bkirby-iros07.html">A Modular Robotic System Using Magnetic Force Effectors</a></td><td class="links" nowrap=""><a class="pdf" href="http://www.cs.cmu.edu/~claytronics/papers/bkirby-iros07.pdf">pdf</a> <a class="bib" href="javascript:togglebib('bkirby-iros07')">bib</a> <a class="abs" href="javascript:toggleabs('bkirby-iros07')">abstract</a> </td></tr><tr><td></td><td class="authinfo" colspan="2">
<a class="authinfo" href="http://people.cs.cmu.edu/person/46359.html">Brian Kirby</a>, <a class="authinfo" href="http://www.me.cmu.edu/faculty1/sitti/nano/members/burak/">Burak Aksak</a>, <a class="authinfo" href="http://www.cs.cmu.edu/~seth">Seth Copen Goldstein</a>, <a class="authinfo" href="http://www.ece.cmu.edu/directory/details/69">James F. Hoburg</a>, <a class="authinfo" href="http://www.cs.cmu.edu/~tcm">Todd C. Mowry</a>, and <a class="authinfo" href="http://www.pittsburgh.intel-research.net/people/pillai.html">Padmanabhan Pillai</a>.
In <em>Proceedings of the IEEE International Conference on Intelligent Robots and Systems (IROS  2007)</em>,
Oct 2007.
</td></tr>
<tr><td></td><td colspan="2"><div class="invisible" id="abstextbkirby-iros07"><table><tr><td class="hide"><a href="javascript:toggleabs('bkirby-iros07')">hide<br/>Abstract</a></td><td><p class="abs">One of the primary impediments to building ensembles with many modular robots is the complexity and number of mechanical mechanisms used to construct the individual modules. As part of the Claytronics project—which aims to build very large ensembles of modular robots—we investigate how to simplify each module by eliminating moving parts and reducing the number of mechanical mechanisms on each robot by using force-at-a-distance actuators. Additionally, we are also investigating the feasibility of using these unary actuators to improve docking performance, implement intermodule adhesion, power transfer, communication, and sensing.</p></td></tr></table></div></td></tr><tr><td></td><td colspan="2"><a name="bibbkirby-iros07"><pre class="invisible" id="bibtextbkirby-iros07">@inproceedings{bkirby-iros07,
  author = {Kirby, Brian and Aksak, Burak and Goldstein, Seth Copen
     and Hoburg, James F. and Mowry, Todd C. and Pillai, Padmanabhan},
  title = {A Modular Robotic System Using Magnetic Force Effectors},
  booktitle = {Proceedings of the IEEE International Conference on
     Intelligent Robots and Systems ({IROS  2007})},
  year = {2007},
  month = {Oct},
  abstract = {One of the primary impediments to building ensembles
     with many modular robots is the complexity and number of
     mechanical mechanisms used to construct the individual modules.
     As part of the Claytronics project---which aims to build very
     large ensembles of modular robots---we investigate how to
     simplify each module by eliminating moving parts and reducing the
     number of mechanical mechanisms on each robot by using
     force-at-a-distance actuators. Additionally, we are also
     investigating the feasibility of using these unary actuators to
     improve docking performance, implement intermodule adhesion,
     power transfer, communication, and sensing.},
  keywords = {Claytronics, Actuation, Adhesion},
  url = {http://www.cs.cmu.edu/~claytronics/papers/bkirby-iros07.pdf},
}
</pre></a></td></tr>
<tr><td></td><td class="entry"><a name="ravichandran-iros07"></a><a name="topravichandran-iros07">
</a><a class="title" href="http://www.cs.cmu.edu/~seth/papers/ravichandran-iros07.html">A Scalable Distributed Algorithm for Shape Transformation in Multi-Robot Systems</a></td><td class="links" nowrap=""><a class="pdf" href="http://www.cs.cmu.edu/~claytronics/papers/ravichandran-iros07.pdf">pdf</a> <a class="bib" href="javascript:togglebib('ravichandran-iros07')">bib</a> <a class="abs" href="javascript:toggleabs('ravichandran-iros07')">abstract</a> </td></tr><tr><td></td><td class="authinfo" colspan="2">
<a class="authinfo" href="http://www.cs.cmu.edu/~seth/helpmefind.html">Ramprasad Ravichandran</a>, <a class="authinfo" href="http://www.cs.cmu.edu/~seth/helpmefind.html">Geoffrey Gordon</a>, and <a class="authinfo" href="http://www.cs.cmu.edu/~seth">Seth Copen Goldstein</a>.
In <em>Proceedings of the IEEE International Conference on Intelligent Robots and Systems IROS  2007</em>,
Oct 2007.
</td></tr>
<tr><td></td><td colspan="2"><div class="invisible" id="abstextravichandran-iros07"><table><tr><td class="hide"><a href="javascript:toggleabs('ravichandran-iros07')">hide<br/>Abstract</a></td><td><p class="abs">Distributed reconfiguration is an important problem in multi-robot systems such as mobile sensor nets and metamorphic robot systems. In this work, we present a scalable distributed reconfiguration algorithm, Hierarchical Median Decomposition, to achieve arbitrary target configurations. Our algorithm is built on top of a novel distributed median consensus estimator. The algorithms presented are fully distributed and do not require global communication. We show results from simulations in an open source multi-robot simulator.</p></td></tr></table></div></td></tr><tr><td></td><td colspan="2"><a name="bibravichandran-iros07"><pre class="invisible" id="bibtextravichandran-iros07">@inproceedings{ravichandran-iros07,
  author = {Ravichandran, Ramprasad and Gordon, Geoffrey and
     Goldstein, Seth Copen},
  title = {A Scalable Distributed Algorithm for Shape Transformation
     in Multi-Robot Systems},
  booktitle = {Proceedings of the IEEE International Conference on
     Intelligent Robots and Systems {IROS  2007}},
  year = {2007},
  month = {Oct},
  keywords = {Claytronics, Multi-Robot Formations},
  abstract = {Distributed reconfiguration is an important problem in
     multi-robot systems such as mobile sensor nets and metamorphic
     robot systems. In this work, we present a scalable distributed
     reconfiguration algorithm, Hierarchical Median Decomposition, to
     achieve arbitrary target configurations. Our algorithm is built
     on top of a novel distributed median consensus estimator. The
     algorithms presented are fully distributed and do not require
     global communication. We show results from simulations in an open
     source multi-robot simulator.},
  url = {http://www.cs.cmu.edu/~claytronics/papers/ravichandran-iros07.pdf},
}
</pre></a></td></tr>
<tr><td></td><td class="entry"><a name="ashley-rollman-derosa-iros07wksp"></a><a name="topashley-rollman-derosa-iros07wksp">
</a><a class="title" href="http://www.cs.cmu.edu/~seth/papers/ashley-rollman-derosa-iros07wksp.html">Declarative Programming for Modular Robots</a></td><td class="links" nowrap=""><a class="pdf" href="http://www.cs.cmu.edu/~claytronics/papers/ashley-rollman-derosa-iros07wksp.pdf">pdf</a> <a class="bib" href="javascript:togglebib('ashley-rollman-derosa-iros07wksp')">bib</a> <a class="abs" href="javascript:toggleabs('ashley-rollman-derosa-iros07wksp')">abstract</a> </td></tr><tr><td></td><td class="authinfo" colspan="2">
<a class="authinfo" href="http://www.cs.cmu.edu/~mpa">Michael P. Ashley-Rollman</a>, <a class="authinfo" href="http://www.cs.cmu.edu/~mderosa/">Michael De Rosa</a>, <a class="authinfo" href="http://www.pittsburgh.intel-research.net/people/siddh.html">Siddhartha S. Srinivasa</a>, <a class="authinfo" href="http://www.pittsburgh.intel-research.net/people/pillai.html">Padmanabhan Pillai</a>, <a class="authinfo" href="http://www.cs.cmu.edu/~seth">Seth Copen Goldstein</a>, and <a class="authinfo" href="http://www.pittsburgh.intel-research.net/people/campbell.html">Jason D. Campbell</a>.
In <em>Workshop on Self-Reconfigurable Robots/Systems and Applications at IROS  2007</em>,
Oct 2007.
</td></tr>
<tr><td></td><td colspan="2"><div class="invisible" id="abstextashley-rollman-derosa-iros07wksp"><table><tr><td class="hide"><a href="javascript:toggleabs('ashley-rollman-derosa-iros07wksp')">hide<br/>Abstract</a></td><td><p class="abs">Because of the timing, complexity, and asynchronicity challenges common in modular robot software we have recently begun to explore new programming models for modular robot ensembles. In this paper we apply two of those models to a metamodule-based shape planning algorithm and comment on the differences between the two approaches. Our results suggest that declarative programming can provide several advantages over more traditional imperative approaches, and that the differences between declarative programming styles can themselves contribute leverage to different parts of the problem domain.</p></td></tr></table></div></td></tr><tr><td></td><td colspan="2"><a name="bibashley-rollman-derosa-iros07wksp"><pre class="invisible" id="bibtextashley-rollman-derosa-iros07wksp">@inproceedings{ashley-rollman-derosa-iros07wksp,
  author = {Ashley-Rollman, Michael P. and De~Rosa, Michael and
     Srinivasa, Siddhartha S. and Pillai, Padmanabhan and Goldstein,
     Seth Copen and Campbell, Jason D.},
  title = {Declarative Programming for Modular Robots},
  booktitle = {Workshop on Self-Reconfigurable Robots/Systems and
     Applications at {IROS  2007}},
  year = {2007},
  month = {Oct},
  keywords = {Claytronics, Programming Models, Planning, LDP, Meld},
  abstract = {Because of the timing, complexity, and asynchronicity
     challenges common in modular robot software we have recently
     begun to explore new programming models for modular robot
     ensembles. In this paper we apply two of those models to a
     metamodule-based shape planning algorithm and comment on the
     differences between the two approaches. Our results suggest that
     declarative programming can provide several advantages over more
     traditional imperative approaches, and that the differences
     between declarative programming styles can themselves contribute
     leverage to different parts of the problem domain.},
  url = {http://www.cs.cmu.edu/~claytronics/papers/ashley-rollman-derosa-iros07wksp.pdf},
}
</pre></a></td></tr>
<tr><td></td><td class="entry"><a name="karagozler-iros07"></a><a name="topkaragozler-iros07">
</a><a class="title" href="http://www.cs.cmu.edu/~seth/papers/karagozler-iros07.html">Electrostatic Latching for Inter-module Adhesion, Power Transfer, and Communication in Modular Robots</a></td><td class="links" nowrap=""><a class="pdf" href="http://www.cs.cmu.edu/~claytronics/papers/karagozler-iros07.pdf">pdf</a> <a class="bib" href="javascript:togglebib('karagozler-iros07')">bib</a> <a class="abs" href="javascript:toggleabs('karagozler-iros07')">abstract</a> </td></tr><tr><td></td><td class="authinfo" colspan="2">
<a class="authinfo" href="http://www.andrew.cmu.edu/user/mkaragoz/">Mustafa Emre Karagozler</a>, <a class="authinfo" href="http://www.pittsburgh.intel-research.net/people/campbell.html">Jason D. Campbell</a>, <a class="authinfo" href="http://www.ece.cmu.edu/~fedder/">Gary K. Fedder</a>, <a class="authinfo" href="http://www.cs.cmu.edu/~seth">Seth Copen Goldstein</a>, <a class="authinfo" href="http://code.arc.cmu.edu/~philetus/">Michael Philetus Weller</a>, and <a class="authinfo" href="http://www.cs.cmu.edu/~seth/helpmefind.html">Byung W. Yoon</a>.
In <em>Proceedings of the IEEE International Conference on Intelligent Robots and Systems (IROS  2007)</em>,
Oct 2007.
</td></tr>
<tr><td></td><td colspan="2"><div class="invisible" id="abstextkaragozler-iros07"><table><tr><td class="hide"><a href="javascript:toggleabs('karagozler-iros07')">hide<br/>Abstract</a></td><td><p class="abs">A simple and robust inter-module latch is possibly the most important component of a modular robotic system. This paper describes a latch based on capacitive coupling which not only provides significant adhesion forces, but can also be used for inter-module power transmission and communication. The key insight that enables electrostatic adhesion to be effective at the macroscale is to combine flexible electrodes with a geometery that uses shear forces to provide adhesion. To measure the effectiveness of our latch we incorporated it into a 28cm x 28cm x 28cm modular robot. The result is a latch which requires almost zero static power and yet can hold over 0.6N/cm^2 of latch area.</p></td></tr></table></div></td></tr><tr><td></td><td colspan="2"><a name="bibkaragozler-iros07"><pre class="invisible" id="bibtextkaragozler-iros07">@inproceedings{karagozler-iros07,
  author = {Karagozler, Mustafa Emre and Campbell, Jason D. and
     Fedder, Gary K. and Goldstein, Seth Copen and Weller, Michael
     Philetus and Yoon, Byung W.},
  title = {Electrostatic Latching for Inter-module Adhesion, Power
     Transfer, and Communication in Modular Robots},
  booktitle = {Proceedings of the IEEE International Conference on
     Intelligent Robots and Systems ({IROS  2007})},
  year = {2007},
  month = {Oct},
  abstract = {A simple and robust inter-module latch is possibly the
     most important component of a modular robotic system. This paper
     describes a latch based on capacitive coupling which not only
     provides significant adhesion forces, but can also be used for
     inter-module power transmission and communication. The key
     insight that enables electrostatic adhesion to be effective at
     the macroscale is to combine flexible electrodes with a geometery
     that uses shear forces to provide adhesion. To measure the
     effectiveness of our latch we incorporated it into a 28cm x 28cm
     x 28cm modular robot. The result is a latch which requires almost
     zero static power and yet can hold over 0.6N/cm^2 of latch
     area.},
  keywords = {Actuation, Adhesion, Claytronics},
  url = {http://www.cs.cmu.edu/~claytronics/papers/karagozler-iros07.pdf},
}
</pre></a></td></tr>
<tr><td></td><td class="entry"><a name="funiak-iros07"></a><a name="topfuniak-iros07">
</a><a class="title" href="http://www.cs.cmu.edu/~seth/papers/funiak-iros07.html">Internal Localization of Modular Robot Ensembles</a></td><td class="links" nowrap=""><a class="pdf" href="http://www.cs.cmu.edu/~claytronics/papers/funiak-iros07.pdf">pdf</a> <a class="bib" href="javascript:togglebib('funiak-iros07')">bib</a> <a class="abs" href="javascript:toggleabs('funiak-iros07')">abstract</a> </td></tr><tr><td></td><td class="authinfo" colspan="2">
<a class="authinfo" href="www.cs.cmu.edu/~sfuniak/">Stanislav Funiak</a>, <a class="authinfo" href="http://www.pittsburgh.intel-research.net/people/pillai.html">Padmanabhan Pillai</a>, <a class="authinfo" href="http://www.pittsburgh.intel-research.net/people/campbell.html">Jason D. Campbell</a>, and <a class="authinfo" href="http://www.cs.cmu.edu/~seth">Seth Copen Goldstein</a>.
In <em>Workshop on Self-Reconfiguring Modular Robotics at the IEEE International Conference on Intelligent Robots and Systems (IROS)  2007</em>,
Oct 2007.
</td></tr>
<tr><td></td><td colspan="2"><div class="invisible" id="abstextfuniak-iros07"><table><tr><td class="hide"><a href="javascript:toggleabs('funiak-iros07')">hide<br/>Abstract</a></td><td><p class="abs">The determination of the relative position and pose of every robot in a modular robotic ensemble is a necessary preliminary step for most modular robotic tasks. Localization is particularly important when the modules make local noisy observations and are not significantly constrained by inter-robot latches. In this paper, we propose a robust hierarchical approach to the <em>internal localization</em> problem that uses normalized cut to identify subproblems with small localization error. A key component of our solution is a simple method to reduce the cost of normalized cut computations. The result is a robust algorithm that scales to large, non-homogeneous ensembles. We evaluate our algorithm in simulation on ensembles of up to 10,000 modules, demonstrating substantial improvements over prior work.</p></td></tr></table></div></td></tr><tr><td></td><td colspan="2"><a name="bibfuniak-iros07"><pre class="invisible" id="bibtextfuniak-iros07">@inproceedings{funiak-iros07,
  author = {Funiak, Stanislav and Pillai, Padmanabhan and Campbell,
     Jason D. and Goldstein, Seth Copen},
  title = {Internal Localization of Modular Robot Ensembles},
  booktitle = {Workshop on Self-Reconfiguring Modular Robotics at the
     IEEE International Conference on Intelligent Robots and Systems
     (IROS)  2007},
  year = {2007},
  month = {Oct},
  abstract = {The determination of the relative position and pose of
     every robot in a modular robotic ensemble is a necessary
     preliminary step for most modular robotic tasks. Localization is
     particularly important when the modules make local noisy
     observations and are not significantly constrained by inter-robot
     latches. In this paper, we propose a robust hierarchical approach
     to the {\em internal localization} problem that uses normalized
     cut to identify subproblems with small localization error. A key
     component of our solution is a simple method to reduce the cost
     of normalized cut computations. The result is a robust algorithm
     that scales to large, non-homogeneous ensembles. We evaluate our
     algorithm in simulation on ensembles of up to 10,000 modules,
     demonstrating substantial improvements over prior work.},
  keywords = {Claytronics, Probabilistic Inference, Sensing,
     Localization, Distributed Algorithms},
  url = {http://www.cs.cmu.edu/~claytronics/papers/funiak-iros07.pdf},
}
</pre></a></td></tr>
<tr><td></td><td class="entry"><a name="ashley-rollman-iros07"></a><a name="topashley-rollman-iros07">
</a><a class="title" href="http://www.cs.cmu.edu/~seth/papers/ashley-rollman-iros07.html">Meld: A Declarative Approach to Programming Ensembles</a></td><td class="links" nowrap=""><a class="pdf" href="http://www.cs.cmu.edu/~claytronics/papers/ashley-rollman-iros07.pdf">pdf</a> <a class="bib" href="javascript:togglebib('ashley-rollman-iros07')">bib</a> <a class="abs" href="javascript:toggleabs('ashley-rollman-iros07')">abstract</a> </td></tr><tr><td></td><td class="authinfo" colspan="2">
<a class="authinfo" href="http://www.cs.cmu.edu/~mpa">Michael P. Ashley-Rollman</a>, <a class="authinfo" href="http://www.cs.cmu.edu/~seth">Seth Copen Goldstein</a>, <a class="authinfo" href="http://www.cs.cmu.edu/~petel/">Peter Lee</a>, <a class="authinfo" href="http://www.cs.cmu.edu/~tcm">Todd C. Mowry</a>, and <a class="authinfo" href="http://www.pittsburgh.intel-research.net/people/pillai.html">Padmanabhan Pillai</a>.
In <em>Proceedings of the IEEE International Conference on Intelligent Robots and Systems (IROS  2007)</em>,
Oct 2007.
</td></tr>
<tr><td></td><td colspan="2"><div class="invisible" id="abstextashley-rollman-iros07"><table><tr><td class="hide"><a href="javascript:toggleabs('ashley-rollman-iros07')">hide<br/>Abstract</a></td><td><p class="abs">This paper presents Meld, a programming language for modular robots, i.e., for independently executing robots where inter-robot communication is limited to immediate neighbors. Meld is a declarative language, based on P2, a logic-programming language originally designed for programming overlay networks. By using logic programming, the code for an ensemble of robots can be written from a global perspective, as opposed to a large collection of independent robot views. This greatly simplifies the thought process needed for programming large ensembles. Initial experience shows that this also leads to a considerable reduction in code size and complexity. An initial implementation of Meld has been completed and has been used to demonstrate its effectiveness in the Claytronics simulator. Early results indicate that Meld programs are considerably more concise (more than 20x shorter) than programs written in C++, while running nearly as efficiently.</p></td></tr></table></div></td></tr><tr><td></td><td colspan="2"><a name="bibashley-rollman-iros07"><pre class="invisible" id="bibtextashley-rollman-iros07">@inproceedings{ashley-rollman-iros07,
  author = {Ashley-Rollman, Michael P. and Goldstein, Seth Copen and
     Lee, Peter and Mowry, Todd C. and Pillai, Padmanabhan},
  title = {Meld: A Declarative Approach to Programming Ensembles},
  booktitle = {Proceedings of the IEEE International Conference on
     Intelligent Robots and Systems ({IROS  2007})},
  year = {2007},
  month = {Oct},
  keywords = {Claytronics, Programming Languages, Meld},
  abstract = {This paper presents Meld, a programming language for
     modular robots, i.e., for independently executing robots where
     inter-robot communication is limited to immediate neighbors. Meld
     is a declarative language, based on P2, a logic-programming
     language originally designed for programming overlay networks. By
     using logic programming, the code for an ensemble of robots can
     be written from a global perspective, as opposed to a large
     collection of independent robot views. This greatly simplifies
     the thought process needed for programming large ensembles.
     Initial experience shows that this also leads to a considerable
     reduction in code size and complexity. An initial implementation
     of Meld has been completed and has been used to demonstrate its
     effectiveness in the Claytronics simulator. Early results
     indicate that Meld programs are considerably more concise (more
     than 20x shorter) than programs written in C++, while running
     nearly as efficiently.},
  url = {http://www.cs.cmu.edu/~claytronics/papers/ashley-rollman-iros07.pdf},
}
</pre></a></td></tr>
<tr><td></td><td class="entry"><a name="weller-iros07"></a><a name="topweller-iros07">
</a><a class="title" href="http://www.cs.cmu.edu/~seth/papers/weller-iros07.html">Movement Primitives for an Orthogonal Prismatic Closed-Lattice-Constrained Self-Reconfiguring Module</a></td><td class="links" nowrap=""><a class="pdf" href="http://www.cs.cmu.edu/~claytronics/papers/weller-iros07.pdf">pdf</a> <a class="bib" href="javascript:togglebib('weller-iros07')">bib</a> <a class="abs" href="javascript:toggleabs('weller-iros07')">abstract</a> </td></tr><tr><td></td><td class="authinfo" colspan="2">
<a class="authinfo" href="http://code.arc.cmu.edu/~philetus/">Michael Philetus Weller</a>, <a class="authinfo" href="http://www.andrew.cmu.edu/user/mkaragoz/">Mustafa Emre Karagozler</a>, <a class="authinfo" href="http://people.cs.cmu.edu/person/46359.html">Brian Kirby</a>, <a class="authinfo" href="http://www.pittsburgh.intel-research.net/people/campbell.html">Jason D. Campbell</a>, and <a class="authinfo" href="http://www.cs.cmu.edu/~seth">Seth Copen Goldstein</a>.
In <em>Workshop on Self-Reconfiguring Modular Robotics at the IEEE International Conference on Intelligent Robots and Systems (IROS)  2007</em>,
Oct 2007.
</td></tr>
<tr><td></td><td colspan="2"><div class="invisible" id="abstextweller-iros07"><table><tr><td class="hide"><a href="javascript:toggleabs('weller-iros07')">hide<br/>Abstract</a></td><td><p class="abs">We describe a new set of prismatic movement primitives for cubic modular robots. Our approach appears more practical than previous metamodule-based approaches. We also describe recent hardware developments in our cubic robot modules that have sufficient stiffness and actuator strength so that when they work together they can realize, in earth’s gravity, all of the motion primitives we describe here.</p></td></tr></table></div></td></tr><tr><td></td><td colspan="2"><a name="bibweller-iros07"><pre class="invisible" id="bibtextweller-iros07">@inproceedings{weller-iros07,
  author = {Weller, Michael Philetus and Karagozler, Mustafa Emre and
     Kirby, Brian and Campbell, Jason D. and Goldstein, Seth Copen},
  title = {Movement Primitives for an Orthogonal Prismatic
     Closed-Lattice-Constrained Self-Reconfiguring Module},
  booktitle = {Workshop on Self-Reconfiguring Modular Robotics at the
     IEEE International Conference on Intelligent Robots and Systems
     (IROS)  2007},
  year = {2007},
  month = {Oct},
  keywords = {Claytronics, Adhesion, Robotics, Planning},
  abstract = {We describe a new set of prismatic movement primitives
     for cubic modular robots. Our approach appears more practical
     than previous metamodule-based approaches. We also describe
     recent hardware developments in our cubic robot modules that have
     sufficient stiffness and actuator strength so that when they work
     together they can realize, in earth's gravity, all of the motion
     primitives we describe here.},
  url = {http://www.cs.cmu.edu/~claytronics/papers/weller-iros07.pdf},
}
</pre></a></td></tr>
<tr><td></td><td class="entry"><a name="dac07-gcp"></a><a name="topdac07-gcp">
</a><a class="title" href="http://www.cs.cmu.edu/~seth/papers/dac07-gcp.html">Global Critical Path: A Tool for System-Level Timing Analysis</a></td><td class="links" nowrap=""><a class="pdf" href="http://www.cs.cmu.edu/~seth/papers/dac07-gcp.pdf">pdf</a> <a class="bib" href="javascript:togglebib('dac07-gcp')">bib</a> <a class="abs" href="javascript:toggleabs('dac07-gcp')">abstract</a> </td></tr><tr><td></td><td class="authinfo" colspan="2">
<a class="authinfo" href="http://www.ece.cmu.edu/~girishv/">Girish Venkataramani</a>, <a class="authinfo" href="http://research.microsoft.com/users/mbudiu/">Mihai Budiu</a>, <a class="authinfo" href="http://www.cs.cmu.edu/~tibi/">Tiberiu Chelcea</a>, and <a class="authinfo" href="http://www.cs.cmu.edu/~seth">Seth Copen Goldstein</a>.
In <em>Proceedings of the 44th ACM/IEEE Design Automation Conference</em>,
pages 783–786, Jun 2007.
</td></tr>
<tr><td></td><td colspan="2"><div class="invisible" id="abstextdac07-gcp"><table><tr><td class="hide"><a href="javascript:toggleabs('dac07-gcp')">hide<br/>Abstract</a></td><td><p class="abs">An effective method for focusing optimization effort on the most important parts of a design is to examine those elements on the critical path. Traditionally, the critical path is defined at the RTL level, as the longest path in the combinational logic between clocked reisters. In this paper, we present a system-level timing analysis technique to define the concept of a Global Critical Path (GCP), for predicting system-level performance. We show how the GCP can be used as a theoretical and practical tool for understanding, summarizing and optimizing the behavior of highly concurrent self-timed circuits. We formally define the GCP and show how it can be constructed using a discrete event model and hardware profiling techniques. The GCP provides valuable insight into the control-path behavior of circuits and in finding system-level bottlenecks. We have incorporated the GCP construction and analysis framework into a high-level synthesis and simulation toolchain, thus enabling complete automation in modeling, analysis and optimization.</p></td></tr></table></div></td></tr><tr><td></td><td colspan="2"><a name="bibdac07-gcp"><pre class="invisible" id="bibtextdac07-gcp">@inproceedings{dac07-gcp,
  author = {Venkataramani, Girish and Budiu, Mihai and Chelcea,
     Tiberiu and Goldstein, Seth Copen},
  title = {Global Critical Path: A Tool for System-Level Timing
     Analysis},
  booktitle = {Proceedings of the 44th ACM/IEEE Design Automation
     Conference},
  year = {2007},
  month = {Jun},
  address = {San Diego, CA},
  pages = {783--786},
  abstract = {An effective method for focusing optimization effort on
     the most important parts of a design is to examine those elements
     on the critical path. Traditionally, the critical path is defined
     at the RTL level, as the longest path in the combinational logic
     between clocked reisters. In this paper, we present a
     system-level timing analysis technique to define the concept of a
     Global Critical Path (GCP), for predicting system-level
     performance. We show how the GCP can be used as a theoretical and
     practical tool for understanding, summarizing and optimizing the
     behavior of highly concurrent self-timed circuits. We formally
     define the GCP and show how it can be constructed using a
     discrete event model and hardware profiling techniques. The GCP
     provides valuable insight into the control-path behavior of
     circuits and in finding system-level bottlenecks. We have
     incorporated the GCP construction and analysis framework into a
     high-level synthesis and simulation toolchain, thus enabling
     complete automation in modeling, analysis and optimization.},
  url = {http://www.cs.cmu.edu/~seth/papers/dac07-gcp.pdf},
  keywords = {Asychronous Circuits, CAD, Global Critical Path, System
     modeling, Hardware profiling},
}
</pre></a></td></tr>
<tr><td></td><td class="entry"><a name="dac07-sr"></a><a name="topdac07-sr">
</a><a class="title" href="http://www.cs.cmu.edu/~seth/papers/dac07-sr.html">Self-Resetting Latches for Asynchronous Micro-Pipelines</a></td><td class="links" nowrap=""><a class="pdf" href="http://www.cs.cmu.edu/~seth/papers/dac07-sr.pdf">pdf</a> <a class="bib" href="javascript:togglebib('dac07-sr')">bib</a> <a class="abs" href="javascript:toggleabs('dac07-sr')">abstract</a> </td></tr><tr><td></td><td class="authinfo" colspan="2">
<a class="authinfo" href="http://www.cs.cmu.edu/~tibi/">Tiberiu Chelcea</a>, <a class="authinfo" href="http://www.ece.cmu.edu/~girishv/">Girish Venkataramani</a>, and <a class="authinfo" href="http://www.cs.cmu.edu/~seth">Seth Copen Goldstein</a>.
In <em>Proceedings of the 44th ACM/IEEE Design Automation Conference</em>,
pages 986–989, Jun 2007.
</td></tr>
<tr><td></td><td colspan="2"><div class="invisible" id="abstextdac07-sr"><table><tr><td class="hide"><a href="javascript:toggleabs('dac07-sr')">hide<br/>Abstract</a></td><td><p class="abs">Asynchronous circuits are increasingly attractive as low power or high-performance replacements to synchronous designs. A key part of these circuits are asynchronous micropipelines; unfortunatelly, the existing micropipeline styles either improve performance or decrease power consumption, but not both. Very often, the pipeline register plays a crucial role in these cost metrics. In this paper we introduce a new register design, called self-resetting latches, for asynchronous micropipelines which bridges the gap between fast, but power hungry, latch-based designs and slow, but low power, flip-flop designs. The energy-delay metric for large asynchronous systems implemented with self-resetting latches is, on average, 41% better than latch-based designs and 15% better than flip-flop designs.</p></td></tr></table></div></td></tr><tr><td></td><td colspan="2"><a name="bibdac07-sr"><pre class="invisible" id="bibtextdac07-sr">@inproceedings{dac07-sr,
  author = {Chelcea, Tiberiu and Venkataramani, Girish and Goldstein,
     Seth Copen},
  title = {Self-Resetting Latches for Asynchronous Micro-Pipelines},
  booktitle = {Proceedings of the 44th ACM/IEEE Design Automation
     Conference},
  year = {2007},
  month = {Jun},
  address = {San Diego, CA},
  pages = {986--989},
  keywords = {Asychronous Circuits},
  abstract = {Asynchronous circuits are increasingly attractive as low
     power or high-performance replacements to synchronous designs. A
     key part of these circuits are asynchronous micropipelines;
     unfortunatelly, the existing micropipeline styles either improve
     performance or decrease power consumption, but not both. Very
     often, the pipeline register plays a crucial role in these cost
     metrics. In this paper we introduce a new register design, called
     self-resetting latches, for asynchronous micropipelines which
     bridges the gap between fast, but power hungry, latch-based
     designs and slow, but low power, flip-flop designs. The
     energy-delay metric for large asynchronous systems implemented
     with self-resetting latches is, on average, 41\% better than
     latch-based designs and 15\% better than flip-flop designs.},
  url = {http://www.cs.cmu.edu/~seth/papers/dac07-sr.pdf},
}
</pre></a></td></tr>
<tr><td></td><td class="entry"><a name="derosa-icra07"></a><a name="topderosa-icra07">
</a><a class="title" href="http://www.cs.cmu.edu/~seth/papers/derosa-icra07.html">Distributed Watchpoints: Debugging Large Multi-Robot Systems</a></td><td class="links" nowrap=""><a class="pdf" href="http://www.cs.cmu.edu/~claytronics/papers/derosa-icra07.pdf">pdf</a> <a class="bib" href="javascript:togglebib('derosa-icra07')">bib</a> <a class="abs" href="javascript:toggleabs('derosa-icra07')">abstract</a> </td></tr><tr><td></td><td class="authinfo" colspan="2">
<a class="authinfo" href="http://www.cs.cmu.edu/~mderosa/">Michael De Rosa</a>, <a class="authinfo" href="http://www.cs.cmu.edu/~seth">Seth Copen Goldstein</a>, <a class="authinfo" href="http://www.cs.cmu.edu/~petel/">Peter Lee</a>, <a class="authinfo" href="http://www.pittsburgh.intel-research.net/people/campbell.html">Jason D. Campbell</a>, <a class="authinfo" href="http://www.pittsburgh.intel-research.net/people/pillai.html">Padmanabhan Pillai</a>, and <a class="authinfo" href="http://www.cs.cmu.edu/~tcm">Todd C. Mowry</a>.
In <em>Proceedings of the IEEE International Conference on Robotics and Automation ICRA  2007</em>,
Apr 2007.
See <a href="#mderosa-ijrr-2008">mderosa-ijrr-2008</a>.
</td></tr>
<tr><td></td><td colspan="2"><div class="invisible" id="abstextderosa-icra07"><table><tr><td class="hide"><a href="javascript:toggleabs('derosa-icra07')">hide<br/>Abstract</a></td><td><p class="abs">Tightly-coupled multi-agent systems such as modular robots frequently exhibit properties of interest that span multiple modules. These properties cannot easily be detected from any single module, though they might readily be detected by combining the knowledge of multiple modules. Testing for distributed conditions is especially important in debugging or verifying the correctness of software for modular robots. We have developed a technique we call distributed watchpoint triggers which can efficiently recognize such distributed conditions. Our watchpoint description language can handle a variety of temporal, spatial, and logical properties spanning multiple robots. This paper presents that language, describes our fully-distributed, online mechanism for detecting distributed conditions in a running system, and evaluates the performance of our implementation. We found that the performance of the system is highly dependent on the program being debugged, scales linearly with ensemble size, and is small enough to make the system practical in all but the worst case scenarios.</p></td></tr></table></div></td></tr><tr><td></td><td colspan="2"><a name="bibderosa-icra07"><pre class="invisible" id="bibtextderosa-icra07">@inproceedings{derosa-icra07,
  abstract = {Tightly-coupled multi-agent systems such as modular
     robots frequently exhibit properties of interest that span
     multiple modules. These properties cannot easily be detected from
     any single module, though they might readily be detected by
     combining the knowledge of multiple modules. Testing for
     distributed conditions is especially important in debugging or
     verifying the correctness of software for modular robots. We have
     developed a technique we call distributed watchpoint triggers
     which can efficiently recognize such distributed conditions. Our
     watchpoint description language can handle a variety of temporal,
     spatial, and logical properties spanning multiple robots. This
     paper presents that language, describes our fully-distributed,
     online mechanism for detecting distributed conditions in a
     running system, and evaluates the performance of our
     implementation. We found that the performance of the system is
     highly dependent on the program being debugged, scales linearly
     with ensemble size, and is small enough to make the system
     practical in all but the worst case scenarios.},
  author = {De~Rosa, Michael and Goldstein, Seth Copen and Lee, Peter
     and Campbell, Jason D. and Pillai, Padmanabhan and Mowry, Todd
     C.},
  booktitle = {Proceedings of the IEEE International Conference on
     Robotics and Automation {ICRA  2007}},
  venue = {IEEE International Conference on Robotics and Automation
     (ICRA)},
  title = {Distributed Watchpoints: Debugging Large Multi-Robot
     Systems},
  see = {mderosa-ijrr-2008},
  year = {2007},
  month = {Apr},
  keywords = {Debugging, Distributed Algorithms},
  url = {http://www.cs.cmu.edu/~claytronics/papers/derosa-icra07.pdf},
}
</pre></a></td></tr>
<tr><td></td><td class="entry"><a name="chelcea-async07"></a><a name="topchelcea-async07">
</a><a class="title" href="http://www.cs.cmu.edu/~seth/papers/chelcea-async07.html">Area Optimizations for Dual-Rail Circuits Using Relative-Timing Analysis</a></td><td class="links" nowrap=""><a class="pdf" href="http://www.cs.cmu.edu/~seth/papers/chelcea-async07.pdf">pdf</a> <a class="bib" href="javascript:togglebib('chelcea-async07')">bib</a> <a class="abs" href="javascript:toggleabs('chelcea-async07')">abstract</a> </td></tr><tr><td></td><td class="authinfo" colspan="2">
<a class="authinfo" href="http://www.cs.cmu.edu/~tibi/">Tiberiu Chelcea</a>, <a class="authinfo" href="http://www.ece.cmu.edu/~girishv/">Girish Venkataramani</a>, and <a class="authinfo" href="http://www.cs.cmu.edu/~seth">Seth Copen Goldstein</a>.
In <em>Proceedings of the 13th IEEE International Symposium on Asynchronous Circuits and Systems</em>,
pages 117–128, Mar 2007.
</td></tr>
<tr><td></td><td colspan="2"><div class="invisible" id="abstextchelcea-async07"><table><tr><td class="hide"><a href="javascript:toggleabs('chelcea-async07')">hide<br/>Abstract</a></td><td><p class="abs">Future deep sub-micron technologies will be characterized by large parametric variations, which could make asynchronous design an attractive solution for use on large scale. However, the investment in asynchronous CAD tools does not approach that in synchronous ones. Even when asynchronous tools leverage existing synchronous toolflows, they introduce large area and speed overheads. This paper proposes several heuristic and optimal algorithms, based on timing interval analysis, for improving existing asynchronous CAD solutions by optimizing area. The optimized circuits are 2.4 times smaller for an optimal algorithm and 1.8 times smaller for a heuristic one than the existing solutions. The optimized circuits are also shown to be resilient to large parametric variations, yielding better average-case latencies than their synchronous counterparts.</p></td></tr></table></div></td></tr><tr><td></td><td colspan="2"><a name="bibchelcea-async07"><pre class="invisible" id="bibtextchelcea-async07">@inproceedings{chelcea-async07,
  author = {Chelcea, Tiberiu and Venkataramani, Girish and Goldstein,
     Seth Copen},
  title = {Area Optimizations for Dual-Rail Circuits Using
     Relative-Timing Analysis},
  booktitle = {Proceedings of the 13th IEEE International Symposium on
     Asynchronous Circuits and Systems},
  year = {2007},
  address = {Berkeley, CA},
  month = {Mar},
  pages = {117--128},
  abstract = {Future deep sub-micron technologies will be
     characterized by large parametric variations, which could make
     asynchronous design an attractive solution for use on large
     scale. However, the investment in asynchronous CAD tools does not
     approach that in synchronous ones. Even when asynchronous tools
     leverage existing synchronous toolflows, they introduce large
     area and speed overheads. This paper proposes several heuristic
     and optimal algorithms, based on timing interval analysis, for
     improving existing asynchronous CAD solutions by optimizing area.
     The optimized circuits are 2.4 times smaller for an optimal
     algorithm and 1.8 times smaller for a heuristic one than the
     existing solutions. The optimized circuits are also shown to be
     resilient to large parametric variations, yielding better
     average-case latencies than their synchronous counterparts.},
  url = {http://www.cs.cmu.edu/~seth/papers/chelcea-async07.pdf},
  keywords = {Asychronous Circuits, CAD},
}
</pre></a></td></tr>
<tr><td></td><td class="entry"><a name="venkataramani-iccad07"></a><a name="topvenkataramani-iccad07">
</a><a class="title" href="http://www.cs.cmu.edu/~seth/papers/venkataramani-iccad07.html">Operation Chaining Asynchronous Pipelined Circuits</a></td><td class="links" nowrap=""><a class="pdf" href="http://www.cs.cmu.edu/~seth/papers/venkataramani-iccad07.pdf">pdf</a> <a class="bib" href="javascript:togglebib('venkataramani-iccad07')">bib</a> <a class="abs" href="javascript:toggleabs('venkataramani-iccad07')">abstract</a> </td></tr><tr><td></td><td class="authinfo" colspan="2">
<a class="authinfo" href="http://www.ece.cmu.edu/~girishv/">Girish Venkataramani</a> and <a class="authinfo" href="http://www.cs.cmu.edu/~seth">Seth Copen Goldstein</a>.
In <em>ICCAD</em>,
Nov 2007.
</td></tr>
<tr><td></td><td colspan="2"><div class="invisible" id="abstextvenkataramani-iccad07"><table><tr><td class="hide"><a href="javascript:toggleabs('venkataramani-iccad07')">hide<br/>Abstract</a></td><td><p class="abs">We define operation chaining (op-chaining) as an optimization problem to determine the optimal pipeline depth for balancing performance against energy demands in pipelined asynchronous designs. Since there are no clock period requirements, asynchronous pipeline stages can have non-uniform latencies. We exploit this fact to coalesce several stages together thereby saving power and area due to the elimination of control-path resources from the pipeline. The trade-off is potentially reduced pipeline parallelism. </p><p>In this paper, we formally define this optimization as a graph covering problem, which finds sub-graphs that will be synthesized as an opchained pipeline stage. We then define the solution space for provably correct solutions and present an algorithm to efficiently search this space. The search technique partitions the graph based on post-dominator relationships to find sub-graphs that are potential op-chain candidates. We use knowledge of the Global Critical Path (GCP) [13] to evaluate the performance impact of accepting a candidate sub-graph and formulate a heuristic cost function to model this trade-off. The algorithm has a quadratic-time complexity in the size of the dataflow graph. We have implemented this algorithm within an automated asynchronous synthesis toolchain [12]. Experimental evidence from applying the algorithm on several media processing kernels reveals that the average energy-delay and energy-delay-area products improve by about 1.4x and 1.8x respectively, with a maximum improvement of 5x and 18x.</p></td></tr></table></div></td></tr><tr><td></td><td colspan="2"><a name="bibvenkataramani-iccad07"><pre class="invisible" id="bibtextvenkataramani-iccad07">@inproceedings{venkataramani-iccad07,
  author = {Venkataramani, Girish and Goldstein, Seth Copen},
  title = {Operation Chaining Asynchronous Pipelined Circuits},
  booktitle = {ICCAD},
  abstract = {We define operation chaining (op-chaining) as an
     optimization problem to determine the optimal pipeline depth for
     balancing performance against energy demands in pipelined
     asynchronous designs. Since there are no clock period
     requirements, asynchronous pipeline stages can have non-uniform
     latencies. We exploit this fact to coalesce several stages
     together thereby saving power and area due to the elimination of
     control-path resources from the pipeline. The trade-off is
     potentially reduced pipeline parallelism. <p>In this paper, we
     formally define this optimization as a graph covering problem,
     which finds sub-graphs that will be synthesized as an opchained
     pipeline stage. We then define the solution space for provably
     correct solutions and present an algorithm to efficiently search
     this space. The search technique partitions the graph based on
     post-dominator relationships to find sub-graphs that are
     potential op-chain candidates. We use knowledge of the Global
     Critical Path (GCP) [13] to evaluate the performance impact of
     accepting a candidate sub-graph and formulate a heuristic cost
     function to model this trade-off. The algorithm has a
     quadratic-time complexity in the size of the dataflow graph. We
     have implemented this algorithm within an automated asynchronous
     synthesis toolchain [12]. Experimental evidence from applying the
     algorithm on several media processing kernels reveals that the
     average energy-delay and energy-delay-area products improve by
     about 1.4x and 1.8x respectively, with a maximum improvement of
     5x and 18x.},
  month = {Nov},
  year = {2007},
  url = {http://www.cs.cmu.edu/~seth/papers/venkataramani-iccad07.pdf},
  keywords = {Asychronous Circuits, CAD, Global Critical Path},
}
</p></pre></a></td></tr>
<tr><td class="year">2006</td><td class="entry"><a name="goldstein-waci06"></a><a name="topgoldstein-waci06">
</a><a class="title" href="http://www.cs.cmu.edu/~seth/papers/goldstein-waci06.html">Brain in a Bottle</a></td><td class="links" nowrap=""><a class="pdf" href="http://www.cs.cmu.edu/~seth/papers/goldstein-waci06.pdf">pdf</a> <a class="bib" href="javascript:togglebib('goldstein-waci06')">bib</a> </td></tr><tr><td></td><td class="authinfo" colspan="2">
<a class="authinfo" href="http://www.cs.cmu.edu/~seth">Seth Copen Goldstein</a>.
In <em>Wild and Crazy Ideas Session of ASPLOS</em>,
Oct 2006.
</td></tr>
<tr><td></td><td colspan="2"><a name="bibgoldstein-waci06"><pre class="invisible" id="bibtextgoldstein-waci06">@inproceedings{goldstein-waci06,
  author = {Goldstein, Seth Copen},
  title = {Brain in a Bottle},
  booktitle = {Wild and Crazy Ideas Session of ASPLOS},
  year = {2006},
  month = {Oct},
  url = {http://www.cs.cmu.edu/~seth/papers/goldstein-waci06.pdf},
  keywords = {Brain, Parallel Computing, Self-Assembly},
}
</pre></a></td></tr>
<tr><td></td><td class="entry"><a name="bhat06"></a><a name="topbhat06">
</a><a class="title" href="http://www.cs.cmu.edu/~seth/papers/bhat06.html">Hierarchical Motion Planning for Self-reconfigurable Modular Robots</a></td><td class="links" nowrap=""><a class="pdf" href="http://www.cs.cmu.edu/~seth/papers/bhat06.pdf">pdf</a> <a class="bib" href="javascript:togglebib('bhat06')">bib</a> </td></tr><tr><td></td><td class="authinfo" colspan="2">
<a class="authinfo" href="http://www.cs.cmu.edu/~preethi/">Preethi Srinivas Bhat</a>, <a class="authinfo" href="http://www.kuffner.org/james/">James Kuffner</a>, <a class="authinfo" href="http://www.cs.cmu.edu/~seth">Seth Copen Goldstein</a>, and <a class="authinfo" href="http://www.pittsburgh.intel-research.net/people/siddh.html">Siddhartha Srinivasa</a>.
In <em>2006 IEEE/RSJ International Confernce on Intelligent Robots and Systems (IROS)</em>,
Oct 2006.
</td></tr>
<tr><td></td><td colspan="2"><a name="bibbhat06"><pre class="invisible" id="bibtextbhat06">@inproceedings{bhat06,
  author = {Bhat, Preethi Srinivas and Kuffner, James and Goldstein,
     Seth Copen and Srinivasa, Siddhartha},
  title = {Hierarchical Motion Planning for Self-reconfigurable
     Modular Robots},
  booktitle = {2006 IEEE/RSJ International Confernce on Intelligent
     Robots and Systems (IROS)},
  year = {2006},
  month = {Oct},
  keywords = {Claytronics, Planning, Modular Robotics},
  url = {http://www.cs.cmu.edu/~seth/papers/bhat06.pdf},
}
</pre></a></td></tr>
<tr><td></td><td class="entry"><a name="mahim-asplos06"></a><a name="topmahim-asplos06">
</a><a class="title" href="http://www.cs.cmu.edu/~seth/papers/mahim-asplos06.html">Tartan: Evaluating Spatial Computation for Whole Program Execution</a></td><td class="links" nowrap=""><a class="pdf" href="http://www.cs.cmu.edu/~seth/papers/mahim-asplos06.pdf">pdf</a> <a class="bib" href="javascript:togglebib('mahim-asplos06')">bib</a> <a class="abs" href="javascript:toggleabs('mahim-asplos06')">abstract</a> </td></tr><tr><td></td><td class="authinfo" colspan="2">
<a class="authinfo" href="http://www.cs.cmu.edu/~mahim/">Mahim Mishra</a>, <a class="authinfo" href="http://roquefort.crcl.cs.cmu.edu/~tcal/home.html">Timothy J Callahan</a>, <a class="authinfo" href="http://www.cs.cmu.edu/~tibi/">Tiberiu Chelcea</a>, <a class="authinfo" href="http://www.ece.cmu.edu/~girishv/">Girish Venkataramani</a>, <a class="authinfo" href="http://research.microsoft.com/users/mbudiu/">Mihai Budiu</a>, and <a class="authinfo" href="http://www.cs.cmu.edu/~seth">Seth Copen Goldstein</a>.
In <em>12th ACM International Conference on Architecture Support for Programming Languages and Operating Systems (ASPLOS)</em>,
pages 163–174, Oct 2006.
</td></tr>
<tr><td></td><td colspan="2"><div class="invisible" id="abstextmahim-asplos06"><table><tr><td class="hide"><a href="javascript:toggleabs('mahim-asplos06')">hide<br/>Abstract</a></td><td><p class="abs">Spatial Computing (SC) has been shown to be an energy-efficient model for implementing program kernels. In this paper we explore the feasibility of using SC for more than small kernels. To this end, we evaluate the performance and energy efficiency of entire applications on Tartan, a general-purpose architecture which integrates a reconfigurable fabric (RF) with a superscalar core. Our compiler automatically partitions and compiles an application into an instruction stream for the core and a configuration for the RF. We use a detailed simulator to capture both timing and energy numbers for all parts of the system. </p><p class="abs"> Our results indicate that a hierarchical RF architecture, designed around a scalable interconnect, is instrumental in harnessing the benefits of spatial computation. The interconnect uses static configuration and routing at the lower levels and a packet-switched, dynamically-routed network at the top level. Tartan is most energy-efficient when almost all of the application is mapped to the RF, indicating the need for the RF to support most general-purpose programming constructs. Our initial investigation reveals that such a system can provide, on average, an order of magnitude improvement in energy-delay compared to an aggressive superscalar core on single-threaded workloads.</p></td></tr></table></div></td></tr><tr><td></td><td colspan="2"><a name="bibmahim-asplos06"><pre class="invisible" id="bibtextmahim-asplos06">@inproceedings{mahim-asplos06,
  title = {Tartan: Evaluating Spatial Computation for Whole Program
     Execution},
  author = {Mishra, Mahim and Callahan, Timothy J and Chelcea, Tiberiu
     and Venkataramani, Girish and Budiu, Mihai and Goldstein, Seth
     Copen},
  booktitle = {12th ACM International Conference on Architecture
     Support for Programming Languages and Operating Systems
     (ASPLOS)},
  year = {2006},
  pages = {163--174},
  address = {San Jose, CA},
  month = {Oct},
  abstract = {Spatial Computing (SC) has been shown to be an
     energy-efficient model for implementing program kernels. In this
     paper we explore the feasibility of using SC for more than small
     kernels. To this end, we evaluate the performance and energy
     efficiency of entire applications on Tartan, a general-purpose
     architecture which integrates a reconfigurable fabric (RF) with a
     superscalar core. Our compiler automatically partitions and
     compiles an application into an instruction stream for the core
     and a configuration for the RF. We use a detailed simulator to
     capture both timing and energy numbers for all parts of the
     system. \par Our results indicate that a hierarchical RF
     architecture, designed around a scalable interconnect, is
     instrumental in harnessing the benefits of spatial computation.
     The interconnect uses static configuration and routing at the
     lower levels and a packet-switched, dynamically-routed network at
     the top level. Tartan is most energy-efficient when almost all of
     the application is mapped to the RF, indicating the need for the
     RF to support most general-purpose programming constructs. Our
     initial investigation reveals that such a system can provide, on
     average, an order of magnitude improvement in energy-delay
     compared to an aggressive superscalar core on single-threaded
     workloads.},
  keywords = {Asychronous Circuits, Spatial Computing, Reconfigurable
     Computing,Phoenix, Tartan},
  url = {http://www.cs.cmu.edu/~seth/papers/mahim-asplos06.pdf},
}
</pre></a></td></tr>
<tr><td></td><td class="entry"><a name="derosa-rss06"></a><a name="topderosa-rss06">
</a><a class="title" href="http://www.cs.cmu.edu/~seth/papers/derosa-rss06.html">Distributed Watchpoints: Debugging Very Large Ensembles of Robots</a></td><td class="links" nowrap=""><a class="pdf" href="http://www.cs.cmu.edu/~seth/papers/derosa-rss06.pdf">pdf</a> <a class="bib" href="javascript:togglebib('derosa-rss06')">bib</a> <a class="abs" href="javascript:toggleabs('derosa-rss06')">abstract</a> <a class="pdf" href="http://www.cs.cmu.edu/~seth/papers/derosa-rss06.pdf">talk</a> </td></tr><tr><td></td><td class="authinfo" colspan="2">
<a class="authinfo" href="http://www.cs.cmu.edu/~mderosa/">Michael De Rosa</a>, <a class="authinfo" href="http://www.cs.cmu.edu/~seth">Seth Copen Goldstein</a>, <a class="authinfo" href="http://www.cs.cmu.edu/~petel/">Peter Lee</a>, <a class="authinfo" href="http://www.pittsburgh.intel-research.net/people/campbell.html">Jason D. Campbell</a>, and <a class="authinfo" href="http://www.pittsburgh.intel-research.net/people/pillai.html">Padmanabhan Pillai</a>.
In <em>Robotics: Science and Systems Workshop on Self-Reconfigurable Modular Robots</em>,
Aug 2006.
</td></tr>
<tr><td></td><td colspan="2"><div class="invisible" id="abstextderosa-rss06"><table><tr><td class="hide"><a href="javascript:toggleabs('derosa-rss06')">hide<br/>Abstract</a></td><td><p class="abs">We describe a debugging tool for modular robotics that introduces the concept of distributed watchpoint triggers. This technique can initiate debugging actions (system halt, global snapshot, logging, etc.) in an ensemble of robots based on temporal, physical, and logical conditions distributed over multiple robots. Our technique is specifically designed to be effective in debugging modular robotic ensembles, where many important types of failure conditions can be detected within small, physically connected subsets of the total ensemble.</p></td></tr></table></div></td></tr><tr><td></td><td colspan="2"><a name="bibderosa-rss06"><pre class="invisible" id="bibtextderosa-rss06">@inproceedings{derosa-rss06,
  author = {De~Rosa, Michael and Goldstein, Seth Copen and Lee, Peter
     and Campbell, Jason D. and Pillai, Padmanabhan},
  booktitle = {Robotics: Science and Systems Workshop on
     Self-Reconfigurable Modular Robots},
  title = {Distributed Watchpoints: Debugging Very Large Ensembles of
     Robots},
  month = {Aug},
  year = {2006},
  keywords = {Claytronics, Modular Robotics, Debugging, Distributed
     Systems},
  address = {Philadelphia, PA},
  talk = {http://www.cs.cmu.edu/~seth/papers/derosa-rss06.pdf},
  url = {http://www.cs.cmu.edu/~seth/papers/derosa-rss06.pdf},
  abstract = {We describe a debugging tool for modular robotics that
     introduces the concept of distributed watchpoint triggers. This
     technique can initiate debugging actions (system halt, global
     snapshot, logging, etc.) in an ensemble of robots based on
     temporal, physical, and logical conditions distributed over
     multiple robots. Our technique is specifically designed to be
     effective in debugging modular robotic ensembles, where many
     important types of failure conditions can be detected within
     small, physically connected subsets of the total ensemble.},
}
</pre></a></td></tr>
<tr><td></td><td class="entry"><a name="venkataramani-tr06"></a><a name="topvenkataramani-tr06">
</a><a class="title" href="http://www.cs.cmu.edu/~seth/papers/venkataramani-tr06.html">Modeling the Global Critical Path in Concurrent Systems</a></td><td class="links" nowrap=""><a class="pdf" href="http://www.cs.cmu.edu/~seth/papers/venkataramani-tr06.pdf">pdf</a> <a class="bib" href="javascript:togglebib('venkataramani-tr06')">bib</a> <a class="abs" href="javascript:toggleabs('venkataramani-tr06')">abstract</a> </td></tr><tr><td></td><td class="authinfo" colspan="2">
<a class="authinfo" href="http://www.ece.cmu.edu/~girishv/">Girish Venkataramani</a>, <a class="authinfo" href="http://www.cs.cmu.edu/~tibi/">Tiberiu Chelcea</a>, <a class="authinfo" href="http://research.microsoft.com/users/mbudiu/">Mihai Budiu</a>, and <a class="authinfo" href="http://www.cs.cmu.edu/~seth">Seth Copen Goldstein</a>.
Carnegie Mellon University Technical Report No. CMU-CS-06-144,
Aug 2006.
</td></tr>
<tr><td></td><td colspan="2"><div class="invisible" id="abstextvenkataramani-tr06"><table><tr><td class="hide"><a href="javascript:toggleabs('venkataramani-tr06')">hide<br/>Abstract</a></td><td><p class="abs">We show how the global critical path can be used as a practical tool for understanding, optimizing and summarizing the behavior of highly concurrent self-timed circuits. Traditionally, critical path analysis has been applied to DAGs, and thus was constrained to combinatorial sub-circuits. We formally define the global critical path (GCP) and show how it can be constructed using only local information that is automatically derived directly from the circuit. We introduce a form of Production Rules, which can accurately determine the GCP for a given input vector, even for modules which exhibit choice and early termination. </p><p class="abs"> The GCP provides valuable insight into the control behavior of the application, which help in formulating new optimizations and re-formulating existing ones to use the GCP knowledge. We have constructed a fully automated framework for GCP detection and analysis, and have incorporated this framework into a high-level synthesis tool-chain. We demonstrate the effectiveness of the GCP framework by re-formulating two traditional CAD optimizations to use the GCP, yielding efficient algorithms which improve circuit power (by up to 9%) and performance (by up to 60%) in our experiments.</p></td></tr></table></div></td></tr><tr><td></td><td colspan="2"><a name="bibvenkataramani-tr06"><pre class="invisible" id="bibtextvenkataramani-tr06">@techreport{venkataramani-tr06,
  author = {Venkataramani, Girish and Chelcea, Tiberiu and Budiu,
     Mihai and Goldstein, Seth Copen},
  title = {Modeling the Global Critical Path in Concurrent Systems},
  institution = {Carnegie Mellon University},
  year = {2006},
  number = {CMU-CS-06-144},
  month = {Aug},
  abstract = {We show how the global critical path can be used as a
     practical tool for understanding, optimizing and summarizing the
     behavior of highly concurrent self-timed circuits. Traditionally,
     critical path analysis has been applied to DAGs, and thus was
     constrained to combinatorial sub-circuits. We formally define the
     global critical path (GCP) and show how it can be constructed
     using only local information that is automatically derived
     directly from the circuit. We introduce a form of Production
     Rules, which can accurately determine the GCP for a given input
     vector, even for modules which exhibit choice and early
     termination. \par The GCP provides valuable insight into the
     control behavior of the application, which help in formulating
     new optimizations and re-formulating existing ones to use the GCP
     knowledge. We have constructed a fully automated framework for
     GCP detection and analysis, and have incorporated this framework
     into a high-level synthesis tool-chain. We demonstrate the
     effectiveness of the GCP framework by re-formulating two
     traditional CAD optimizations to use the GCP, yielding efficient
     algorithms which improve circuit power (by up to 9\%) and
     performance (by up to 60\%) in our experiments.},
  keywords = {Asychronous Circuits, Spatial Computing,CAD, Global
     Critical Path},
  url = {http://www.cs.cmu.edu/~seth/papers/venkataramani-tr06.pdf},
}
</pre></a></td></tr>
<tr><td></td><td class="entry"><a name="derosa-icra06"></a><a name="topderosa-icra06">
</a><a class="title" href="http://www.cs.cmu.edu/~seth/papers/derosa-icra06.html">Scalable Shape Sculpting via Hole Motion: Motion Planning in Lattice-Constrained Module Robots</a></td><td class="links" nowrap=""><a class="pdf" href="http://www.cs.cmu.edu/~seth/papers/derosa-icra06.pdf">pdf</a> <a class="bib" href="javascript:togglebib('derosa-icra06')">bib</a> <a class="abs" href="javascript:toggleabs('derosa-icra06')">abstract</a> </td></tr><tr><td></td><td class="authinfo" colspan="2">
<a class="authinfo" href="http://www.cs.cmu.edu/~mderosa/">Michael De Rosa</a>, <a class="authinfo" href="http://www.cs.cmu.edu/~seth">Seth Copen Goldstein</a>, <a class="authinfo" href="http://www.cs.cmu.edu/~petel/">Peter Lee</a>, <a class="authinfo" href="http://www.pittsburgh.intel-research.net/people/campbell.html">Jason D. Campbell</a>, and <a class="authinfo" href="http://www.pittsburgh.intel-research.net/people/pillai.html">Padmanabhan Pillai</a>.
In <em>Proceedings of the 2006 IEEE International Conference on Robotics and Automation (ICRA  2006)</em>,
May 2006.
</td></tr>
<tr><td></td><td colspan="2"><div class="invisible" id="abstextderosa-icra06"><table><tr><td class="hide"><a href="javascript:toggleabs('derosa-icra06')">hide<br/>Abstract</a></td><td><p class="abs">We describe a novel shape formation algorithm for ensembles of 2-dimensional lattice-arrayed modular robots, based on the manipulation of regularly shaped voids within the lattice (“holes”). The algorithm is massively parallel and fully distributed. Constructing a goal shape requires time propor- tional only to the complexity of the desired target geometry. Construction of the shape by the modules requires no global communication nor broadcast floods after distribution of the target shape. Results in simulation show 97.3% shape compliance in ensembles of approximately 60,000 modules, and we believe that the algorithm will generalize to 3D and scale to handle millions of modules.</p></td></tr></table></div></td></tr><tr><td></td><td colspan="2"><a name="bibderosa-icra06"><pre class="invisible" id="bibtextderosa-icra06">@inproceedings{derosa-icra06,
  author = {De~Rosa, Michael and Goldstein, Seth Copen and Lee, Peter
     and Campbell, Jason D. and Pillai, Padmanabhan},
  title = {Scalable Shape Sculpting via Hole Motion: Motion Planning
     in Lattice-Constrained Module Robots},
  month = {May},
  booktitle = {Proceedings of the 2006 {IEEE} International Conference
     on Robotics and Automation (ICRA  2006)},
  year = {2006},
  keywords = {Claytronics, Programmable Matter, Planning, Modular
     Robotics},
  url = {http://www.cs.cmu.edu/~seth/papers/derosa-icra06.pdf},
  abstract = {We describe a novel shape formation algorithm for
     ensembles of 2-dimensional lattice-arrayed modular robots, based
     on the manipulation of regularly shaped voids within the lattice
     (``holes''). The algorithm is massively parallel and fully
     distributed. Constructing a goal shape requires time propor-
     tional only to the complexity of the desired target geometry.
     Construction of the shape by the modules requires no global
     communication nor broadcast floods after distribution of the
     target shape. Results in simulation show 97.3\% shape compliance
     in ensembles of approximately 60,000 modules, and we believe that
     the algorithm will generalize to 3D and scale to handle millions
     of modules.},
}
</pre></a></td></tr>
<tr><td></td><td class="entry"><a name="karagozler-rascal06"></a><a name="topkaragozler-rascal06">
</a><a class="title" href="http://www.cs.cmu.edu/~seth/papers/karagozler-rascal06.html">Ultralight Modular Robotic Building blocks for the Rapid Deployment of Planetary Outposts</a></td><td class="links" nowrap=""><a class="pdf" href="http://www.cs.cmu.edu/~seth/papers/karagozler-rascal06.pdf">pdf</a> <a class="bib" href="javascript:togglebib('karagozler-rascal06')">bib</a> </td></tr><tr><td></td><td class="authinfo" colspan="2">
<a class="authinfo" href="http://www.andrew.cmu.edu/user/mkaragoz/">Mustafa Emre Karagozler</a>, <a class="authinfo" href="http://people.cs.cmu.edu/person/46359.html">Brian Kirby</a>, <a class="authinfo" href="http://www.cs.cmu.edu/~seth/helpmefind.html">W.J. Lee</a>, <a class="authinfo" href="http://www.andrew.cmu.edu/user/emarinel/">Eugene Marinelli</a>, <a class="authinfo" href="http://people.cs.cmu.edu/person/63877.html">T.C. Ng</a>, <a class="authinfo" href="http://code.arc.cmu.edu/~philetus/">Michael Weller</a>, and <a class="authinfo" href="http://www.cs.cmu.edu/~seth">Seth Copen Goldstein</a>.
In <em>Revolutionary Aerospace Systems Concepts Academic Linkage (RASC-AL) Forum 2006</em>,
May 2006.
</td></tr>
<tr><td></td><td colspan="2"><a name="bibkaragozler-rascal06"><pre class="invisible" id="bibtextkaragozler-rascal06">@inproceedings{karagozler-rascal06,
  title = {Ultralight Modular Robotic Building blocks for the Rapid
     Deployment of Planetary Outposts},
  booktitle = {Revolutionary Aerospace Systems Concepts Academic
     Linkage (RASC-AL) Forum 2006},
  author = {Karagozler, Mustafa Emre and Kirby, Brian and Lee, W.J.
     and Marinelli, Eugene and Ng, T.C. and Weller, Michael and
     Goldstein, Seth Copen},
  year = {2006},
  month = {May},
  address = {Cape Canaveral, FL},
  url = {http://www.cs.cmu.edu/~seth/papers/karagozler-rascal06.pdf},
  keywords = {Claytronics,Modular Robotics,Robotics},
}
</pre></a></td></tr>
<tr><td></td><td class="entry"><a name="koes-tr06"></a><a name="topkoes-tr06">
</a><a class="title" href="http://www.cs.cmu.edu/~seth/papers/koes-tr06.html">An Analysis of Graph Coloring Register Allocation</a></td><td class="links" nowrap=""><a class="pdf" href="http://www.cs.cmu.edu/~seth/papers/koes-tr06.pdf">pdf</a> <a class="bib" href="javascript:togglebib('koes-tr06')">bib</a> <a class="abs" href="javascript:toggleabs('koes-tr06')">abstract</a> </td></tr><tr><td></td><td class="authinfo" colspan="2">
<a class="authinfo" href="http://www.cs.cmu.edu/~dkoes/">David Ryan Koes</a> and <a class="authinfo" href="http://www.cs.cmu.edu/~seth">Seth Copen Goldstein</a>.
Carnegie Mellon University Technical Report No. CMU-CS-06-111,
pages 10, Mar 2006.
</td></tr>
<tr><td></td><td colspan="2"><div class="invisible" id="abstextkoes-tr06"><table><tr><td class="hide"><a href="javascript:toggleabs('koes-tr06')">hide<br/>Abstract</a></td><td><p class="abs">Graph coloring is the de facto standard technique for register allocation within a compiler. In this paper we examine the importance of the quality of the coloring algorithm and various extensions of the basic graph coloring technique by replacing the coloring phase of the GNU compiler’s register allocator with an optimal coloring algorithm. We then extend this optimal algorithm to incorporate various extensions such as coalescing and preferential register assignment. We find that using an optimal coloring algorithm has surprisingly little benefit and empirically demonstrate the benefit of the various extensions.</p></td></tr></table></div></td></tr><tr><td></td><td colspan="2"><a name="bibkoes-tr06"><pre class="invisible" id="bibtextkoes-tr06">@techreport{koes-tr06,
  author = {Koes, David Ryan and Goldstein, Seth Copen},
  title = {An Analysis of Graph Coloring Register Allocation},
  institution = {Carnegie Mellon University},
  year = {2006},
  number = {CMU-CS-06-111},
  pages = {10},
  month = {Mar},
  url = {http://www.cs.cmu.edu/~seth/papers/koes-tr06.pdf},
  abstract = {Graph coloring is the de facto standard technique for
     register allocation within a compiler. In this paper we examine
     the importance of the quality of the coloring algorithm and
     various extensions of the basic graph coloring technique by
     replacing the coloring phase of the GNU compiler's register
     allocator with an optimal coloring algorithm. We then extend this
     optimal algorithm to incorporate various extensions such as
     coalescing and preferential register assignment. We find that
     using an optimal coloring algorithm has surprisingly little
     benefit and empirically demonstrate the benefit of the various
     extensions.},
  keywords = {Compilers:Register Allocation},
}
</pre></a></td></tr>
<tr><td></td><td class="entry"><a name="koes-lctes06"></a><a name="topkoes-lctes06">
</a><a class="title" href="http://www.cs.cmu.edu/~seth/papers/koes-lctes06.html">A Better Global Progressive Allocator</a></td><td class="links" nowrap=""><a class="pdf" href="http://www.cs.cmu.edu/~seth/papers/koes-lctes06.pdf">pdf</a> <a class="bib" href="javascript:togglebib('koes-lctes06')">bib</a> <a class="abs" href="javascript:toggleabs('koes-lctes06')">abstract</a> </td></tr><tr><td></td><td class="authinfo" colspan="2">
<a class="authinfo" href="http://www.cs.cmu.edu/~dkoes/">David Ryan Koes</a> and <a class="authinfo" href="http://www.cs.cmu.edu/~seth">Seth Copen Goldstein</a>.
In <em>LCTES 06 Student Poster Session</em>,
2006.
</td></tr>
<tr><td></td><td colspan="2"><div class="invisible" id="abstextkoes-lctes06"><table><tr><td class="hide"><a href="javascript:toggleabs('koes-lctes06')">hide<br/>Abstract</a></td><td><p class="abs">We present an improvement to the simultaneous heuristic allocator component of the global progressive register allocator described in our previous work \cite{koes-pldi2006}. Our improved allocator decomposes the control flow graph into linear traces which are allocated in the same manner as a single basic block. We investigate two methods for handling the control flow within the traces both of which produce better quality allocations than the simultaneous heuristic allocator.</p></td></tr></table></div></td></tr><tr><td></td><td colspan="2"><a name="bibkoes-lctes06"><pre class="invisible" id="bibtextkoes-lctes06">@inproceedings{koes-lctes06,
  author = {Koes, David Ryan and Goldstein, Seth Copen},
  title = {A Better Global Progressive Allocator},
  publisher = {Academia Press},
  url = {http://www.cs.cmu.edu/~seth/papers/koes-lctes06.pdf},
  booktitle = {LCTES 06 Student Poster Session},
  year = {2006},
  abstract = {We present an improvement to the simultaneous heuristic
     allocator component of the global progressive register allocator
     described in our previous work \cite{koes-pldi2006}. Our improved
     allocator decomposes the control flow graph into linear traces
     which are allocated in the same manner as a single basic block.
     We investigate two methods for handling the control flow within
     the traces both of which produce better quality allocations than
     the simultaneous heuristic allocator.},
  keywords = {Compilers:Register Allocation},
}
</pre></a></td></tr>
<tr><td></td><td class="entry"><a name="koes-pldi2006"></a><a name="topkoes-pldi2006">
</a><a class="title" href="http://www.cs.cmu.edu/~seth/papers/koes-pldi2006.html">A global progressive register allocator</a></td><td class="links" nowrap=""><a class="pdf" href="http://www.cs.cmu.edu/~seth/papers/koes-pldi2006.pdf">pdf</a> <a class="bib" href="javascript:togglebib('koes-pldi2006')">bib</a> <a class="abs" href="javascript:toggleabs('koes-pldi2006')">abstract</a> </td></tr><tr><td></td><td class="authinfo" colspan="2">
<a class="authinfo" href="http://www.cs.cmu.edu/~dkoes/">David Ryan Koes</a> and <a class="authinfo" href="http://www.cs.cmu.edu/~seth">Seth Copen Goldstein</a>.
In <em>Proceedings of the 2006 ACM SIGPLAN conference on Programming language design and implementation (PLDI 2006)</em>,
pages 204–215, 2006.
</td></tr>
<tr><td></td><td colspan="2"><div class="invisible" id="abstextkoes-pldi2006"><table><tr><td class="hide"><a href="javascript:toggleabs('koes-pldi2006')">hide<br/>Abstract</a></td><td><p class="abs">This paper describes a <em>global progressive register allocator</em>, a register allocator that uses an expressive model of the register allocation problem to quickly find a good allocation and then progressively find better allocations until a provably optimal solution is found or a preset time limit is reached. The key contributions of this paper are an expressive model of global register allocation based on multi-commodity network flows that explicitly represents spill code optimization, register preferences, copy insertion, and constant rematerialization; two fast, but effective, heuristic allocators based on this model; and a more elaborate progressive allocator that uses Lagrangian relaxation to compute the optimality of its allocations. Our progressive allocator demonstrates code size improvements as large as 16.75% compared to a traditional graph allocator. On average, we observe an initial improvement of 3.47%, which increases progressively to 6.84% as more time is permitted for compilation.</p></td></tr></table></div></td></tr><tr><td></td><td colspan="2"><a name="bibkoes-pldi2006"><pre class="invisible" id="bibtextkoes-pldi2006">@inproceedings{koes-pldi2006,
  author = {Koes, David Ryan and Goldstein, Seth Copen},
  title = {A global progressive register allocator},
  booktitle = {Proceedings of the 2006 ACM SIGPLAN conference on
     Programming language design and implementation (PLDI 2006)},
  year = {2006},
  isbn = {1-59593-320-4},
  pages = {204--215},
  doi = {http://doi.acm.org/10.1145/1133981.1134006},
  publisher = {ACM Press},
  address = {New York, NY},
  abstract = {This paper describes a {\em global progressive register
     allocator}, a register allocator that uses an expressive model of
     the register allocation problem to quickly find a good allocation
     and then progressively find better allocations until a provably
     optimal solution is found or a preset time limit is reached. The
     key contributions of this paper are an expressive model of global
     register allocation based on multi-commodity network flows that
     explicitly represents spill code optimization, register
     preferences, copy insertion, and constant rematerialization; two
     fast, but effective, heuristic allocators based on this model;
     and a more elaborate progressive allocator that uses Lagrangian
     relaxation to compute the optimality of its allocations. Our
     progressive allocator demonstrates code size improvements as
     large as 16.75\% compared to a traditional graph allocator. On
     average, we observe an initial improvement of 3.47\%, which
     increases progressively to 6.84\% as more time is permitted for
     compilation.},
  keywords = {Compilers:Register Allocation},
  url = {http://www.cs.cmu.edu/~seth/papers/koes-pldi2006.pdf},
}
</pre></a></td></tr>
<tr><td></td><td class="entry"><a name="venkataramani-tcad06"></a><a name="topvenkataramani-tcad06">
</a><a class="title" href="http://www.cs.cmu.edu/~seth/papers/venkataramani-tcad06.html">Hardware Compilation of Application-Specific Memory Access Interconnect</a></td><td class="links" nowrap=""><a class="pdf" href="http://www.cs.cmu.edu/~seth/papers/venkataramani-tcad06.pdf">pdf</a> <a class="bib" href="javascript:togglebib('venkataramani-tcad06')">bib</a> <a class="abs" href="javascript:toggleabs('venkataramani-tcad06')">abstract</a> </td></tr><tr><td></td><td class="authinfo" colspan="2">
<a class="authinfo" href="http://www.ece.cmu.edu/~girishv/">Girish Venkataramani</a>, <a class="authinfo" href="http://www2.imm.dtu.dk/~tob/">Tobias Bjerregaard</a>, <a class="authinfo" href="http://www.cs.cmu.edu/~tibi/">Tiberiu Chelcea</a>, and <a class="authinfo" href="http://www.cs.cmu.edu/~seth">Seth Copen Goldstein</a>.
<em>IEEE Transactions on Computer Aided Design of Integrated Circuits and Systems</em>,
25(5):756–771, 2006.
</td></tr>
<tr><td></td><td colspan="2"><div class="invisible" id="abstextvenkataramani-tcad06"><table><tr><td class="hide"><a href="javascript:toggleabs('venkataramani-tcad06')">hide<br/>Abstract</a></td><td><p class="abs">A major obstacle to successful high-level synthesis (HLS) of large-scale application-specified integrated circuit systems is the presence of memory accesses to a shared-memory subsystem. The latency to access memory is often not statically predictable, which creates problems for scheduling operations dependent on memory reads. More fundamental is that dependences between accesses may not be statically provable (e.g., if the specification language permits pointers), which introduces memory-consistency problems. Addressing these issues with static scheduling results in overly conservative circuits, and thus, most state-of-the-art HLS tools limit memory systems to those that have predictable latencies and limit programmers to specifications that forbid arbitrary memory-reference patterns. A new HLS framework for the synthesis and optimization of memory accesses (SOMA) is presented. SOMA enables specifications to include arbitrary memory references (e.g., pointers) and allows the memory system to incorporate features that might cause the latency of a memory access to vary dynamically. This results in raising the level of abstraction in the input specification, enabling faster design times. SOMA synthesizes a memory access network (MAN) architecture that facilitates dynamic scheduling and ordering of memory accesses. The paper describes a basic MAN construction technique that illustrates how dynamic ordering helps in efficiently maintaining memory consistency and how dynamic scheduling helps alleviate the variable-latency problem. Then, it is shown how static analysis of the access patterns can be used to optimize the MAN. One optimization changes the MAN interconnect topology to increase concurrence. A second optimization reduces the synchronization overhead necessary to maintain memory consistency. Postlayout experiments demonstrate that SOMA’s application-specific MAN construction significantly improves power and performance for a range of benchmarks.</p></td></tr></table></div></td></tr><tr><td></td><td colspan="2"><a name="bibvenkataramani-tcad06"><pre class="invisible" id="bibtextvenkataramani-tcad06">@article{venkataramani-tcad06,
  title = {Hardware Compilation of Application-Specific Memory Access
     Interconnect},
  author = {Venkataramani, Girish and Bjerregaard, Tobias and Chelcea,
     Tiberiu and Goldstein, Seth Copen},
  journal = {IEEE Transactions on Computer Aided Design of Integrated
     Circuits and Systems},
  year = {2006},
  volume = {25},
  number = {5},
  pages = {756--771},
  issn = {0278-0070},
  abstract = {{A major obstacle to successful high-level synthesis
     (HLS) of large-scale application-specified integrated circuit
     systems is the presence of memory accesses to a shared-memory
     subsystem. The latency to access memory is often not statically
     predictable, which creates problems for scheduling operations
     dependent on memory reads. More fundamental is that dependences
     between accesses may not be statically provable (e.g., if the
     specification language permits pointers), which introduces
     memory-consistency problems. Addressing these issues with static
     scheduling results in overly conservative circuits, and thus,
     most state-of-the-art HLS tools limit memory systems to those
     that have predictable latencies and limit programmers to
     specifications that forbid arbitrary memory-reference patterns. A
     new HLS framework for the synthesis and optimization of memory
     accesses (SOMA) is presented. SOMA enables specifications to
     include arbitrary memory references (e.g., pointers) and allows
     the memory system to incorporate features that might cause the
     latency of a memory access to vary dynamically. This results in
     raising the level of abstraction in the input specification,
     enabling faster design times. SOMA synthesizes a memory access
     network (MAN) architecture that facilitates dynamic scheduling
     and ordering of memory accesses. The paper describes a basic MAN
     construction technique that illustrates how dynamic ordering
     helps in efficiently maintaining memory consistency and how
     dynamic scheduling helps alleviate the variable-latency problem.
     Then, it is shown how static analysis of the access patterns can
     be used to optimize the MAN. One optimization changes the MAN
     interconnect topology to increase concurrence. A second
     optimization reduces the synchronization overhead necessary to
     maintain memory consistency. Postlayout experiments demonstrate
     that SOMA's application-specific MAN construction significantly
     improves power and performance for a range of benchmarks.}},
  keywords = {Asychronous Circuits, Spatial
     Computing,Phoenix,Network-on-a-chip},
  url = {http://www.cs.cmu.edu/~seth/papers/venkataramani-tcad06.pdf},
}
</pre></a></td></tr>
<tr><td></td><td class="entry"><a name="venkataramani-iccad06"></a><a name="topvenkataramani-iccad06">
</a><a class="title" href="http://www.cs.cmu.edu/~seth/papers/venkataramani-iccad06.html">Leveraging Protocol Knowledge in Slack Matching</a></td><td class="links" nowrap=""><a class="pdf" href="http://www.cs.cmu.edu/~seth/papers/venkataramani-iccad06.pdf">pdf</a> <a class="bib" href="javascript:togglebib('venkataramani-iccad06')">bib</a> <a class="abs" href="javascript:toggleabs('venkataramani-iccad06')">abstract</a> </td></tr><tr><td></td><td class="authinfo" colspan="2">
<a class="authinfo" href="http://www.ece.cmu.edu/~girishv/">Girish Venkataramani</a> and <a class="authinfo" href="http://www.cs.cmu.edu/~seth">Seth Copen Goldstein</a>.
In <em>IEEE/ACM International Conference on Computer-Aided Design (ICCAD)</em>,
Nov 2006.
</td></tr>
<tr><td></td><td colspan="2"><div class="invisible" id="abstextvenkataramani-iccad06"><table><tr><td class="hide"><a href="javascript:toggleabs('venkataramani-iccad06')">hide<br/>Abstract</a></td><td><p class="abs">Stalls, due to mis-matches in communication rates, are a major performance obstacle in pipelined circuits. If the rate of data production is faster than the rate of consumption, the resulting design performs slower than when the communication rate is matched. This can be remedied by inserting pipeline buffers (to temporarily hold data), allowing the producer to proceed if the consumer is not ready to accept data. The problem of deciding which channels need these buffers (and how many) for an arbitrary communication profile is called the slack matching problem; the optimal solution to this problem has been shown to be NP-complete. </p><p class="abs"> In this paper, we present a heuristic that uses knowledge of the communication protocol to explicitly model these bottlenecks, and an iterative algorithm to progressively remove these bottlenecks by inserting buffers. We apply this algorithm to asynchronous circuits, and show that it naturally handles large designs with arbitrarily cyclic and acyclic topologies, which exhibit various types of control choice. The heuristic is efficient, achieving linear time complexity in practice, and produces solutions that (a) achieve up to 60% performance speedup on large media processing kernels, and (b) can either be verified to be optimal, or the approximation margin can be bounded. </p></td></tr></table></div></td></tr><tr><td></td><td colspan="2"><a name="bibvenkataramani-iccad06"><pre class="invisible" id="bibtextvenkataramani-iccad06">@inproceedings{venkataramani-iccad06,
  title = {Leveraging Protocol Knowledge in Slack Matching},
  author = {Venkataramani, Girish and Goldstein, Seth Copen},
  booktitle = {IEEE/ACM International Conference on Computer-Aided
     Design (ICCAD)},
  year = {2006},
  address = {San Jose, CA},
  month = {Nov},
  abstract = {{Stalls, due to mis-matches in communication rates, are
     a major performance obstacle in pipelined circuits. If the rate
     of data production is faster than the rate of consumption, the
     resulting design performs slower than when the communication rate
     is matched. This can be remedied by inserting pipeline buffers
     (to temporarily hold data), allowing the producer to proceed if
     the consumer is not ready to accept data. The problem of deciding
     which channels need these buffers (and how many) for an arbitrary
     communication profile is called the slack matching problem; the
     optimal solution to this problem has been shown to be
     NP-complete. \par In this paper, we present a heuristic that uses
     knowledge of the communication protocol to explicitly model these
     bottlenecks, and an iterative algorithm to progressively remove
     these bottlenecks by inserting buffers. We apply this algorithm
     to asynchronous circuits, and show that it naturally handles
     large designs with arbitrarily cyclic and acyclic topologies,
     which exhibit various types of control choice. The heuristic is
     efficient, achieving linear time complexity in practice, and
     produces solutions that (a) achieve up to 60\% performance
     speedup on large media processing kernels, and (b) can either be
     verified to be optimal, or the approximation margin can be
     bounded. }},
  keywords = {Asychronous Circuits, Spatial Computing, CAD, Global
     Critical Path},
  url = {http://www.cs.cmu.edu/~seth/papers/venkataramani-iccad06.pdf},
}
</pre></a></td></tr>
<tr><td class="year">2005</td><td class="entry"><a name="goldstein05"></a><a name="topgoldstein05">
</a><a class="title" href="http://www.cs.cmu.edu/~seth/papers/goldstein05.html">The Ensemble Principle</a></td><td class="links" nowrap=""><a class="pdf" href="http://www.cs.cmu.edu/~seth/papers/goldstein05.pdf">pdf</a> <a class="bib" href="javascript:togglebib('goldstein05')">bib</a> </td></tr><tr><td></td><td class="authinfo" colspan="2">
<a class="authinfo" href="http://www.cs.cmu.edu/~seth">Seth Copen Goldstein</a>, <a class="authinfo" href="http://www.cs.cmu.edu/~tcm">Todd C. Mowry</a>, <a class="authinfo" href="http://www.pittsburgh.intel-research.net/people/campbell.html">Jason D. Campbell</a>, <a class="authinfo" href="http://www.cs.cmu.edu/~petel/">Peter Lee</a>, <a class="authinfo" href="http://www.pittsburgh.intel-research.net/people/pillai.html">Padmanabhan Pillai</a>, <a class="authinfo" href="http://www.ece.cmu.edu/directory/details/69">James F. Hoburg</a>, <a class="authinfo" href="http://www.pittsburgh.intel-research.net/people/gibbons/">Phillip B. Gibbons</a>, <a class="authinfo" href="http://www.cs.cmu.edu/~guestrin/">Carlos Guestrin</a>, <a class="authinfo" href="http://www.kuffner.org/james/">James Kuffner</a>, <a class="authinfo" href="http://people.cs.cmu.edu/person/46359.html">Brian Kirby</a>, <a class="authinfo" href="http://www.cs.cmu.edu/~bdr/">Benjamin D. Rister</a>, <a class="authinfo" href="http://www.cs.cmu.edu/~mderosa/">Michael De Rosa</a>, <a class="authinfo" href="www.cs.cmu.edu/~sfuniak/">Stanislav Funiak</a>, <a class="authinfo" href="http://www.me.cmu.edu/faculty1/sitti/nano/members/burak/">Burak Aksak</a>, and <a class="authinfo" href="http://www.cs.cmu.edu/~rahuls/">Rahul Sukthankar</a>.
In <em>13th Foresight Conference of Advanced Nanotechnogy</em>,
Oct 2005.
</td></tr>
<tr><td></td><td colspan="2"><a name="bibgoldstein05"><pre class="invisible" id="bibtextgoldstein05">@inproceedings{goldstein05,
  author = {Goldstein, Seth Copen and Mowry, Todd C. and Campbell,
     Jason D. and Lee, Peter and Pillai, Padmanabhan and Hoburg, James
     F. and Gibbons, Phillip B. and Guestrin, Carlos and Kuffner,
     James and Kirby, Brian and Rister, Benjamin D. and De~Rosa,
     Michael and Funiak, Stanislav and Aksak, Burak and Sukthankar,
     Rahul},
  title = {The Ensemble Principle},
  booktitle = {13th Foresight Conference of Advanced Nanotechnogy},
  url = {http://www.cs.cmu.edu/~seth/papers/goldstein05.pdf},
  year = {2005},
  month = {Oct},
  address = {San Francisco, CA},
  keywords = {Claytronics, Robotics},
}
</pre></a></td></tr>
<tr><td></td><td class="entry"><a name="venkataramani-isss05"></a><a name="topvenkataramani-isss05">
</a><a class="title" href="http://www.cs.cmu.edu/~seth/papers/venkataramani-isss05.html">SOMA: A Tool for Synthesizing and Optimizing Memory Accesses in ASICs</a></td><td class="links" nowrap=""><a class="pdf" href="http://www.cs.cmu.edu/~seth/papers/venkataramani-isss05.pdf">pdf</a> <a class="bib" href="javascript:togglebib('venkataramani-isss05')">bib</a> <a class="abs" href="javascript:toggleabs('venkataramani-isss05')">abstract</a> </td></tr><tr><td></td><td class="authinfo" colspan="2">
<a class="authinfo" href="http://www.ece.cmu.edu/~girishv/">Girish Venkataramani</a>, <a class="authinfo" href="http://www2.imm.dtu.dk/~tob/">Tobias Bjerregaard</a>, <a class="authinfo" href="http://www.cs.cmu.edu/~tibi/">Tiberiu Chelcea</a>, and <a class="authinfo" href="http://www.cs.cmu.edu/~seth">Seth Copen Goldstein</a>.
In <em>IEEE/ACM/IFIP International Conference on Hardware/Software Codesign and System Synthesis (CODES-ISSS)</em>,
pages 231–236, Sep 2005.
</td></tr>
<tr><td></td><td colspan="2"><div class="invisible" id="abstextvenkataramani-isss05"><table><tr><td class="hide"><a href="javascript:toggleabs('venkataramani-isss05')">hide<br/>Abstract</a></td><td><p class="abs">Arbitrary memory dependencies and variable latency memory systems are major obstacles to the synthesis of large-scale ASIC systems in high-level synthesis. This paper presents SOMA, a synthesis framework for constructing Memory Access Network (MAN) architectures that inherently enforce memory consistency in the presence of dynamic memory access dependencies. A fundamental bottleneck in any such network is arbitrating between concurrent accesses to a shared memory resource. To alleviate this bottleneck, SOMA uses an application-specific concurrency analysis technique to predict the dynamic memory parallelism profile of the application. This is then used to customize the MAN architecture. Depending on the parallelism profile, the MAN may be optimized for latency, throughput or both. The optimized MAN is automatically synthesized into gate-level structural Verilog using a flexible library of network building blocks. SOMA has been successfully integrated into an automated C-to-hardware synthesis flow, which generates standard cell circuits from unrestricted ANSI-C programs. Post-layout experiments demonstrate that application specific MAN construction significantly improves power and performance.</p></td></tr></table></div></td></tr><tr><td></td><td colspan="2"><a name="bibvenkataramani-isss05"><pre class="invisible" id="bibtextvenkataramani-isss05">@inproceedings{venkataramani-isss05,
  title = {SOMA: A Tool for Synthesizing and Optimizing Memory
     Accesses in ASICs},
  author = {Venkataramani, Girish and Bjerregaard, Tobias and Chelcea,
     Tiberiu and Goldstein, Seth Copen},
  booktitle = {IEEE/ACM/IFIP International Conference on
     Hardware/Software Codesign and System Synthesis (CODES-ISSS)},
  year = {2005},
  isbn = {1-59593-161-9},
  pages = {231-236},
  address = {Jersey City, NJ, USA},
  month = {Sep},
  abstract = {Arbitrary memory dependencies and variable latency
     memory systems are major obstacles to the synthesis of
     large-scale ASIC systems in high-level synthesis. This paper
     presents SOMA, a synthesis framework for constructing Memory
     Access Network (MAN) architectures that inherently enforce memory
     consistency in the presence of dynamic memory access
     dependencies. A fundamental bottleneck in any such network is
     arbitrating between concurrent accesses to a shared memory
     resource. To alleviate this bottleneck, SOMA uses an
     application-specific concurrency analysis technique to predict
     the dynamic memory parallelism profile of the application. This
     is then used to customize the MAN architecture. Depending on the
     parallelism profile, the MAN may be optimized for latency,
     throughput or both. The optimized MAN is automatically
     synthesized into gate-level structural Verilog using a flexible
     library of network building blocks. SOMA has been successfully
     integrated into an automated C-to-hardware synthesis flow, which
     generates standard cell circuits from unrestricted ANSI-C
     programs. Post-layout experiments demonstrate that application
     specific MAN construction significantly improves power and
     performance.},
  keywords = {Asychronous Circuits, Spatial Computing,Phoenix,
     CAD,Compilers:Memory Optimizations},
  url = {http://www.cs.cmu.edu/~seth/papers/venkataramani-isss05.pdf},
}
</pre></a></td></tr>
<tr><td></td><td class="entry"><a name="campbell05"></a><a name="topcampbell05">
</a><a class="title" href="http://www.cs.cmu.edu/~seth/papers/campbell05.html">The Robot is the Tether: Active, Adaptive Power Routing for Modular Robots With Unary Inter-robot Connectors</a></td><td class="links" nowrap=""><a class="pdf" href="http://www.cs.cmu.edu/~seth/papers/campbell05.pdf">pdf</a> <a class="bib" href="javascript:togglebib('campbell05')">bib</a> </td></tr><tr><td></td><td class="authinfo" colspan="2">
<a class="authinfo" href="http://www.pittsburgh.intel-research.net/people/campbell.html">Jason D. Campbell</a>, <a class="authinfo" href="http://www.pittsburgh.intel-research.net/people/pillai.html">Padmanabhan Pillai</a>, and <a class="authinfo" href="http://www.cs.cmu.edu/~seth">Seth Copen Goldstein</a>.
In <em>IEEE/RSJ International Conference on Intelligent Robots and Systems (IROS 2005)</em>,
pages 4108–15, Aug 2005.
</td></tr>
<tr><td></td><td colspan="2"><a name="bibcampbell05"><pre class="invisible" id="bibtextcampbell05">@inproceedings{campbell05,
  author = {Campbell, Jason D. and Pillai, Padmanabhan and Goldstein,
     Seth Copen},
  title = {The Robot is the Tether: Active, Adaptive Power Routing for
     Modular Robots With Unary Inter-robot Connectors},
  booktitle = {IEEE/RSJ International Conference on Intelligent Robots
     and Systems (IROS 2005)},
  pages = {4108--15},
  year = {2005},
  address = {Edmonton, Alberta Canada},
  month = {Aug},
  keywords = {Claytronics, Robotics},
  url = {http://www.cs.cmu.edu/~seth/papers/campbell05.pdf},
}
</pre></a></td></tr>
<tr><td></td><td class="entry"><a name="kirby-aaai05"></a><a name="topkirby-aaai05">
</a><a class="title" href="http://www.cs.cmu.edu/~seth/papers/kirby-aaai05.html">Catoms: Moving Robots Without Moving Parts</a></td><td class="links" nowrap=""><a class="pdf" href="http://www.cs.cmu.edu/~seth/papers/kirby-aaai05.pdf">pdf</a> <a class="bib" href="javascript:togglebib('kirby-aaai05')">bib</a> </td></tr><tr><td></td><td class="authinfo" colspan="2">
<a class="authinfo" href="http://people.cs.cmu.edu/person/46359.html">Brian Kirby</a>, <a class="authinfo" href="http://www.pittsburgh.intel-research.net/people/campbell.html">Jason D. Campbell</a>, <a class="authinfo" href="http://www.me.cmu.edu/faculty1/sitti/nano/members/burak/">Burak Aksak</a>, <a class="authinfo" href="http://www.pittsburgh.intel-research.net/people/pillai.html">Padmanabhan Pillai</a>, <a class="authinfo" href="http://www.ece.cmu.edu/directory/details/69">James F. Hoburg</a>, <a class="authinfo" href="http://www.cs.cmu.edu/~tcm">Todd C. Mowry</a>, and <a class="authinfo" href="http://www.cs.cmu.edu/~seth">Seth Copen Goldstein</a>.
In <em>AAAI (Robot Exhibition)</em>,
pages 1730–1, Jul 2005.
</td></tr>
<tr><td></td><td colspan="2"><a name="bibkirby-aaai05"><pre class="invisible" id="bibtextkirby-aaai05">@inproceedings{kirby-aaai05,
  author = {Kirby, Brian and Campbell, Jason D. and Aksak, Burak and
     Pillai, Padmanabhan and Hoburg, James F. and Mowry, Todd C. and
     Goldstein, Seth Copen},
  title = {Catoms: Moving Robots Without Moving Parts},
  url = {http://www.cs.cmu.edu/~seth/papers/kirby-aaai05.pdf},
  booktitle = {AAAI (Robot Exhibition)},
  pages = {1730--1},
  year = {2005},
  month = {Jul},
  address = {Pittsburgh, PA},
  keywords = {Claytronics, Robotics},
}
</pre></a></td></tr>
<tr><td></td><td class="entry"><a name="venkataramani-iwls05"></a><a name="topvenkataramani-iwls05">
</a><a class="title" href="http://www.cs.cmu.edu/~seth/papers/venkataramani-iwls05.html">HLS Support for Unconstrained Memory Accesses</a></td><td class="links" nowrap=""><a class="pdf" href="http://www.cs.cmu.edu/~seth/papers/venkataramani-iwls05.pdf">pdf</a> <a class="bib" href="javascript:togglebib('venkataramani-iwls05')">bib</a> <a class="abs" href="javascript:toggleabs('venkataramani-iwls05')">abstract</a> </td></tr><tr><td></td><td class="authinfo" colspan="2">
<a class="authinfo" href="http://www.ece.cmu.edu/~girishv/">Girish Venkataramani</a>, <a class="authinfo" href="http://www.cs.cmu.edu/~tibi/">Tiberiu Chelcea</a>, and <a class="authinfo" href="http://www.cs.cmu.edu/~seth">Seth Copen Goldstein</a>.
In <em>IEEE 14th International Workshop on Logic Synthesis (IWLS)</em>,
Jun 2005.
</td></tr>
<tr><td></td><td colspan="2"><div class="invisible" id="abstextvenkataramani-iwls05"><table><tr><td class="hide"><a href="javascript:toggleabs('venkataramani-iwls05')">hide<br/>Abstract</a></td><td><p class="abs">A major obstacle in high-level synthesis (HLS) of large-scale ASIC systems is memory access patterns. Typically, most state-of-the-art HLS tools impose constraints on the memory references in the source application, requiring them to exhibit predictable access patterns, and/or requiring dependencies between them to be statically determinable. This paper addresses the HLS problem when such constraints are relaxed. We present an analysis infrastructure that can be used within any HLS toolflow for synthesizing circuits from high-level abstractions, such as ANSI-C, where no assumptions can be made about memory access latencies, and where dependencies between memory references can only be disambiguated dynamically at runtime (pointer aliasing). We start by describing a generic framework to build a dependence-aware, fully distributed, although often conservative, memory-access network (MAN) for a given memory-dependence graph. Then, we propose a suite of optimizations to customize the MAN for the given specification. All these techniques guarantee memory coherency. Experimental results on Mediabench benchmarks, show that such an approach succeeds in maintaining high levels of parallelism, while ensuring memory coherency. The optimizations succeed in lowering the synchronization overhead by as much as 4x.</p></td></tr></table></div></td></tr><tr><td></td><td colspan="2"><a name="bibvenkataramani-iwls05"><pre class="invisible" id="bibtextvenkataramani-iwls05">@inproceedings{venkataramani-iwls05,
  title = {{HLS} Support for Unconstrained Memory Accesses},
  author = {Venkataramani, Girish and Chelcea, Tiberiu and Goldstein,
     Seth Copen},
  booktitle = {IEEE 14th International Workshop on Logic Synthesis
     (IWLS)},
  year = {2005},
  address = {Lake Arrowhead, CA},
  month = {Jun},
  abstract = {A major obstacle in high-level synthesis (HLS) of
     large-scale ASIC systems is memory access patterns. Typically,
     most state-of-the-art HLS tools impose constraints on the memory
     references in the source application, requiring them to exhibit
     predictable access patterns, and/or requiring dependencies
     between them to be statically determinable. This paper addresses
     the HLS problem when such constraints are relaxed. We present an
     analysis infrastructure that can be used within any HLS toolflow
     for synthesizing circuits from high-level abstractions, such as
     ANSI-C, where no assumptions can be made about memory access
     latencies, and where dependencies between memory references can
     only be disambiguated dynamically at runtime (pointer aliasing).
     We start by describing a generic framework to build a
     dependence-aware, fully distributed, although often conservative,
     memory-access network (MAN) for a given memory-dependence graph.
     Then, we propose a suite of optimizations to customize the MAN
     for the given specification. All these techniques guarantee
     memory coherency. Experimental results on Mediabench benchmarks,
     show that such an approach succeeds in maintaining high levels of
     parallelism, while ensuring memory coherency. The optimizations
     succeed in lowering the synchronization overhead by as much as
     4x.},
  keywords = {Asychronous Circuits, Spatial Computing,Phoenix},
  url = {http://www.cs.cmu.edu/~seth/papers/venkataramani-iwls05.pdf},
}
</pre></a></td></tr>
<tr><td></td><td class="entry"><a name="goldstein-computer05"></a><a name="topgoldstein-computer05">
</a><a class="title" href="http://www.cs.cmu.edu/~seth/papers/goldstein-computer05.html">Programmable Matter</a></td><td class="links" nowrap=""><a class="pdf" href="http://www.cs.cmu.edu/~seth/papers/goldstein-computer05.pdf">pdf</a> <a class="bib" href="javascript:togglebib('goldstein-computer05')">bib</a> </td></tr><tr><td></td><td class="authinfo" colspan="2">
<a class="authinfo" href="http://www.cs.cmu.edu/~seth">Seth Copen Goldstein</a>, <a class="authinfo" href="http://www.pittsburgh.intel-research.net/people/campbell.html">Jason D. Campbell</a>, and <a class="authinfo" href="http://www.cs.cmu.edu/~tcm">Todd C. Mowry</a>.
<em>IEEE Computer</em>,
38(6):99–101, Jun 2005.
</td></tr>
<tr><td></td><td colspan="2"><a name="bibgoldstein-computer05"><pre class="invisible" id="bibtextgoldstein-computer05">@article{goldstein-computer05,
  author = {Goldstein, Seth Copen and Campbell, Jason D. and Mowry,
     Todd C.},
  title = {Programmable Matter},
  journal = {IEEE Computer},
  volume = {38},
  number = {6},
  pages = {99--101},
  year = {2005},
  month = {Jun},
  keywords = {Claytronics, Programmable Matter},
  url = {http://www.cs.cmu.edu/~seth/papers/goldstein-computer05.pdf},
}
</pre></a></td></tr>
<tr><td></td><td class="entry"><a name="koes-tr05"></a><a name="topkoes-tr05">
</a><a class="title" href="http://www.cs.cmu.edu/~seth/papers/koes-tr05.html">Adding Faster with Application Specific Early Termination</a></td><td class="links" nowrap=""><a class="pdf" href="http://www.cs.cmu.edu/~seth/papers/koes-tr05.pdf">pdf</a> <a class="bib" href="javascript:togglebib('koes-tr05')">bib</a> <a class="abs" href="javascript:toggleabs('koes-tr05')">abstract</a> </td></tr><tr><td></td><td class="authinfo" colspan="2">
<a class="authinfo" href="http://www.cs.cmu.edu/~dkoes/">David Ryan Koes</a>, <a class="authinfo" href="http://www.cs.cmu.edu/~tibi/">Tiberiu Chelcea</a>, <a class="authinfo" href="http://www.cs.cmu.edu/~seth/helpmefind.html">Charles Onyeama</a>, and <a class="authinfo" href="http://www.cs.cmu.edu/~seth">Seth Copen Goldstein</a>.
Carnegie Mellon University Technical Report No. CMU-CS-05-101,
pages 20, May 2005.
</td></tr>
<tr><td></td><td colspan="2"><div class="invisible" id="abstextkoes-tr05"><table><tr><td class="hide"><a href="javascript:toggleabs('koes-tr05')">hide<br/>Abstract</a></td><td><p class="abs">This paper presents a methodology for improving the speed of high-speed adders. As a starting point, a previously proposed method, called speculative completion, is used in which fast- terminating additions are automatically detected. Unlike the previous design, the method proposed in this paper is able to adapt dynamically to (1) application-specific behavior and (2) to adder- specific behavior, resulting in a higher detection rate of fast additions and, consequently, a faster average-case speed for addition. Our experimental results show detection rates of over 99%, and adder average-case speed improvements of up to 14.%.</p></td></tr></table></div></td></tr><tr><td></td><td colspan="2"><a name="bibkoes-tr05"><pre class="invisible" id="bibtextkoes-tr05">@techreport{koes-tr05,
  author = {Koes, David Ryan and Chelcea, Tiberiu and Onyeama, Charles
     and Goldstein, Seth Copen},
  title = {Adding Faster with Application Specific Early Termination},
  institution = {Carnegie Mellon University},
  year = {2005},
  number = {CMU-CS-05-101},
  pages = {20},
  month = {May},
  url = {http://www.cs.cmu.edu/~seth/papers/koes-tr05.pdf},
  abstract = {This paper presents a methodology for improving the
     speed of high-speed adders. As a starting point, a previously
     proposed method, called speculative completion, is used in which
     fast- terminating additions are automatically detected. Unlike
     the previous design, the method proposed in this paper is able to
     adapt dynamically to (1) application-specific behavior and (2) to
     adder- specific behavior, resulting in a higher detection rate of
     fast additions and, consequently, a faster average-case speed for
     addition. Our experimental results show detection rates of over
     99\%, and adder average-case speed improvements of up to 14.\%.},
  keywords = {Asychronous Circuits},
}
</pre></a></td></tr>
<tr><td></td><td class="entry"><a name="beckett-iscas05"></a><a name="topbeckett-iscas05">
</a><a class="title" href="http://www.cs.cmu.edu/~seth/papers/beckett-iscas05.html">Why area might reduce power in nanoscale CMOS</a></td><td class="links" nowrap=""><a class="pdf" href="http://www.cs.cmu.edu/~seth/papers/beckett-iscas05.pdf">pdf</a> <a class="bib" href="javascript:togglebib('beckett-iscas05')">bib</a> <a class="abs" href="javascript:toggleabs('beckett-iscas05')">abstract</a> </td></tr><tr><td></td><td class="authinfo" colspan="2">
<a class="authinfo" href="http://www.rmit.edu.au/browse/?QRY=Paul+Beckett&amp;STYPE=PEOPLE">Paul Beckett</a> and <a class="authinfo" href="http://www.cs.cmu.edu/~seth">Seth Copen Goldstein</a>.
In <em>IEEE International Symposium on Circuits and Systems, 2005, (ISCAS 2005)</em>,
volume 3, pages 2329–2332, May 2005.
</td></tr>
<tr><td></td><td colspan="2"><div class="invisible" id="abstextbeckett-iscas05"><table><tr><td class="hide"><a href="javascript:toggleabs('beckett-iscas05')">hide<br/>Abstract</a></td><td><p class="abs">In this paper we explore the relationship between power and area. By exploiting parallelism (and thus using more area) one can reduce the switching frequency allowing a reduction in VDD which results in a reduction in power. Under a scaling regime which allows threshold voltage to increase as VDD decreases we find that dynamic and subthreshold power loss in CMOS exhibit a dependence on area proportional to A^((\sigma^-3)/\sigma) while gate leakage power proportional to A^((\sigma^-6)/\sigma) and short circuit power A^((\sigma^-6)/\sigma). Thus, with the large number of devices at our disposal we can exploit techniques such as spatial computing--tailoring the program directly to the hardware--to overcome the negative effects of scaling. The value of s describes the effectiveness of the technique for a particular circuit and/or algorithm--for circuits that exhibit a value of \sigma &lt;= 3, power will be a constant or reducing function of area. We briefly speculate on how \sigma might be influenced by a move to nanoscale technology.</p></td></tr></table></div></td></tr><tr><td></td><td colspan="2"><a name="bibbeckett-iscas05"><pre class="invisible" id="bibtextbeckett-iscas05">@inproceedings{beckett-iscas05,
  title = {Why area might reduce power in nanoscale CMOS},
  url = {http://www.cs.cmu.edu/~seth/papers/beckett-iscas05.pdf},
  booktitle = {IEEE International Symposium on Circuits and Systems,
     2005, (ISCAS 2005)},
  author = {Beckett, Paul and Goldstein, Seth Copen},
  year = {2005},
  pages = {2329-2332},
  volume = {3},
  month = {May},
  address = {Kobe, Japan},
  abstract = {In this paper we explore the relationship between power
     and area. By exploiting parallelism (and thus using more area)
     one can reduce the switching frequency allowing a reduction in
     VDD which results in a reduction in power. Under a scaling regime
     which allows threshold voltage to increase as VDD decreases we
     find that dynamic and subthreshold power loss in CMOS exhibit a
     dependence on area proportional to A^((\sigma^-3)/\sigma) while
     gate leakage power proportional to A^((\sigma^-6)/\sigma) and
     short circuit power A^((\sigma^-6)/\sigma). Thus, with the large
     number of devices at our disposal we can exploit techniques such
     as spatial computing--tailoring the program directly to the
     hardware--to overcome the negative effects of scaling. The value
     of s describes the effectiveness of the technique for a
     particular circuit and/or algorithm--for circuits that exhibit a
     value of \sigma &lt;= 3, power will be a constant or reducing
     function of area. We briefly speculate on how \sigma might be
     influenced by a move to nanoscale technology.},
  keywords = {Electronic Nanotechnology,Power,Energy},
}
</pre></a></td></tr>
<tr><td></td><td class="entry"><a name="goldstein-popsci05"></a><a name="topgoldstein-popsci05">
</a><a class="title" href="http://www.cs.cmu.edu/~seth/papers/goldstein-popsci05.html">2029 The 3-D Fax Machine Brings Back the House Call</a></td><td class="links" nowrap=""><a class="pdf" href="http://www.cs.cmu.edu/~seth/papers/goldstein-popsci05.pdf">pdf</a> <a class="bib" href="javascript:togglebib('goldstein-popsci05')">bib</a> </td></tr><tr><td></td><td class="authinfo" colspan="2">
<a class="authinfo" href="http://www.cs.cmu.edu/~seth">Seth Copen Goldstein</a>.
Headline from the Future, Popular Science Magazine,
pages 34, Mar 2005.
</td></tr>
<tr><td></td><td colspan="2"><a name="bibgoldstein-popsci05"><pre class="invisible" id="bibtextgoldstein-popsci05">@misc{goldstein-popsci05,
  title = {2029 The 3-D Fax Machine Brings Back the House Call},
  howpublished = {Headline from the Future, Popular Science Magazine},
  author = {Goldstein, Seth Copen},
  year = {2005},
  url = {http://www.cs.cmu.edu/~seth/papers/goldstein-popsci05.pdf},
  month = {Mar},
  pages = {34},
  keywords = {Claytronics},
}
</pre></a></td></tr>
<tr><td></td><td class="entry"><a name="koes-cgo05"></a><a name="topkoes-cgo05">
</a><a class="title" href="http://www.cs.cmu.edu/~seth/papers/koes-cgo05.html">A Progressive Register Allocator for Irregular Architectures</a></td><td class="links" nowrap=""><a class="pdf" href="http://www.cs.cmu.edu/~seth/papers/koes-cgo05.pdf">pdf</a> <a class="bib" href="javascript:togglebib('koes-cgo05')">bib</a> <a class="abs" href="javascript:toggleabs('koes-cgo05')">abstract</a> </td></tr><tr><td></td><td class="authinfo" colspan="2">
<a class="authinfo" href="http://www.cs.cmu.edu/~dkoes/">David Ryan Koes</a> and <a class="authinfo" href="http://www.cs.cmu.edu/~seth">Seth Copen Goldstein</a>.
In <em>Proceedings of the International Symposium on Code Generation and Optimization (CGO 2005)</em>,
pages 269–280, Mar 2005.
</td></tr>
<tr><td></td><td colspan="2"><div class="invisible" id="abstextkoes-cgo05"><table><tr><td class="hide"><a href="javascript:toggleabs('koes-cgo05')">hide<br/>Abstract</a></td><td><p class="abs">Register allocation is one of the most important optimizations a compiler performs. Conventional graph-coloring based register allocators are fast and do well on regular, RISC-like, architectures, but perform poorly on irregular, CISC-like, architectures with few registers and non-orthogonal instruction sets. At the other extreme, optimal register allocators based on integer linear programming are capable of fully modeling and exploiting the peculiarities of irregular architectures but do not scale well. We introduce the idea of a <tt>progressive allocator</tt> which finds an initial allocation of quality comparable to a conventional allocator, but as more time is allowed for computation the quality of the allocation approaches optimal. This paper presents a progressive register allocator which uses a multi-commodity network flow model to elegantly represent the intricacies of irregular architectures. We evaluate our allocator substituted for <tt>gcc</tt>’s local register allocation pass.</p></td></tr></table></div></td></tr><tr><td></td><td colspan="2"><a name="bibkoes-cgo05"><pre class="invisible" id="bibtextkoes-cgo05">@inproceedings{koes-cgo05,
  author = {Koes, David Ryan and Goldstein, Seth Copen},
  title = {A Progressive Register Allocator for Irregular
     Architectures},
  booktitle = {Proceedings of the International Symposium on Code
     Generation and Optimization {(CGO 2005)}},
  month = {Mar},
  year = {2005},
  isbn = {0-7695-2298-X},
  pages = {269--280},
  doi = {http://dx.doi.org/10.1109/CGO.2005.4},
  publisher = {IEEE Computer Society},
  address = {Washington, DC},
  abstract = {Register allocation is one of the most important
     optimizations a compiler performs. Conventional graph-coloring
     based register allocators are fast and do well on regular,
     RISC-like, architectures, but perform poorly on irregular,
     CISC-like, architectures with few registers and non-orthogonal
     instruction sets. At the other extreme, optimal register
     allocators based on integer linear programming are capable of
     fully modeling and exploiting the peculiarities of irregular
     architectures but do not scale well. We introduce the idea of a
     \textit{progressive allocator} which finds an initial allocation
     of quality comparable to a conventional allocator, but as more
     time is allowed for computation the quality of the allocation
     approaches optimal. This paper presents a progressive register
     allocator which uses a multi-commodity network flow model to
     elegantly represent the intricacies of irregular architectures.
     We evaluate our allocator substituted for {\tt gcc}'s local
     register allocation pass.},
  keywords = {Compilers:Register Allocation},
  url = {http://www.cs.cmu.edu/~seth/papers/koes-cgo05.pdf},
}
</pre></a></td></tr>
<tr><td></td><td class="entry"><a name="budiu-ispass05"></a><a name="topbudiu-ispass05">
</a><a class="title" href="http://www.cs.cmu.edu/~seth/papers/budiu-ispass05.html">Dataflow: A Complement to Superscalar</a></td><td class="links" nowrap=""><a class="pdf" href="http://www.cs.cmu.edu/~seth/papers/budiu-ispass05.pdf">pdf</a> <a class="bib" href="javascript:togglebib('budiu-ispass05')">bib</a> <a class="abs" href="javascript:toggleabs('budiu-ispass05')">abstract</a> </td></tr><tr><td></td><td class="authinfo" colspan="2">
<a class="authinfo" href="http://research.microsoft.com/users/mbudiu/">Mihai Budiu</a>, <a class="authinfo" href="http://www.cs.cmu.edu/~artigas/">Pedro V. Artigas</a>, and <a class="authinfo" href="http://www.cs.cmu.edu/~seth">Seth Copen Goldstein</a>.
In <em>IEEE International Symposium on Performance Analysis of Systems and Software (ISPASS)</em>,
pages 177–186, Mar 2005.
</td></tr>
<tr><td></td><td colspan="2"><div class="invisible" id="abstextbudiu-ispass05"><table><tr><td class="hide"><a href="javascript:toggleabs('budiu-ispass05')">hide<br/>Abstract</a></td><td><p class="abs">There has been a resurgence of interest in dataflow architectures, because of their potential for exploiting parallelism with low overhead. In this paper we analyze the performance of a class of static dataflow machines on integer media and control-intensive programs and we explain why a dataflow machine, even with unlimited resources, does not always outperform a superscalar processor on general-purpose codes, under the assumption that both machines take the same time to execute basic operations. We compare a program-specific dataflow machine with unlimited parallelism to a superscalar processor running the same program. While the dataflow machines provide very good performance on most data-parallel programs, we show that the dataflow machine cannot always take advantage of the available parallelism. Using the dynamic critical path we investigate the mechanisms used by superscalar processors to provide a performance advantage and their impact on a dataflow model.</p></td></tr></table></div></td></tr><tr><td></td><td colspan="2"><a name="bibbudiu-ispass05"><pre class="invisible" id="bibtextbudiu-ispass05">@inproceedings{budiu-ispass05,
  author = {Budiu, Mihai and Artigas, Pedro V. and Goldstein, Seth
     Copen},
  title = {Dataflow: A Complement to Superscalar},
  booktitle = {IEEE International Symposium on Performance Analysis of
     Systems and Software (ISPASS)},
  month = {Mar},
  year = {2005},
  pages = {177--186},
  address = {Austin, TX},
  url = {http://www.cs.cmu.edu/~seth/papers/budiu-ispass05.pdf},
  abstract = {There has been a resurgence of interest in dataflow
     architectures, because of their potential for exploiting
     parallelism with low overhead. In this paper we analyze the
     performance of a class of static dataflow machines on integer
     media and control-intensive programs and we explain why a
     dataflow machine, even with unlimited resources, does not always
     outperform a superscalar processor on general-purpose codes,
     under the assumption that both machines take the same time to
     execute basic operations. We compare a program-specific dataflow
     machine with unlimited parallelism to a superscalar processor
     running the same program. While the dataflow machines provide
     very good performance on most data-parallel programs, we show
     that the dataflow machine cannot always take advantage of the
     available parallelism. Using the dynamic critical path we
     investigate the mechanisms used by superscalar processors to
     provide a performance advantage and their impact on a dataflow
     model.},
  confweb = {http://www.ispass.org/ispass2005},
  keywords = {Spatial Computing,Phoenix},
}
</pre></a></td></tr>
<tr><td></td><td class="entry"><a name="budiu-odes05"></a><a name="topbudiu-odes05">
</a><a class="title" href="http://www.cs.cmu.edu/~seth/papers/budiu-odes05.html">Inter-iteration Scalar Replacement in the Presence of Conditional Control Flow</a></td><td class="links" nowrap=""><a class="pdf" href="http://www.cs.cmu.edu/~seth/papers/budiu-odes05.pdf">pdf</a> <a class="bib" href="javascript:togglebib('budiu-odes05')">bib</a> </td></tr><tr><td></td><td class="authinfo" colspan="2">
<a class="authinfo" href="http://research.microsoft.com/users/mbudiu/">Mihai Budiu</a> and <a class="authinfo" href="http://www.cs.cmu.edu/~seth">Seth Copen Goldstein</a>.
In <em>3rd Workshop on Optimizations for DSO and Embedded Systems</em>,
Mar 2005.
Also appeared as CMU CS Technical Report, CMU-CS-04-103.
</td></tr>
<tr><td></td><td colspan="2"><a name="bibbudiu-odes05"><pre class="invisible" id="bibtextbudiu-odes05">@inproceedings{budiu-odes05,
  title = {Inter-iteration Scalar Replacement in the Presence of
     Conditional Control Flow},
  url = {http://www.cs.cmu.edu/~seth/papers/budiu-odes05.pdf},
  booktitle = {3rd Workshop on Optimizations for DSO and Embedded
     Systems},
  author = {Budiu, Mihai and Goldstein, Seth Copen},
  year = {2005},
  address = {San Jose, CA},
  month = {Mar},
  also = {CMU CS Technical Report, CMU-CS-04-103},
  keywords = {Phoenix,Compilers:Loop Optimizations,Compilers:Scalar
     Replacement},
}
</pre></a></td></tr>
<tr><td></td><td class="entry"><a name="lincoln-tnano05"></a><a name="toplincoln-tnano05">
</a><a class="title" href="http://www.cs.cmu.edu/~seth/papers/lincoln-tnano05.html">Nonphotolithographic Nanoscale Memory Density Prospects</a></td><td class="links" nowrap=""><a class="pdf" href="http://www.cs.cmu.edu/~seth/papers/lincoln-tnano05.pdf">pdf</a> <a class="bib" href="javascript:togglebib('lincoln-tnano05')">bib</a> <a class="abs" href="javascript:toggleabs('lincoln-tnano05')">abstract</a> </td></tr><tr><td></td><td class="authinfo" colspan="2">
<a class="authinfo" href="http://www.seas.upenn.edu/~andre/">Andre DeHon</a>, <a class="authinfo" href="http://www.cs.cmu.edu/~seth">Seth Copen Goldstein</a>, <a class="authinfo" href="http://www.hpl.hp.com/research/qsr/people/Phil_Kuekes/?jumpid=reg_R1002_USEN">Phil Kuekes</a>, and <a class="authinfo" href="http://www.csl.sri.com/people/lincoln/">Patrick Lincoln</a>.
<em>IEEE Transactions on Nanotechnology</em>,
volume 4, pages 215–228, Mar 2005.
</td></tr>
<tr><td></td><td colspan="2"><div class="invisible" id="abstextlincoln-tnano05"><table><tr><td class="hide"><a href="javascript:toggleabs('lincoln-tnano05')">hide<br/>Abstract</a></td><td><p class="abs">Technologies are now emerging to construct molecular-scale electronic wires and switches using bottom-up self-assembly. This opens the possibility of constructing nanoscale circuits and memories where active devices are just a few nanometers square and wire pitches may be on the order of ten nanometers. The features can be defined at this scale without using photolithography. The available assembly techniques have relatively high defect rates compared to conventional lithographic integrated circuits and can only produce very regular structures. Nonetheless, with proper memory organization, it is reasonable to expect these technologies to provide memory densities in excess of 10/sup 11/ b/cm/sup 2/ with modest active power requirements under 0.6 W/Tb/s for random read operations.</p></td></tr></table></div></td></tr><tr><td></td><td colspan="2"><a name="biblincoln-tnano05"><pre class="invisible" id="bibtextlincoln-tnano05">@article{lincoln-tnano05,
  title = {Nonphotolithographic Nanoscale Memory Density Prospects},
  abstract = {Technologies are now emerging to construct
     molecular-scale electronic wires and switches using bottom-up
     self-assembly. This opens the possibility of constructing
     nanoscale circuits and memories where active devices are just a
     few nanometers square and wire pitches may be on the order of ten
     nanometers. The features can be defined at this scale without
     using photolithography. The available assembly techniques have
     relatively high defect rates compared to conventional
     lithographic integrated circuits and can only produce very
     regular structures. Nonetheless, with proper memory organization,
     it is reasonable to expect these technologies to provide memory
     densities in excess of 10/sup 11/ b/cm/sup 2/ with modest active
     power requirements under 0.6 W/Tb/s for random read operations.},
  url = {http://www.cs.cmu.edu/~seth/papers/lincoln-tnano05.pdf},
  journal = {IEEE Transactions on Nanotechnology},
  author = {DeHon, Andre and Goldstein, Seth Copen and Kuekes, Phil
     and Lincoln, Patrick},
  year = {2005},
  month = {Mar},
  volume = {4},
  issue = {2},
  pages = {215-228},
  keywords = {Fault and Defect Tolerance, electronic nanotechnology,
     memory density, memory organization, molecular electronics},
  doi = {10.1109/TNANO.2004.837849},
}
</pre></a></td></tr>
<tr><td></td><td class="entry"><a name="aksak-sensys05"></a><a name="topaksak-sensys05">
</a><a class="title" href="http://www.cs.cmu.edu/~seth/papers/aksak-sensys05.html">Demo Abstract: Claytronics---highly scalable communications, sensing, and actuation networks.</a></td><td class="links" nowrap=""><a class="pdf" href="http://www.cs.cmu.edu/~seth/papers/aksak-sensys05.pdf">pdf</a> <a class="bib" href="javascript:togglebib('aksak-sensys05')">bib</a> </td></tr><tr><td></td><td class="authinfo" colspan="2">
<a class="authinfo" href="http://www.me.cmu.edu/faculty1/sitti/nano/members/burak/">Burak Aksak</a>, <a class="authinfo" href="http://www.cs.cmu.edu/~preethi/">Preethi Srinivas Bhat</a>, <a class="authinfo" href="http://www.pittsburgh.intel-research.net/people/campbell.html">Jason D. Campbell</a>, <a class="authinfo" href="http://www.cs.cmu.edu/~mderosa/">Michael De Rosa</a>, <a class="authinfo" href="www.cs.cmu.edu/~sfuniak/">Stanislav Funiak</a>, <a class="authinfo" href="http://www.pittsburgh.intel-research.net/people/gibbons/">Phillip B. Gibbons</a>, <a class="authinfo" href="http://www.cs.cmu.edu/~seth">Seth Copen Goldstein</a>, <a class="authinfo" href="http://www.cs.cmu.edu/~guestrin/">Carlos Guestrin</a>, <a class="authinfo" href="http://www.cs.cmu.edu/~seth/helpmefind.html">Ashish Gupta</a>, <a class="authinfo" href="http://www.pittsburgh.intel-research.net/people/helfrich.html">Casey Helfrich</a>, <a class="authinfo" href="http://www.ece.cmu.edu/directory/details/69">James F. Hoburg</a>, <a class="authinfo" href="http://people.cs.cmu.edu/person/46359.html">Brian Kirby</a>, <a class="authinfo" href="http://www.kuffner.org/james/">James Kuffner</a>, <a class="authinfo" href="http://www.cs.cmu.edu/~petel/">Peter Lee</a>, <a class="authinfo" href="http://www.cs.cmu.edu/~tcm">Todd C. Mowry</a>, <a class="authinfo" href="http://www.pittsburgh.intel-research.net/people/pillai.html">Padmanabhan Pillai</a>, <a class="authinfo" href="http://raam.wikidot.com/">Ram Ravichandran</a>, <a class="authinfo" href="http://www.cs.cmu.edu/~bdr/">Benjamin D. Rister</a>, <a class="authinfo" href="http://www.cs.cmu.edu/~srini/">Srinivasan Seshan</a>, <a class="authinfo" href="http://www.cs.cmu.edu/~msitti/">Metin Sitti</a>, and <a class="authinfo" href="http://www.comp.nus.edu.sg/~yuhf/">Haifeng Yu</a>.
In <em>Proceedings of the 3rd international conference on Embedded networked sensor systems (SenSys)</em>,
pages 299, 2005.
</td></tr>
<tr><td></td><td colspan="2"><a name="bibaksak-sensys05"><pre class="invisible" id="bibtextaksak-sensys05">@inproceedings{aksak-sensys05,
  author = {Aksak, Burak and Bhat, Preethi Srinivas and Campbell,
     Jason D. and De~Rosa, Michael and Funiak, Stanislav and Gibbons,
     Phillip B. and Goldstein, Seth Copen and Guestrin, Carlos and
     Gupta, Ashish and Helfrich, Casey and Hoburg, James F. and Kirby,
     Brian and Kuffner, James and Lee, Peter and Mowry, Todd C. and
     Pillai, Padmanabhan and Ravichandran, Ram and Rister, Benjamin D.
     and Seshan, Srinivasan and Sitti, Metin and Yu, Haifeng},
  title = {Demo Abstract: Claytronics---highly scalable
     communications, sensing, and actuation networks.},
  booktitle = {Proceedings of the 3rd international conference on
     Embedded networked sensor systems (SenSys)},
  year = {2005},
  pages = {299},
  url = {http://www.cs.cmu.edu/~seth/papers/aksak-sensys05.pdf},
  doi = {http://doi.acm.org/10.1145/1098918.1098964},
  keywords = {Claytronics, Programmable Matter},
}
</pre></a></td></tr>
<tr><td></td><td class="entry"><a name="goldstein-iccad05"></a><a name="topgoldstein-iccad05">
</a><a class="title" href="http://www.cs.cmu.edu/~seth/papers/goldstein-iccad05.html">The impact of the nanoscale on computing systems</a></td><td class="links" nowrap=""><a class="pdf" href="http://www.cs.cmu.edu/~seth/papers/goldstein-iccad05.pdf">pdf</a> <a class="bib" href="javascript:togglebib('goldstein-iccad05')">bib</a> </td></tr><tr><td></td><td class="authinfo" colspan="2">
<a class="authinfo" href="http://www.cs.cmu.edu/~seth">Seth Copen Goldstein</a>.
In <em>IEEE/ACM International Conference on Computer-Aided Design, 2005 (ICCAD 2005)</em>,
pages 655–661, Nov 2005.
</td></tr>
<tr><td></td><td colspan="2"><a name="bibgoldstein-iccad05"><pre class="invisible" id="bibtextgoldstein-iccad05">@inproceedings{goldstein-iccad05,
  title = {The impact of the nanoscale on computing systems},
  url = {http://www.cs.cmu.edu/~seth/papers/goldstein-iccad05.pdf},
  booktitle = {IEEE/ACM International Conference on Computer-Aided
     Design, 2005 (ICCAD 2005)},
  author = {Goldstein, Seth Copen},
  year = {2005},
  pages = {655-661},
  address = {San Jose, CA},
  month = {Nov},
  keywords = {Electronic Nanotechnology,molecular electronics},
}
</pre></a></td></tr>
<tr><td class="year">2004</td><td class="entry"><a name="goldstein-waci04"></a><a name="topgoldstein-waci04">
</a><a class="title" href="http://www.cs.cmu.edu/~seth/papers/goldstein-waci04.html">Claytronics: An Instance of Programmable Matter</a></td><td class="links" nowrap=""><a class="pdf" href="http://www.cs.cmu.edu/~seth/papers/goldstein-waci04.pdf">pdf</a> <a class="bib" href="javascript:togglebib('goldstein-waci04')">bib</a> <a class="abs" href="javascript:toggleabs('goldstein-waci04')">abstract</a> </td></tr><tr><td></td><td class="authinfo" colspan="2">
<a class="authinfo" href="http://www.cs.cmu.edu/~seth">Seth Copen Goldstein</a> and <a class="authinfo" href="http://www.cs.cmu.edu/~tcm">Todd C. Mowry</a>.
In <em>Wild and Crazy Ideas Session of ASPLOS</em>,
Oct 2004.
</td></tr>
<tr><td></td><td colspan="2"><div class="invisible" id="abstextgoldstein-waci04"><table><tr><td class="hide"><a href="javascript:toggleabs('goldstein-waci04')">hide<br/>Abstract</a></td><td><p class="abs">Programmable matter refers to a technology that will allow one to control and manipulate three-dimensional physical artifacts (similar to how we already control and manipulate two-dimensional images with computer graphics). In other words, programmable matter will allow us to take a (big) step beyond virtual reality, to synthetic reality, an environment in which all the objects in a user’s environment (including the ones inserted by the computer) are physically realized. Note that the idea is not to transport objects nor is it to recreate an objects chemical composition, but rather to create a physical artifact that will mimic the shape, movement, visual appearance, sound, and tactile qualities of the original object.</p></td></tr></table></div></td></tr><tr><td></td><td colspan="2"><a name="bibgoldstein-waci04"><pre class="invisible" id="bibtextgoldstein-waci04">@inproceedings{goldstein-waci04,
  author = {Goldstein, Seth Copen and Mowry, Todd C.},
  title = {Claytronics: An Instance of Programmable Matter},
  booktitle = {Wild and Crazy Ideas Session of ASPLOS},
  year = {2004},
  month = {Oct},
  address = {Boston, MA},
  keywords = {Claytronics},
  url = {http://www.cs.cmu.edu/~seth/papers/goldstein-waci04.pdf},
  abstract = {Programmable matter refers to a technology that will
     allow one to control and manipulate three-dimensional physical
     artifacts (similar to how we already control and manipulate
     two-dimensional images with computer graphics). In other words,
     programmable matter will allow us to take a (big) step beyond
     virtual reality, to synthetic reality, an environment in which
     all the objects in a user's environment (including the ones
     inserted by the computer) are physically realized. Note that the
     idea is not to transport objects nor is it to recreate an objects
     chemical composition, but rather to create a physical artifact
     that will mimic the shape, movement, visual appearance, sound,
     and tactile qualities of the original object.},
}
</pre></a></td></tr>
<tr><td></td><td class="entry"><a name="budiu-asplos04"></a><a name="topbudiu-asplos04">
</a><a class="title" href="http://www.cs.cmu.edu/~seth/papers/budiu-asplos04.html">Spatial Computation</a></td><td class="links" nowrap=""><a class="pdf" href="http://www.cs.cmu.edu/~seth/papers/budiu-asplos04.pdf">pdf</a> <a class="bib" href="javascript:togglebib('budiu-asplos04')">bib</a> <a class="abs" href="javascript:toggleabs('budiu-asplos04')">abstract</a> </td></tr><tr><td></td><td class="authinfo" colspan="2">
<a class="authinfo" href="http://research.microsoft.com/users/mbudiu/">Mihai Budiu</a>, <a class="authinfo" href="http://www.ece.cmu.edu/~girishv/">Girish Venkataramani</a>, <a class="authinfo" href="http://www.cs.cmu.edu/~tibi/">Tiberiu Chelcea</a>, and <a class="authinfo" href="http://www.cs.cmu.edu/~seth">Seth Copen Goldstein</a>.
In <em>International Conference on Architectural Support for Programming Languages and Operating Systems (ASPLOS)</em>,
pages 14–26, Oct 2004.
</td></tr>
<tr><td></td><td colspan="2"><div class="invisible" id="abstextbudiu-asplos04"><table><tr><td class="hide"><a href="javascript:toggleabs('budiu-asplos04')">hide<br/>Abstract</a></td><td><p class="abs">This paper describes a computer architecture that relies on the direct translation of high-level language programs into <em>Spatial Computation</em> (SC) hardware structures. SC program implementations are completely distributed, without any centralized control. SC circuits are optimized for <em>wires</em> at the expense of computation units. </p><p class="abs"> In this paper we investigate a particular implementation SC structures called ASH (Application-Specific Hardware). Under the assumption that computation is cheaper than communication, ASH replicates computation units to simplify interconnect, building a system which uses very simple, completely dedicated communication channels. As a consequence, communication on the datapath never requires arbitration; the only arbitration required is for accessing memory. ASH relies on very simple hardware primitives, using no associative structures, no multiported register files, no scheduling logic, no broadcast, and no clocks. As a consequence, ASH hardware is fast and extremely power efficient. </p><p class="abs"> In this work we demonstrate three features of ASH: (1) that such architectures can be built by automatic compilation of C programs, (2) that distributed computation is in some respects fundamentally different from monolithic superscalar processors and (3) that ASIC implementations of ASH use 3 orders of magnitude less energy compared to high-end superscalar processors, while being within a factor of two in performance.</p></td></tr></table></div></td></tr><tr><td></td><td colspan="2"><a name="bibbudiu-asplos04"><pre class="invisible" id="bibtextbudiu-asplos04">@inproceedings{budiu-asplos04,
  author = {Budiu, Mihai and Venkataramani, Girish and Chelcea,
     Tiberiu and Goldstein, Seth Copen},
  title = {Spatial Computation},
  booktitle = {International Conference on Architectural Support for
     Programming Languages and Operating Systems (ASPLOS)},
  pages = {14--26},
  month = {Oct},
  address = {Boston, MA},
  year = {2004},
  url = {http://www.cs.cmu.edu/~seth/papers/budiu-asplos04.pdf},
  abstract = {This paper describes a computer architecture that relies
     on the direct translation of high-level language programs into
     {\em Spatial Computation} (SC) hardware structures. SC program
     implementations are completely distributed, without any
     centralized control. SC circuits are optimized for {\em wires} at
     the expense of computation units. \par In this paper we
     investigate a particular implementation SC structures called ASH
     (Application-Specific Hardware). Under the assumption that
     computation is cheaper than communication, ASH replicates
     computation units to simplify interconnect, building a system
     which uses very simple, completely dedicated communication
     channels. As a consequence, communication on the datapath never
     requires arbitration; the only arbitration required is for
     accessing memory. ASH relies on very simple hardware primitives,
     using no associative structures, no multiported register files,
     no scheduling logic, no broadcast, and no clocks. As a
     consequence, ASH hardware is fast and extremely power efficient.
     \par In this work we demonstrate three features of ASH: (1) that
     such architectures can be built by automatic compilation of C
     programs, (2) that distributed computation is in some respects
     fundamentally different from monolithic superscalar processors
     and (3) that ASIC implementations of ASH use 3 orders of
     magnitude less energy compared to high-end superscalar
     processors, while being within a factor of two in performance.},
  keywords = {Asychronous Circuits, Spatial Computing,Phoenix},
}
</pre></a></td></tr>
<tr><td></td><td class="entry"><a name="patent06"></a><a name="toppatent06">
</a><a class="title" href="http://www.cs.cmu.edu/~seth/papers/patent06.html">Methods of chemically assembled electronic nanotechnology circuit fabrication</a></td><td class="links" nowrap=""><a class="pdf" href="http://www.cs.cmu.edu/~seth/papers/patent06.pdf">pdf</a> <a class="bib" href="javascript:togglebib('patent06')">bib</a> <a class="abs" href="javascript:toggleabs('patent06')">abstract</a> </td></tr><tr><td></td><td class="authinfo" colspan="2">
<a class="authinfo" href="http://www.cs.cmu.edu/~seth">Seth Copen Goldstein</a> and <a class="authinfo" href="http://www.cs.cmu.edu/~seth/helpmefind.html">Daniel L. Rosewater</a>.
United States Patent No. 7,064,000. Issued June 20, 2006,
Jul 2004.
</td></tr>
<tr><td></td><td colspan="2"><div class="invisible" id="abstextpatent06"><table><tr><td class="hide"><a href="javascript:toggleabs('patent06')">hide<br/>Abstract</a></td><td><p class="abs">Chemically assembled electronic nanotechnology (CAEN) provides an alternative to using Complementary Metal Oxide Semiconductor (CMOS) for constructing circuits with feature sizes in the tens of nanometers. A molecular latch and a method using the latch that enables it to act as a state holding device, perform voltage restoration, and to provide I/O isolation is disclosed.</p></td></tr></table></div></td></tr><tr><td></td><td colspan="2"><a name="bibpatent06"><pre class="invisible" id="bibtextpatent06">@misc{patent06,
  author = {Goldstein, Seth Copen and Rosewater, Daniel L.},
  title = {Methods of chemically assembled electronic nanotechnology
     circuit fabrication},
  howpublished = {United States Patent No. 7,064,000. Issued June 20,
     2006},
  month = {Jul},
  year = {2004},
  url = {http://www.cs.cmu.edu/~seth/papers/patent06.pdf},
  keywords = {Molecular Electronics,Two-Terminal Devices},
  abstract = {Chemically assembled electronic nanotechnology (CAEN)
     provides an alternative to using Complementary Metal Oxide
     Semiconductor (CMOS) for constructing circuits with feature sizes
     in the tens of nanometers. A molecular latch and a method using
     the latch that enables it to act as a state holding device,
     perform voltage restoration, and to provide I/O isolation is
     disclosed.},
  url = {http://www.cs.cmu.edu/~seth/papers/patent06.pdf},
}
</pre></a></td></tr>
<tr><td></td><td class="entry"><a name="venkataramani-iwls04"></a><a name="topvenkataramani-iwls04">
</a><a class="title" href="http://www.cs.cmu.edu/~seth/papers/venkataramani-iwls04.html">C to Asynchronous Dataflow Circuits: An End-to-End Toolflow</a></td><td class="links" nowrap=""><a class="pdf" href="http://www.cs.cmu.edu/~seth/papers/venkataramani-iwls04.pdf">pdf</a> <a class="bib" href="javascript:togglebib('venkataramani-iwls04')">bib</a> <a class="abs" href="javascript:toggleabs('venkataramani-iwls04')">abstract</a> </td></tr><tr><td></td><td class="authinfo" colspan="2">
<a class="authinfo" href="http://www.ece.cmu.edu/~girishv/">Girish Venkataramani</a>, <a class="authinfo" href="http://research.microsoft.com/users/mbudiu/">Mihai Budiu</a>, <a class="authinfo" href="http://www.cs.cmu.edu/~tibi/">Tiberiu Chelcea</a>, and <a class="authinfo" href="http://www.cs.cmu.edu/~seth">Seth Copen Goldstein</a>.
In <em>IEEE 13th International Workshop on Logic Synthesis (IWLS)</em>,
Jun 2004.
</td></tr>
<tr><td></td><td colspan="2"><div class="invisible" id="abstextvenkataramani-iwls04"><table><tr><td class="hide"><a href="javascript:toggleabs('venkataramani-iwls04')">hide<br/>Abstract</a></td><td><p class="abs">We present a complete toolflow that translates ANSI-C programs into asynchronous circuits. The toolflow is built around a compiler that converts C into a functional dataflow intermediate representation, exposing instruction-level, pipeline and memory parallelism. The compiler performs optimizations and converts the intermediate representation into pipelined asynchronous circuits, with no centralized controllers. In the resulting circuits, control is distributed, communication is achieved through local wires, and arbitration for datapath resources is unnecessary. Circuits automatically synthesized from Mediabench kernels exhibit substantially better energy-delay than either single-issue processors or aggressive superscalar cores.</p></td></tr></table></div></td></tr><tr><td></td><td colspan="2"><a name="bibvenkataramani-iwls04"><pre class="invisible" id="bibtextvenkataramani-iwls04">@inproceedings{venkataramani-iwls04,
  title = {{C} to Asynchronous Dataflow Circuits: An End-to-End
     Toolflow},
  author = {Venkataramani, Girish and Budiu, Mihai and Chelcea,
     Tiberiu and Goldstein, Seth Copen},
  booktitle = {IEEE 13th International Workshop on Logic Synthesis
     (IWLS)},
  address = {Temecula, CA},
  month = {Jun},
  year = {2004},
  url = {http://www.cs.cmu.edu/~seth/papers/venkataramani-iwls04.pdf},
  abstract = {We present a complete toolflow that translates ANSI-C
     programs into asynchronous circuits. The toolflow is built around
     a compiler that converts C into a functional dataflow
     intermediate representation, exposing instruction-level, pipeline
     and memory parallelism. The compiler performs optimizations and
     converts the intermediate representation into pipelined
     asynchronous circuits, with no centralized controllers. In the
     resulting circuits, control is distributed, communication is
     achieved through local wires, and arbitration for datapath
     resources is unnecessary. Circuits automatically synthesized from
     Mediabench kernels exhibit substantially better energy-delay than
     either single-issue processors or aggressive superscalar cores.},
  keywords = {Asychronous Circuits,Spatial Computing,Phoenix,CAD},
}
</pre></a></td></tr>
<tr><td></td><td class="entry"><a name="goldstein04-ersa04"></a><a name="topgoldstein04-ersa04">
</a><a class="title" href="http://www.cs.cmu.edu/~seth/papers/goldstein04-ersa04.html">Computing Without Processors</a></td><td class="links" nowrap=""> <a class="bib" href="javascript:togglebib('goldstein04-ersa04')">bib</a> <a class="abs" href="javascript:toggleabs('goldstein04-ersa04')">abstract</a> </td></tr><tr><td></td><td class="authinfo" colspan="2">
<a class="authinfo" href="http://www.cs.cmu.edu/~seth">Seth Copen Goldstein</a>.
In <em>International Conference on Engineering of Reconfigurable Systems and Algorithms (ERSA 2004)</em>,
pages 29–32, Jun 2004.
</td></tr>
<tr><td></td><td colspan="2"><div class="invisible" id="abstextgoldstein04-ersa04"><table><tr><td class="hide"><a href="javascript:toggleabs('goldstein04-ersa04')">hide<br/>Abstract</a></td><td><p class="abs">The continuation of the remarkable exponential increases in processing power over the recent past faces imminent challenges due in part rising cost of design and manufacturing and the physics of deep-submicron semiconductor devices. In this talk we will discuss a promising alternative to ever more complex processors, application specific hardware (ASH). The ASH model is based on compiling high-level programs directly into circuits, which can either be fabricated as ASICs or more reasonably converted in configurations for reconfigurable devices. We will discuss the challenges involved in compiling sequential programming languages into circuits and the challenges in implementing those circuits in a scalable and power efficient manner.</p></td></tr></table></div></td></tr><tr><td></td><td colspan="2"><a name="bibgoldstein04-ersa04"><pre class="invisible" id="bibtextgoldstein04-ersa04">@inproceedings{goldstein04-ersa04,
  author = {Goldstein, Seth Copen},
  title = {Computing Without Processors},
  booktitle = {International Conference on Engineering of
     Reconfigurable Systems and Algorithms (ERSA 2004)},
  abstract = {The continuation of the remarkable exponential increases
     in processing power over the recent past faces imminent
     challenges due in part rising cost of design and manufacturing
     and the physics of deep-submicron semiconductor devices. In this
     talk we will discuss a promising alternative to ever more complex
     processors, application specific hardware (ASH). The ASH model is
     based on compiling high-level programs directly into circuits,
     which can either be fabricated as ASICs or more reasonably
     converted in configurations for reconfigurable devices. We will
     discuss the challenges involved in compiling sequential
     programming languages into circuits and the challenges in
     implementing those circuits in a scalable and power efficient
     manner.},
  address = {Las Vegas, NV},
  month = {Jun},
  year = {2004},
  pages = {29--32},
  keywords = {Reconfigurable Computing, Electronic Nanotechnology,
     Fault and Defect Tolerance},
}
</pre></a></td></tr>
<tr><td></td><td class="entry"><a name="koes-msp2004"></a><a name="topkoes-msp2004">
</a><a class="title" href="http://www.cs.cmu.edu/~seth/papers/koes-msp2004.html">Programmer Specified Pointer Independence</a></td><td class="links" nowrap=""><a class="pdf" href="http://www.cs.cmu.edu/~seth/papers/koes-msp2004.pdf">pdf</a> <a class="bib" href="javascript:togglebib('koes-msp2004')">bib</a> <a class="abs" href="javascript:toggleabs('koes-msp2004')">abstract</a> </td></tr><tr><td></td><td class="authinfo" colspan="2">
<a class="authinfo" href="http://www.cs.cmu.edu/~dkoes/">David Ryan Koes</a>, <a class="authinfo" href="http://research.microsoft.com/users/mbudiu/">Mihai Budiu</a>, <a class="authinfo" href="http://www.ece.cmu.edu/~girishv/">Girish Venkataramani</a>, and <a class="authinfo" href="http://www.cs.cmu.edu/~seth">Seth Copen Goldstein</a>.
In <em>Proceedings of the 2004 workshop on Memory system performance (MSP)</em>,
pages 51–59, Jun 2004.
Also appeared as Carnegie Mellon University TR CMU-CS-03-123.
</td></tr>
<tr><td></td><td colspan="2"><div class="invisible" id="abstextkoes-msp2004"><table><tr><td class="hide"><a href="javascript:toggleabs('koes-msp2004')">hide<br/>Abstract</a></td><td><p class="abs">Good alias analysis is essential in order to achieve high performance on modern processors, yet precise interprocedural analysis does not scale well. We present a source code annotation, <tt>\#pragma independent</tt>, which provides precise pointer aliasing information to the compiler, and describe a tool which highlights the most important and most likely correct locations at which a programmer should insert these annotations. Using this tool we perform a limit study on the effectiveness of pointer independence in improving program performance through improved compilation.</p></td></tr></table></div></td></tr><tr><td></td><td colspan="2"><a name="bibkoes-msp2004"><pre class="invisible" id="bibtextkoes-msp2004">@inproceedings{koes-msp2004,
  author = {Koes, David Ryan and Budiu, Mihai and Venkataramani,
     Girish and Goldstein, Seth Copen},
  title = {Programmer Specified Pointer Independence},
  booktitle = {Proceedings of the 2004 workshop on Memory system
     performance (MSP)},
  month = {Jun},
  year = {2004},
  isbn = {1-58113-941-1},
  pages = {51--59},
  address = {Washington, D.C.},
  doi = {http://doi.acm.org/10.1145/1065895.1065905},
  also = {Carnegie Mellon University TR CMU-CS-03-123},
  url = {http://www.cs.cmu.edu/~seth/papers/koes-msp2004.pdf},
  confweb = {http://cs.anu.edu.au/~Steve.Blackburn/msp2004},
  publisher = {ACM Press},
  abstract = {Good alias analysis is essential in order to achieve
     high performance on modern processors, yet precise
     interprocedural analysis does not scale well. We present a source
     code annotation, {\tt \#pragma independent}, which provides
     precise pointer aliasing information to the compiler, and
     describe a tool which highlights the most important and most
     likely correct locations at which a programmer should insert
     these annotations. Using this tool we perform a limit study on
     the effectiveness of pointer independence in improving program
     performance through improved compilation.},
  keywords = {Compilers:Alias Analysis,Phoenix},
}
</pre></a></td></tr>
<tr><td></td><td class="entry"><a name="budiu-async04"></a><a name="topbudiu-async04">
</a><a class="title" href="http://www.cs.cmu.edu/~seth/papers/budiu-async04.html">Translating ANSI C to Asynchronous Circuits</a></td><td class="links" nowrap=""><a class="pdf" href="http://www.cs.cmu.edu/~seth/papers/budiu-async04.pdf">pdf</a> <a class="bib" href="javascript:togglebib('budiu-async04')">bib</a> </td></tr><tr><td></td><td class="authinfo" colspan="2">
<a class="authinfo" href="http://research.microsoft.com/users/mbudiu/">Mihai Budiu</a>, <a class="authinfo" href="http://www.ece.cmu.edu/~girishv/">Girish Venkataramani</a>, <a class="authinfo" href="http://www.cs.cmu.edu/~tibi/">Tiberiu Chelcea</a>, and <a class="authinfo" href="http://www.cs.cmu.edu/~seth">Seth Copen Goldstein</a>.
In <em>10th IEEE International Symposium on Asynchronous Circuits and Systems (ASYNC  2004)</em>,
Apr 2004.
</td></tr>
<tr><td></td><td colspan="2"><a name="bibbudiu-async04"><pre class="invisible" id="bibtextbudiu-async04">@inproceedings{budiu-async04,
  title = {Translating ANSI C to Asynchronous Circuits},
  url = {http://www.cs.cmu.edu/~seth/papers/budiu-async04.pdf},
  booktitle = {10th IEEE International Symposium on Asynchronous
     Circuits and Systems (ASYNC  2004)},
  author = {Budiu, Mihai and Venkataramani, Girish and Chelcea,
     Tiberiu and Goldstein, Seth Copen},
  address = {Crete, Greece},
  year = {2004},
  month = {Apr},
  keywords = {Asychronous Circuits,CAD,Electronic Nanotechnology,Fault
     and Defect Tolerance,Phoenix,Reconfigurable Computing,Spatial
     Computing},
}
</pre></a></td></tr>
<tr><td></td><td class="entry"><a name="goldstein-gomac04"></a><a name="topgoldstein-gomac04">
</a><a class="title" href="http://www.cs.cmu.edu/~seth/papers/goldstein-gomac04.html">The Challenges and Opportunities of Nanoelectronics</a></td><td class="links" nowrap=""><a class="pdf" href="http://www.cs.cmu.edu/~seth/papers/goldstein-gomac04.pdf">pdf</a> <a class="bib" href="javascript:togglebib('goldstein-gomac04')">bib</a> </td></tr><tr><td></td><td class="authinfo" colspan="2">
<a class="authinfo" href="http://www.cs.cmu.edu/~seth">Seth Copen Goldstein</a>.
In <em>Proceedings of Government Microcircuit Applications and Critical Technology Conference (GOMAC Tech 04)</em>,
Mar 2004.
</td></tr>
<tr><td></td><td colspan="2"><a name="bibgoldstein-gomac04"><pre class="invisible" id="bibtextgoldstein-gomac04">@inproceedings{goldstein-gomac04,
  title = {The Challenges and Opportunities of Nanoelectronics},
  author = {Goldstein, Seth Copen},
  booktitle = {Proceedings of Government Microcircuit Applications and
     Critical Technology Conference (GOMAC Tech 04)},
  year = {2004},
  address = {Monterey, CA},
  keywords = {Electronic Nanotechnology},
  month = {Mar},
  url = {http://www.cs.cmu.edu/~seth/papers/goldstein-gomac04.pdf},
}
</pre></a></td></tr>
<tr><td></td><td class="entry"><a name="mishra-nqmc04"></a><a name="topmishra-nqmc04">
</a><a class="title" href="http://www.cs.cmu.edu/~seth/papers/mishra-nqmc04.html">Defect Tolerance at the End of the Roadmap</a></td><td class="links" nowrap=""> <a class="bib" href="javascript:togglebib('mishra-nqmc04')">bib</a> </td></tr><tr><td></td><td class="authinfo" colspan="2">
<a class="authinfo" href="http://www.cs.cmu.edu/~mahim/">Mahim Mishra</a> and <a class="authinfo" href="http://www.cs.cmu.edu/~seth">Seth Copen Goldstein</a>.
In <em>Nano, Quantum and Molecular Computing: Implications to High Level Design and Validation</em>,
2004.
</td></tr>
<tr><td></td><td colspan="2"><a name="bibmishra-nqmc04"><pre class="invisible" id="bibtextmishra-nqmc04">@incollection{mishra-nqmc04,
  title = {Defect Tolerance at the End of the Roadmap},
  booktitle = {Nano, Quantum and Molecular Computing: Implications to
     High Level Design and Validation},
  author = {Mishra, Mahim and Goldstein, Seth Copen},
  year = {2004},
  editor = {Sandeep K. Shukla and R. Iris Bahar},
  publisher = {Kluwer Academic Publishers},
  isbn = {1-4020-80670},
  keywords = {Electronic Nanotechnology,Fault and Defect
     Tolerance,Reconfigurable Computing,Phoenix,molecular
     electronics},
}
</pre></a></td></tr>
<tr><td></td><td class="entry"><a name="goldstein-robosphere04"></a><a name="topgoldstein-robosphere04">
</a><a class="title" href="http://www.cs.cmu.edu/~seth/papers/goldstein-robosphere04.html">Claytronics: A scalable basis for future robots</a></td><td class="links" nowrap=""><a class="pdf" href="http://www.cs.cmu.edu/~seth/papers/goldstein-robosphere04.pdf">pdf</a> <a class="bib" href="javascript:togglebib('goldstein-robosphere04')">bib</a> </td></tr><tr><td></td><td class="authinfo" colspan="2">
<a class="authinfo" href="http://www.cs.cmu.edu/~seth">Seth Copen Goldstein</a> and <a class="authinfo" href="http://www.cs.cmu.edu/~tcm">Todd C. Mowry</a>.
In <em>RoboSphere 2004</em>,
Nov 2004.
</td></tr>
<tr><td></td><td colspan="2"><a name="bibgoldstein-robosphere04"><pre class="invisible" id="bibtextgoldstein-robosphere04">@inproceedings{goldstein-robosphere04,
  author = {Goldstein, Seth Copen and Mowry, Todd C.},
  title = {Claytronics: A scalable basis for future robots},
  booktitle = {RoboSphere 2004},
  address = {Moffett Field, CA},
  month = {Nov},
  year = {2004},
  keywords = {Claytronics, Robotics},
  url = {http://www.cs.cmu.edu/~seth/papers/goldstein-robosphere04.pdf},
}
</pre></a></td></tr>
<tr><td></td><td class="entry"><a name="budiu-tr04"></a><a name="topbudiu-tr04">
</a><a class="title" href="http://www.cs.cmu.edu/~seth/papers/budiu-tr04.html">Inter-Iteration Scalar Replacement in the Presence of Conditional Control-Flow</a></td><td class="links" nowrap=""><a class="pdf" href="http://www.cs.cmu.edu/~seth/papers/budiu-tr04.pdf">pdf</a> <a class="bib" href="javascript:togglebib('budiu-tr04')">bib</a> </td></tr><tr><td></td><td class="authinfo" colspan="2">
<a class="authinfo" href="http://research.microsoft.com/users/mbudiu/">Mihai Budiu</a> and <a class="authinfo" href="http://www.cs.cmu.edu/~seth">Seth Copen Goldstein</a>.
Carnegie Mellon University Technical Report,
Feb 2004.
See <a href="#budiu-odes05">budiu-odes05</a>.
</td></tr>
<tr><td></td><td colspan="2"><a name="bibbudiu-tr04"><pre class="invisible" id="bibtextbudiu-tr04">@techreport{budiu-tr04,
  title = {Inter-Iteration Scalar Replacement in the Presence of
     Conditional Control-Flow},
  url = {http://www.cs.cmu.edu/~seth/papers/budiu-tr04.pdf},
  booktitle = {CMU CS Technical Report, CMU-CS-04-103},
  month = {Feb},
  year = {2004},
  author = {Budiu, Mihai and Goldstein, Seth Copen},
  institution = {Carnegie Mellon University},
  see = {budiu-odes05},
  keywords = {Phoenix,Compilers:Loop Optimizations,Compilers:Scalar
     Replacement},
}
</pre></a></td></tr>
<tr><td class="year">2003</td><td class="entry"><a name="mishra-itc03"></a><a name="topmishra-itc03">
</a><a class="title" href="http://www.cs.cmu.edu/~seth/papers/mishra-itc03.html">Defect Tolerance at the End of the Roadmap</a></td><td class="links" nowrap=""><a class="pdf" href="http://www.cs.cmu.edu/~seth/papers/mishra-itc03.pdf">pdf</a> <a class="bib" href="javascript:togglebib('mishra-itc03')">bib</a> <a class="abs" href="javascript:toggleabs('mishra-itc03')">abstract</a> </td></tr><tr><td></td><td class="authinfo" colspan="2">
<a class="authinfo" href="http://www.cs.cmu.edu/~mahim/">Mahim Mishra</a> and <a class="authinfo" href="http://www.cs.cmu.edu/~seth">Seth Copen Goldstein</a>.
In <em>Proceedings of the International Test Conference (ITC), 2003</em>,
Sep 2003.
</td></tr>
<tr><td></td><td colspan="2"><div class="invisible" id="abstextmishra-itc03"><table><tr><td class="hide"><a href="javascript:toggleabs('mishra-itc03')">hide<br/>Abstract</a></td><td><p class="abs">Defect tolerance will become more important as feature sizes shrink closer to single digit nanometer dimensions. This is true whether the chips are manufactured using top-down methods (e.g., photolithography) or bottom-up methods (e.g., chemically assembled electronic nanotechnology, or CAEN). In this paper, we propose a defect tolerance methodology centered around reconfigurable devices, a scalable testing method, and dynamic place-and-route. Our methodology is particularly well suited for CAEN.</p></td></tr></table></div></td></tr><tr><td></td><td colspan="2"><a name="bibmishra-itc03"><pre class="invisible" id="bibtextmishra-itc03">@inproceedings{mishra-itc03,
  author = {Mishra, Mahim and Goldstein, Seth Copen},
  title = {Defect Tolerance at the End of the Roadmap},
  booktitle = {Proceedings of the International Test Conference
     ({ITC}), 2003},
  month = {Sep},
  year = {2003},
  address = {Charlotte, {NC}},
  url = {http://www.cs.cmu.edu/~seth/papers/mishra-itc03.pdf},
  abstract = {Defect tolerance will become more important as feature
     sizes shrink closer to single digit nanometer dimensions. This is
     true whether the chips are manufactured using top-down methods
     (e.g., photolithography) or bottom-up methods (e.g., chemically
     assembled electronic nanotechnology, or CAEN). In this paper, we
     propose a defect tolerance methodology centered around
     reconfigurable devices, a scalable testing method, and dynamic
     place-and-route. Our methodology is particularly well suited for
     CAEN.},
  keywords = {Spatial Computing, Reconfigurable
     Computing,Phoenix,Fault and Defect Tolerance},
}
</pre></a></td></tr>
<tr><td></td><td class="entry"><a name="goldstein-inano03"></a><a name="topgoldstein-inano03">
</a><a class="title" href="http://www.cs.cmu.edu/~seth/papers/goldstein-inano03.html">Models and Abstractions for Nanoelectronics</a></td><td class="links" nowrap=""> <a class="bib" href="javascript:togglebib('goldstein-inano03')">bib</a> </td></tr><tr><td></td><td class="authinfo" colspan="2">
<a class="authinfo" href="http://www.cs.cmu.edu/~seth">Seth Copen Goldstein</a> and <a class="authinfo" href="http://www.cs.cmu.edu/~seth/helpmefind.html">Y Zhu</a>.
In <em>Third IEEE Conference on Nanotechnology (IEEE-NANO 2003)</em>,
Aug 2003.
</td></tr>
<tr><td></td><td colspan="2"><a name="bibgoldstein-inano03"><pre class="invisible" id="bibtextgoldstein-inano03">@inproceedings{goldstein-inano03,
  title = {Models and Abstractions for Nanoelectronics},
  booktitle = {Third IEEE Conference on Nanotechnology (IEEE-NANO
     2003)},
  author = {Goldstein, Seth Copen and Zhu, Y},
  address = {San Francisco, CA},
  year = {2003},
  month = {Aug},
  keywords = {Electronic Nanotechnology},
}
</pre></a></td></tr>
<tr><td></td><td class="entry"><a name="goldstein-asap03"></a><a name="topgoldstein-asap03">
</a><a class="title" href="http://www.cs.cmu.edu/~seth/papers/goldstein-asap03.html">Reconfigurable Computing and Electronic Nanotechnology</a></td><td class="links" nowrap=""><a class="pdf" href="http://www.cs.cmu.edu/~seth/papers/goldstein-asap03.pdf">pdf</a> <a class="bib" href="javascript:togglebib('goldstein-asap03')">bib</a> <a class="abs" href="javascript:toggleabs('goldstein-asap03')">abstract</a> </td></tr><tr><td></td><td class="authinfo" colspan="2">
<a class="authinfo" href="http://www.cs.cmu.edu/~seth">Seth Copen Goldstein</a>, <a class="authinfo" href="http://research.microsoft.com/users/mbudiu/">Mihai Budiu</a>, <a class="authinfo" href="http://www.cs.cmu.edu/~mahim/">Mahim Mishra</a>, and <a class="authinfo" href="http://www.ece.cmu.edu/~girishv/">Girish Venkataramani</a>.
In <em>Proceedings of the IEEE 14th International Conference on Application-specific Systems, Architectures and Processors (ASAP 2003)</em>,
pages 132–143, Jun 2003.
</td></tr>
<tr><td></td><td colspan="2"><div class="invisible" id="abstextgoldstein-asap03"><table><tr><td class="hide"><a href="javascript:toggleabs('goldstein-asap03')">hide<br/>Abstract</a></td><td><p class="abs">In this paper we examine the opportunities brought about by recent progress in electronic nanotechnology and describe the methods needed to harness them for building a new computer architecture. In this process we decompose some traditional abstractions, such as the transistor, into fine-grain pieces, such as signal restoration and input-output isolation. We also show how we can forgo the extreme reliability of CMOS circuits for low-cost chemical self-assembly at the expense of large manufacturing defect densities. We discuss advanced testing methods which can be used to recover perfect functionality from unreliable parts. We proceed to show how the molecular switch, the regularity of the circuits created by self-assembly and the high defect densities logically require the use of reconfigurable hardware as a basic building block for hardware design. We then capitalize on the convergence of compilation and hardware synthesis (which takes place when programming reconfigurable hardware) to propose the complete elimination of the instruction-set architecture from the system architecture, and the synthesis of asynchronous dataflow machines directly from high-level programming languages, such as C. We discuss in some detail a scalable compilation system that perform this task.</p></td></tr></table></div></td></tr><tr><td></td><td colspan="2"><a name="bibgoldstein-asap03"><pre class="invisible" id="bibtextgoldstein-asap03">@inproceedings{goldstein-asap03,
  title = {Reconfigurable Computing and Electronic Nanotechnology},
  author = {Goldstein, Seth Copen and Budiu, Mihai and Mishra, Mahim
     and Venkataramani, Girish},
  booktitle = {Proceedings of the {IEEE} 14th International Conference
     on Application-specific Systems, Architectures and Processors
     ({ASAP} 2003)},
  year = {2003},
  address = {The Hague, Netherlands},
  month = {Jun},
  note = {Invited paper},
  pages = {132-143},
  abstract = {In this paper we examine the opportunities brought about
     by recent progress in electronic nanotechnology and describe the
     methods needed to harness them for building a new computer
     architecture. In this process we decompose some traditional
     abstractions, such as the transistor, into fine-grain pieces,
     such as signal restoration and input-output isolation. We also
     show how we can forgo the extreme reliability of CMOS circuits
     for low-cost chemical self-assembly at the expense of large
     manufacturing defect densities. We discuss advanced testing
     methods which can be used to recover perfect functionality from
     unreliable parts. We proceed to show how the molecular switch,
     the regularity of the circuits created by self-assembly and the
     high defect densities logically require the use of reconfigurable
     hardware as a basic building block for hardware design. We then
     capitalize on the convergence of compilation and hardware
     synthesis (which takes place when programming reconfigurable
     hardware) to propose the complete elimination of the
     instruction-set architecture from the system architecture, and
     the synthesis of asynchronous dataflow machines directly from
     high-level programming languages, such as C. We discuss in some
     detail a scalable compilation system that perform this task.},
  keywords = {Reconfigurable Computing, Electronic Nanotechnology},
  url = {http://www.cs.cmu.edu/~seth/papers/goldstein-asap03.pdf},
}
</pre></a></td></tr>
<tr><td></td><td class="entry"><a name="mishra-itsw03"></a><a name="topmishra-itsw03">
</a><a class="title" href="http://www.cs.cmu.edu/~seth/papers/mishra-itsw03.html">Defect Tolerance After the Roadmap</a></td><td class="links" nowrap=""><a class="pdf" href="http://www.cs.cmu.edu/~seth/papers/mishra-itsw03.pdf">pdf</a> <a class="bib" href="javascript:togglebib('mishra-itsw03')">bib</a> </td></tr><tr><td></td><td class="authinfo" colspan="2">
<a class="authinfo" href="http://www.cs.cmu.edu/~mahim/">Mahim Mishra</a> and <a class="authinfo" href="http://www.cs.cmu.edu/~seth">Seth Copen Goldstein</a>.
In <em>Proceedings of the 10th International Test Synthesis Workshop (ITSW)</em>,
Mar 2003.
</td></tr>
<tr><td></td><td colspan="2"><a name="bibmishra-itsw03"><pre class="invisible" id="bibtextmishra-itsw03">@inproceedings{mishra-itsw03,
  author = {Mishra, Mahim and Goldstein, Seth Copen},
  title = {Defect Tolerance After the Roadmap},
  booktitle = {Proceedings of the 10th International Test Synthesis
     Workshop (ITSW)},
  month = {Mar},
  year = {2003},
  address = {Santa Barbara, {CA}},
  keywords = {Spatial Computing, Reconfigurable Computing,Phoenix,
     Fault and Defect Tolerance},
  url = {http://www.cs.cmu.edu/~seth/papers/mishra-itsw03.pdf},
}
</pre></a></td></tr>
<tr><td></td><td class="entry"><a name="budiu-cgo03"></a><a name="topbudiu-cgo03">
</a><a class="title" href="http://www.cs.cmu.edu/~seth/papers/budiu-cgo03.html">Optimizing Memory Accesses For Spatial Computation</a></td><td class="links" nowrap=""><a class="pdf" href="http://www.cs.cmu.edu/~seth/papers/budiu-cgo03.pdf">pdf</a> <a class="bib" href="javascript:togglebib('budiu-cgo03')">bib</a> </td></tr><tr><td></td><td class="authinfo" colspan="2">
<a class="authinfo" href="http://research.microsoft.com/users/mbudiu/">Mihai Budiu</a> and <a class="authinfo" href="http://www.cs.cmu.edu/~seth">Seth Copen Goldstein</a>.
In <em>Proceedings of the 1st International ACM/IEEE Symposium on Code Generation and Optimization (CGO 03)</em>,
pages 216–227, Mar 2003.
</td></tr>
<tr><td></td><td colspan="2"><a name="bibbudiu-cgo03"><pre class="invisible" id="bibtextbudiu-cgo03">@inproceedings{budiu-cgo03,
  title = {Optimizing Memory Accesses For Spatial Computation},
  author = {Budiu, Mihai and Goldstein, Seth Copen},
  booktitle = {Proceedings of the 1st International ACM/IEEE Symposium
     on Code Generation and Optimization (CGO 03)},
  year = {2003},
  address = {San Francisco, CA},
  month = {Mar},
  pages = {216-227},
  url = {http://www.cs.cmu.edu/~seth/papers/budiu-cgo03.pdf},
  keywords = {Spatial Computing, Reconfigurable
     Computing,Phoenix,Compilers:Memory Optimizations},
}
</pre></a></td></tr>
<tr><td></td><td class="entry"><a name="goldstein-hldvt03"></a><a name="topgoldstein-hldvt03">
</a><a class="title" href="http://www.cs.cmu.edu/~seth/papers/goldstein-hldvt03.html">Reconfigurable Nanoelectronics and Defect Tolerance</a></td><td class="links" nowrap=""> <a class="bib" href="javascript:togglebib('goldstein-hldvt03')">bib</a> </td></tr><tr><td></td><td class="authinfo" colspan="2">
<a class="authinfo" href="http://www.cs.cmu.edu/~seth">Seth Copen Goldstein</a>.
In <em>Proceedings of High-level design, verification, and test</em>,
2003.
</td></tr>
<tr><td></td><td colspan="2"><a name="bibgoldstein-hldvt03"><pre class="invisible" id="bibtextgoldstein-hldvt03">@inproceedings{goldstein-hldvt03,
  title = {Reconfigurable Nanoelectronics and Defect Tolerance},
  author = {Goldstein, Seth Copen},
  booktitle = {Proceedings of High-level design, verification, and
     test},
  year = {2003},
  keywords = {Reconfigurable Computing, Electronic Nanotechnology,
     Fault and Defect Tolerance},
}
</pre></a></td></tr>
<tr><td></td><td class="entry"><a name="mircea-ieee03"></a><a name="topmircea-ieee03">
</a><a class="title" href="http://www.cs.cmu.edu/~seth/papers/mircea-ieee03.html">Molecular Electronics: From Devices and Interconnect to Circuits and Architecture</a></td><td class="links" nowrap=""><a class="pdf" href="http://www.cs.cmu.edu/~seth/papers/mircea-ieee03.pdf">pdf</a> <a class="bib" href="javascript:togglebib('mircea-ieee03')">bib</a> </td></tr><tr><td></td><td class="authinfo" colspan="2">
<a class="authinfo" href="http://www.ee.virginia.edu/~mrs8n/">Mircea R Stan</a>, <a class="authinfo" href="	http://www.ece.ncsu.edu/erl/faculty/paulf.html">Paul D Franzon</a>, <a class="authinfo" href="http://www.cs.cmu.edu/~seth">Seth Copen Goldstein</a>, <a class="authinfo" href="http://www.seas.virginia.edu/researchdirectory/page.php?emailID=jcl7d">John C Lach</a>, and <a class="authinfo" href="http://www.cs.cmu.edu/~seth/helpmefind.html">Matthew M Ziegler</a>.
<em>Proceedings of the IEEE</em>,
91(11), Nov 2003.
</td></tr>
<tr><td></td><td colspan="2"><a name="bibmircea-ieee03"><pre class="invisible" id="bibtextmircea-ieee03">@article{mircea-ieee03,
  title = {Molecular Electronics: From Devices and Interconnect to
     Circuits and Architecture},
  author = {Stan, Mircea R and Franzon, Paul D and Goldstein, Seth
     Copen and Lach, John C and Ziegler, Matthew M},
  journal = {Proceedings of the IEEE},
  year = {2003},
  volume = {91},
  number = {11},
  month = {Nov},
  keywords = {Electronic Nanotechnology},
  url = {http://www.cs.cmu.edu/~seth/papers/mircea-ieee03.pdf},
}
</pre></a></td></tr>
<tr><td></td><td class="entry"><a name="shukla-hldvt03"></a><a name="topshukla-hldvt03">
</a><a class="title" href="http://www.cs.cmu.edu/~seth/papers/shukla-hldvt03.html">Nano, Quantum, and Molecular Computing: Are We Ready for the Validation and Test Challenges</a></td><td class="links" nowrap=""><a class="pdf" href="http://www.cs.cmu.edu/~seth/papers/shukla-hldvt03.pdf">pdf</a> <a class="bib" href="javascript:togglebib('shukla-hldvt03')">bib</a> <a class="pdf" href="http://www.cs.cmu.edu/~seth/hldvt03-goldstein.pdf">talk</a> </td></tr><tr><td></td><td class="authinfo" colspan="2">
<a class="authinfo" href="http://fermat.ece.vt.edu/Fermatian_Info/sks.html">Sandeep K. Shukla</a>, <a class="authinfo" href="http://eeweb.poly.edu/karri/rameshkarri/">Ramesh Karri</a>, <a class="authinfo" href="http://www.cs.cmu.edu/~seth">Seth Copen Goldstein</a>, <a class="authinfo" href="http://www.ece.ucsb.edu/Faculty/Brewer/default.html">Forest Brewer</a>, <a class="authinfo" href="http://www.ece.ucsb.edu/faculty/Banerjee/default.html">Kaustav Banerjee</a>, and <a class="authinfo" href="http://www.nsf.gov/staff/staff_bio.jsp?lan=sabasu&amp;org=ENG">Sankar Basu</a>.
In <em>Eighth IEEE International High-Level Design Validation and Test Workshop</em>,
pages 307, Nov 2003.
</td></tr>
<tr><td></td><td colspan="2"><a name="bibshukla-hldvt03"><pre class="invisible" id="bibtextshukla-hldvt03">@inproceedings{shukla-hldvt03,
  title = {Nano, Quantum, and Molecular Computing: Are We Ready for
     the Validation and Test Challenges},
  url = {http://www.cs.cmu.edu/~seth/papers/shukla-hldvt03.pdf},
  talk = {http://www.cs.cmu.edu/~seth/hldvt03-goldstein.pdf},
  booktitle = {Eighth IEEE International High-Level Design Validation
     and Test Workshop},
  author = {Shukla, Sandeep K. and Karri, Ramesh and Goldstein, Seth
     Copen and Brewer, Forest and Banerjee, Kaustav and Basu, Sankar},
  year = {2003},
  month = {Nov},
  pages = {307},
  address = {San Francisco, CA},
  keywords = {Electronic Nanotechnology,Fault and Defect
     Tolerance,molecular electronics},
}
</pre></a></td></tr>
<tr><td></td><td class="entry"><a name="goldstein-mn03"></a><a name="topgoldstein-mn03">
</a><a class="title" href="http://www.cs.cmu.edu/~seth/papers/goldstein-mn03.html">Molecules, Gates, Circuits, Computer</a></td><td class="links" nowrap=""><a class="pdf" href="http://www.cs.cmu.edu/~seth/papers/goldstein-mn03.pdf">pdf</a> <a class="bib" href="javascript:togglebib('goldstein-mn03')">bib</a> </td></tr><tr><td></td><td class="authinfo" colspan="2">
<a class="authinfo" href="http://www.cs.cmu.edu/~seth">Seth Copen Goldstein</a> and <a class="authinfo" href="http://research.microsoft.com/users/mbudiu/">Mihai Budiu</a>.
In <em>Molecular Nanoelectronics</em>,
Jan 2003.
</td></tr>
<tr><td></td><td colspan="2"><a name="bibgoldstein-mn03"><pre class="invisible" id="bibtextgoldstein-mn03">@incollection{goldstein-mn03,
  title = {Molecules, Gates, Circuits, Computer},
  url = {http://www.cs.cmu.edu/~seth/papers/goldstein-mn03.pdf},
  booktitle = {Molecular Nanoelectronics},
  author = {Goldstein, Seth Copen and Budiu, Mihai},
  year = {2003},
  editor = {Mark A. Reed and Takhee Lee},
  publisher = {American Scientific Publishers},
  address = {Stevenson Ranch, CA},
  month = {Jan},
  isbn = {1-588883-006-3},
  keywords = {Asychronous Circuits,CAD,Electronic Nanotechnology,Fault
     and Defect Tolerance,Reconfigurable Computing,Spatial
     Computing,electronic nanotechnology,molecular electronics},
}
</pre></a></td></tr>
<tr><td class="year">2002</td><td class="entry"><a name="budiu-fpl02"></a><a name="topbudiu-fpl02">
</a><a class="title" href="http://www.cs.cmu.edu/~seth/papers/budiu-fpl02.html">Compiling Application-Specific Hardware</a></td><td class="links" nowrap=""><a class="pdf" href="http://www.cs.cmu.edu/~seth/papers/budiu-fpl02.pdf">pdf</a> <a class="bib" href="javascript:togglebib('budiu-fpl02')">bib</a> <a class="abs" href="javascript:toggleabs('budiu-fpl02')">abstract</a> </td></tr><tr><td></td><td class="authinfo" colspan="2">
<a class="authinfo" href="http://research.microsoft.com/users/mbudiu/">Mihai Budiu</a> and <a class="authinfo" href="http://www.cs.cmu.edu/~seth">Seth Copen Goldstein</a>.
In <em>Proceedings of the 12th International Conference on Field Programmable Logic and Applications</em>,
pages 853–863, Sep 2002.
</td></tr>
<tr><td></td><td colspan="2"><div class="invisible" id="abstextbudiu-fpl02"><table><tr><td class="hide"><a href="javascript:toggleabs('budiu-fpl02')">hide<br/>Abstract</a></td><td><p class="abs">In this paper we describe ASH, an architectural framework for implementing Application-Specific Hardware. ASH is based on automatic hardware synthesis from high-level languages. The generated circuits use only localized computation structures; in consequence, we expect these circuits to be fast, to use little power and to scale well with program complexity. </p><p class="abs"> We present in detail CASH, a scalable compiler framework for ASH, which generates hardware from programs written in C. Our compiler exploits instruction level parallelism by using aggressive speculation and dynamic scheduling. Based on this compilation scheme, we evaluate the computational resources necessary for implementing complex integer-based programs, and we suggest architectural features that would support the ASH framework.</p></td></tr></table></div></td></tr><tr><td></td><td colspan="2"><a name="bibbudiu-fpl02"><pre class="invisible" id="bibtextbudiu-fpl02">@inproceedings{budiu-fpl02,
  author = {Budiu, Mihai and Goldstein, Seth Copen},
  title = {Compiling Application-Specific Hardware},
  booktitle = {Proceedings of the 12th International Conference on
     Field Programmable Logic and Applications},
  year = {2002},
  address = {Montpellier (La Grande-Motte), France},
  month = {Sep},
  pages = {853--863},
  url = {http://www.cs.cmu.edu/~seth/papers/budiu-fpl02.pdf},
  abstract = {In this paper we describe ASH, an architectural
     framework for implementing Application-Specific Hardware. ASH is
     based on automatic hardware synthesis from high-level languages.
     The generated circuits use only localized computation structures;
     in consequence, we expect these circuits to be fast, to use
     little power and to scale well with program complexity. \par We
     present in detail CASH, a scalable compiler framework for ASH,
     which generates hardware from programs written in C. Our compiler
     exploits instruction level parallelism by using aggressive
     speculation and dynamic scheduling. Based on this compilation
     scheme, we evaluate the computational resources necessary for
     implementing complex integer-based programs, and we suggest
     architectural features that would support the ASH framework.},
  keywords = {Spatial Computing,Phoenix,Compilers:CASH},
}
</pre></a></td></tr>
<tr><td></td><td class="entry"><a name="venkataramani-fpl02"></a><a name="topvenkataramani-fpl02">
</a><a class="title" href="http://www.cs.cmu.edu/~seth/papers/venkataramani-fpl02.html">Factors Influencing the Performance of a CPU-RFU Hybrid Architecture</a></td><td class="links" nowrap=""><a class="pdf" href="http://www.cs.cmu.edu/~seth/papers/venkataramani-fpl02.pdf">pdf</a> <a class="bib" href="javascript:togglebib('venkataramani-fpl02')">bib</a> <a class="abs" href="javascript:toggleabs('venkataramani-fpl02')">abstract</a> </td></tr><tr><td></td><td class="authinfo" colspan="2">
<a class="authinfo" href="http://www.ece.cmu.edu/~girishv/">Girish Venkataramani</a>, <a class="authinfo" href="http://www.cs.cmu.edu/~seth/helpmefind.html">Suraj Sudhir</a>, <a class="authinfo" href="http://research.microsoft.com/users/mbudiu/">Mihai Budiu</a>, and <a class="authinfo" href="http://www.cs.cmu.edu/~seth">Seth Copen Goldstein</a>.
In <em>Proceedings of the 12th International Conference on Field Programmable Logic and Applications (FPL)</em>,
pages 955–965, Sep 2002.
</td></tr>
<tr><td></td><td colspan="2"><div class="invisible" id="abstextvenkataramani-fpl02"><table><tr><td class="hide"><a href="javascript:toggleabs('venkataramani-fpl02')">hide<br/>Abstract</a></td><td><p class="abs">Closely coupling a reconfigurable fabric with a conventional processor has been shown to successfully improve the system performance. However, today s superscalar pro-cessors are both complex and adept at extracting Instruction Level Parallelism (ILP), which introduces many complex issues to the design of a hybrid CPU-RFU system. This paper examines the design of a superscalar processor augmented with a closely-coupled recon-figurable fabric. It identifies architectural and compiler issues that affect the performance of the overall system. Previous efforts at combining a processor core with a reconfigurable fabric are examined in the light of these issues. We also present simulation results that emphasize the impact of these factors.</p></td></tr></table></div></td></tr><tr><td></td><td colspan="2"><a name="bibvenkataramani-fpl02"><pre class="invisible" id="bibtextvenkataramani-fpl02">@inproceedings{venkataramani-fpl02,
  title = {Factors Influencing the Performance of a CPU-RFU Hybrid
     Architecture},
  author = {Venkataramani, Girish and Sudhir, Suraj and Budiu, Mihai
     and Goldstein, Seth Copen},
  booktitle = {Proceedings of the 12th International Conference on
     Field Programmable Logic and Applications (FPL)},
  year = {2002},
  address = {Montpellier (La Grande-Motte), France},
  month = {Sep},
  url = {http://www.cs.cmu.edu/~seth/papers/venkataramani-fpl02.pdf},
  abstract = {Closely coupling a reconfigurable fabric with a
     conventional processor has been shown to successfully improve the
     system performance. However, today s superscalar pro-cessors are
     both complex and adept at extracting Instruction Level
     Parallelism (ILP), which introduces many complex issues to the
     design of a hybrid CPU-RFU system. This paper examines the design
     of a superscalar processor augmented with a closely-coupled
     recon-figurable fabric. It identifies architectural and compiler
     issues that affect the performance of the overall system.
     Previous efforts at combining a processor core with a
     reconfigurable fabric are examined in the light of these issues.
     We also present simulation results that emphasize the impact of
     these factors.},
  pages = {955-965},
  isbn = {3-540-44108-5},
  publisher = {Springer-Verlag},
  keywords = {Spatial Computing,Reconfigurable Computing,Phoenix},
}
</pre></a></td></tr>
<tr><td></td><td class="entry"><a name="rg01"></a><a name="toprg01">
</a><a class="title" href="http://www.cs.cmu.edu/~seth/papers/rg01.html">What makes a good molecular computing device?</a></td><td class="links" nowrap=""><a class="pdf" href="http://www.cs.cmu.edu/~seth/papers/rg01.pdf">pdf</a> <a class="bib" href="javascript:togglebib('rg01')">bib</a> </td></tr><tr><td></td><td class="authinfo" colspan="2">
<a class="authinfo" href="http://www.cs.cmu.edu/~seth/helpmefind.html">Daniel L. Rosewater</a> and <a class="authinfo" href="http://www.cs.cmu.edu/~seth">Seth Copen Goldstein</a>.
Carnegie Mellon University Technical Report No. CMU-CS-02-181,
Sep 2002.
</td></tr>
<tr><td></td><td colspan="2"><a name="bibrg01"><pre class="invisible" id="bibtextrg01">@techreport{rg01,
  author = {Rosewater, Daniel L. and Goldstein, Seth Copen},
  title = {What makes a good molecular computing device?},
  institution = {Carnegie Mellon University},
  year = {2002},
  number = {CMU-CS-02-181},
  month = {Sep},
  keywords = {Electronic Nanotechnology},
  url = {http://www.cs.cmu.edu/~seth/papers/rg01.pdf},
}
</pre></a></td></tr>
<tr><td></td><td class="entry"><a name="goldstein-cra02"></a><a name="topgoldstein-cra02">
</a><a class="title" href="http://www.cs.cmu.edu/~seth/papers/goldstein-cra02.html">Assembly And Differentiation</a></td><td class="links" nowrap=""><a class="pdf" href="http://www.cs.cmu.edu/~seth/papers/goldstein-cra02.pdf">pdf</a> <a class="bib" href="javascript:togglebib('goldstein-cra02')">bib</a> </td></tr><tr><td></td><td class="authinfo" colspan="2">
<a class="authinfo" href="http://www.cs.cmu.edu/~seth">Seth Copen Goldstein</a>.
In <em>CRA Conference on Grand Research Challenges</em>,
Jun 2002.
</td></tr>
<tr><td></td><td colspan="2"><a name="bibgoldstein-cra02"><pre class="invisible" id="bibtextgoldstein-cra02">@inproceedings{goldstein-cra02,
  title = {Assembly And Differentiation},
  url = {http://www.cs.cmu.edu/~seth/papers/goldstein-cra02.pdf},
  booktitle = {CRA Conference on Grand Research Challenges},
  author = {Goldstein, Seth Copen},
  address = {Warrenton, Virginia},
  year = {2002},
  month = {Jun},
  keywords = {Programmable Matter},
}
</pre></a></td></tr>
<tr><td></td><td class="entry"><a name="budiu-tr02"></a><a name="topbudiu-tr02">
</a><a class="title" href="http://www.cs.cmu.edu/~seth/papers/budiu-tr02.html">Pegasus: An Efficient Intermediate Representation</a></td><td class="links" nowrap=""><a class="pdf" href="http://www.cs.cmu.edu/~seth/papers/budiu-tr02.pdf">pdf</a> <a class="bib" href="javascript:togglebib('budiu-tr02')">bib</a> <a class="abs" href="javascript:toggleabs('budiu-tr02')">abstract</a> </td></tr><tr><td></td><td class="authinfo" colspan="2">
<a class="authinfo" href="http://research.microsoft.com/users/mbudiu/">Mihai Budiu</a> and <a class="authinfo" href="http://www.cs.cmu.edu/~seth">Seth Copen Goldstein</a>.
Carnegie Mellon University Technical Report No. CMU-CS-02-107,
pages 20, May 2002.
</td></tr>
<tr><td></td><td colspan="2"><div class="invisible" id="abstextbudiu-tr02"><table><tr><td class="hide"><a href="javascript:toggleabs('budiu-tr02')">hide<br/>Abstract</a></td><td><p class="abs">We present Pegasus, a compact and expressive intermediate representation for imperative languages. The representation is suitable for target architectures supporting predicated execution and aggressive speculation. In Pegasus information about the global dataflow of the program is encoded in local structures, enabling compact and efficient algorithms for program optimizations. As a proof of the versatility of Pegasus, we have used it in a compiler translating C programs to hardware implementations.</p></td></tr></table></div></td></tr><tr><td></td><td colspan="2"><a name="bibbudiu-tr02"><pre class="invisible" id="bibtextbudiu-tr02">@techreport{budiu-tr02,
  author = {Budiu, Mihai and Goldstein, Seth Copen},
  title = {Pegasus: An Efficient Intermediate Representation},
  institution = {Carnegie Mellon University},
  year = {2002},
  number = {CMU-CS-02-107},
  month = {May},
  url = {http://www.cs.cmu.edu/~seth/papers/budiu-tr02.pdf},
  pages = {20},
  abstract = {We present Pegasus, a compact and expressive
     intermediate representation for imperative languages. The
     representation is suitable for target architectures supporting
     predicated execution and aggressive speculation. In Pegasus
     information about the global dataflow of the program is encoded
     in local structures, enabling compact and efficient algorithms
     for program optimizations. As a proof of the versatility of
     Pegasus, we have used it in a compiler translating C programs to
     hardware implementations.},
  keywords = {Spatial Computing, Reconfigurable Computing,Phoenix},
}
</pre></a></td></tr>
<tr><td></td><td class="entry"><a name="yan-fccm02"></a><a name="topyan-fccm02">
</a><a class="title" href="http://www.cs.cmu.edu/~seth/papers/yan-fccm02.html">Memory: Improving Memory Locality in Very Large Reconfigurable Fabrics</a></td><td class="links" nowrap=""><a class="pdf" href="http://www.cs.cmu.edu/~seth/papers/yan-fccm02.pdf">pdf</a> <a class="bib" href="javascript:togglebib('yan-fccm02')">bib</a> </td></tr><tr><td></td><td class="authinfo" colspan="2">
<a class="authinfo" href="http://www.informedia.cs.cmu.edu/yanrong/">Rong Yan</a> and <a class="authinfo" href="http://www.cs.cmu.edu/~seth">Seth Copen Goldstein</a>.
In <em>Proceedings of 2002 IEEE Symposium on Field-Programmable Custom Computing Machines (FCCM)</em>,
Apr 2002.
</td></tr>
<tr><td></td><td colspan="2"><a name="bibyan-fccm02"><pre class="invisible" id="bibtextyan-fccm02">@inproceedings{yan-fccm02,
  author = {Yan, Rong and Goldstein, Seth Copen},
  title = {Memory: Improving Memory Locality in Very Large
     Reconfigurable Fabrics},
  booktitle = {Proceedings of 2002 IEEE Symposium on
     Field-Programmable Custom Computing Machines (FCCM)},
  year = {2002},
  address = {Napa Valley, CA},
  month = {Apr},
  url = {http://www.cs.cmu.edu/~seth/papers/yan-fccm02.pdf},
  keywords = {Reconfigurable Computing},
}
</pre></a></td></tr>
<tr><td></td><td class="entry"><a name="patent04"></a><a name="toppatent04">
</a><a class="title" href="http://www.cs.cmu.edu/~seth/papers/patent04.html">Molecular scale latch and associated clocking scheme to provide gain, memory and I/O isolation</a></td><td class="links" nowrap=""><a class="pdf" href="http://www.cs.cmu.edu/~seth/papers/patent04.pdf">pdf</a> <a class="bib" href="javascript:togglebib('patent04')">bib</a> <a class="abs" href="javascript:toggleabs('patent04')">abstract</a> </td></tr><tr><td></td><td class="authinfo" colspan="2">
<a class="authinfo" href="http://www.cs.cmu.edu/~seth">Seth Copen Goldstein</a> and <a class="authinfo" href="http://www.cs.cmu.edu/~seth/helpmefind.html">Daniel L. Rosewater</a>.
United States Patent No. 6,777,982. Issued August 17, 2004,
Apr 2002.
</td></tr>
<tr><td></td><td colspan="2"><div class="invisible" id="abstextpatent04"><table><tr><td class="hide"><a href="javascript:toggleabs('patent04')">hide<br/>Abstract</a></td><td><p class="abs">Chemically assembled electronic nanotechnology (CAEN) provides an alternative to using Complementary Metal Oxide Semiconductor (CMOS) for constructing circuits with feature sizes in the tens of nanometers. A molecular latch and a method using the latch that enables it to act as a state holding device, perform voltage restoration, and to provide I/O isolation is disclosed.</p></td></tr></table></div></td></tr><tr><td></td><td colspan="2"><a name="bibpatent04"><pre class="invisible" id="bibtextpatent04">@misc{patent04,
  author = {Goldstein, Seth Copen and Rosewater, Daniel L.},
  title = {Molecular scale latch and associated clocking scheme to
     provide gain, memory and I/O isolation},
  howpublished = {United States Patent No. 6,777,982. Issued August
     17, 2004},
  month = {Apr},
  url = {http://www.cs.cmu.edu/~seth/papers/patent04.pdf},
  year = {2002},
  keywords = {Molecular Electronics,Two-Terminal Devices},
  abstract = {Chemically assembled electronic nanotechnology (CAEN)
     provides an alternative to using Complementary Metal Oxide
     Semiconductor (CMOS) for constructing circuits with feature sizes
     in the tens of nanometers. A molecular latch and a method using
     the latch that enables it to act as a state holding device,
     perform voltage restoration, and to provide I/O isolation is
     disclosed.},
  url = {http://www.cs.cmu.edu/~seth/papers/patent04.pdf},
}
</pre></a></td></tr>
<tr><td></td><td class="entry"><a name="budiu-fccm02"></a><a name="topbudiu-fccm02">
</a><a class="title" href="http://www.cs.cmu.edu/~seth/papers/budiu-fccm02.html">Peer-to-peer Hardware-Software Interfaces for Reconfigurable Fabrics</a></td><td class="links" nowrap=""><a class="pdf" href="http://www.cs.cmu.edu/~seth/papers/budiu-fccm02.pdf">pdf</a> <a class="bib" href="javascript:togglebib('budiu-fccm02')">bib</a> <a class="abs" href="javascript:toggleabs('budiu-fccm02')">abstract</a> </td></tr><tr><td></td><td class="authinfo" colspan="2">
<a class="authinfo" href="http://research.microsoft.com/users/mbudiu/">Mihai Budiu</a>, <a class="authinfo" href="http://www.cs.cmu.edu/~mahim/">Mahim Mishra</a>, <a class="authinfo" href="http://www.cs.cmu.edu/~ashu/">Ashwin Bharambe</a>, and <a class="authinfo" href="http://www.cs.cmu.edu/~seth">Seth Copen Goldstein</a>.
In <em>Proceedings of 2002 IEEE Symposium on Field-Programmable Custom Computing Machines (FCCM)</em>,
pages 57–66, Apr 2002.
</td></tr>
<tr><td></td><td colspan="2"><div class="invisible" id="abstextbudiu-fccm02"><table><tr><td class="hide"><a href="javascript:toggleabs('budiu-fccm02')">hide<br/>Abstract</a></td><td><p class="abs">In this paper we describe a peer-to-peer interface between processor cores and reconfigurable fabrics. The main advantage of the peer-to-peer model is that it greatly expands the scope of application for reconfigurable computing and hence its potential benefits. The primary extension in our model is that “code” on the reconfigurable hardware unit is allowed to invoke routines both on the reconfigurable unit itself and on the fixed logic processor. We describe the software constructs and compilation mechanisms needed for such an architecture, including a detailed description of the interface between the two parts of the application.</p></td></tr></table></div></td></tr><tr><td></td><td colspan="2"><a name="bibbudiu-fccm02"><pre class="invisible" id="bibtextbudiu-fccm02">@inproceedings{budiu-fccm02,
  author = {Budiu, Mihai and Mishra, Mahim and Bharambe, Ashwin and
     Goldstein, Seth Copen},
  title = {Peer-to-peer Hardware-Software Interfaces for
     Reconfigurable Fabrics},
  booktitle = {Proceedings of 2002 IEEE Symposium on
     Field-Programmable Custom Computing Machines (FCCM)},
  year = {2002},
  month = {Apr},
  pages = {57-66},
  address = {Napa Valley, CA},
  abstract = {In this paper we describe a peer-to-peer interface
     between processor cores and reconfigurable fabrics. The main
     advantage of the peer-to-peer model is that it greatly expands
     the scope of application for reconfigurable computing and hence
     its potential benefits. The primary extension in our model is
     that ``code'' on the reconfigurable hardware unit is allowed to
     invoke routines both on the reconfigurable unit itself and on the
     fixed logic processor. We describe the software constructs and
     compilation mechanisms needed for such an architecture, including
     a detailed description of the interface between the two parts of
     the application.},
  url = {http://www.cs.cmu.edu/~seth/papers/budiu-fccm02.pdf},
  keywords = {Reconfigurable Computing},
}
</pre></a></td></tr>
<tr><td></td><td class="entry"><a name="mishra_goldstein_nsc1"></a><a name="topmishra_goldstein_nsc1">
</a><a class="title" href="http://www.cs.cmu.edu/~seth/papers/mishra_goldstein_nsc1.html">Scalable Defect Tolerance for Molecular Electronics</a></td><td class="links" nowrap=""><a class="pdf" href="http://www.cs.cmu.edu/~seth/papers/mishra_goldstein_nsc1.pdf">pdf</a> <a class="bib" href="javascript:togglebib('mishra_goldstein_nsc1')">bib</a> <a class="abs" href="javascript:toggleabs('mishra_goldstein_nsc1')">abstract</a> </td></tr><tr><td></td><td class="authinfo" colspan="2">
<a class="authinfo" href="http://www.cs.cmu.edu/~mahim/">Mahim Mishra</a> and <a class="authinfo" href="http://www.cs.cmu.edu/~seth">Seth Copen Goldstein</a>.
In <em>Proceedings of the 1st Workshop on Non-Silicon Computing (NSC-1)</em>,
2002.
</td></tr>
<tr><td></td><td colspan="2"><div class="invisible" id="abstextmishra_goldstein_nsc1"><table><tr><td class="hide"><a href="javascript:toggleabs('mishra_goldstein_nsc1')">hide<br/>Abstract</a></td><td><p class="abs">Chemically assembled electronic nanotechnology (CAEN) is a promising alternative to CMOS-based computing. However, CAEN-based circuits are expected to have huge defect densities. To solve this problem CAEN can be used to build reconfigurable fabrics which, assuming the defects can be found, are inherently defect tolerant. In this paper, we propose a scalable testing methodology for finding defects in reconfigurable devices.</p></td></tr></table></div></td></tr><tr><td></td><td colspan="2"><a name="bibmishra_goldstein_nsc1"><pre class="invisible" id="bibtextmishra_goldstein_nsc1">@inproceedings{mishra_goldstein_nsc1,
  author = {Mishra, Mahim and Goldstein, Seth Copen},
  title = {Scalable Defect Tolerance for Molecular Electronics},
  booktitle = {Proceedings of the 1st Workshop on Non-Silicon
     Computing (NSC-1)},
  address = {{Cambridge, MA}},
  year = {2002},
  url = {http://www.cs.cmu.edu/~seth/papers/mishra_goldstein_nsc1.pdf},
  abstract = {Chemically assembled electronic nanotechnology (CAEN) is
     a promising alternative to CMOS-based computing. However,
     CAEN-based circuits are expected to have huge defect densities.
     To solve this problem CAEN can be used to build reconfigurable
     fabrics which, assuming the defects can be found, are inherently
     defect tolerant. In this paper, we propose a scalable testing
     methodology for finding defects in reconfigurable devices.},
  keywords = {Reconfigurable Computing, Phoenix,Fault and Defect
     Tolerance},
}
</pre></a></td></tr>
<tr><td></td><td class="entry"><a name="micro02"></a><a name="topmicro02">
</a><a class="title" href="http://www.cs.cmu.edu/~seth/papers/micro02.html">From Molecules to Computers</a></td><td class="links" nowrap=""><a class="pdf" href="http://www.cs.cmu.edu/~seth/papers/micro02.pdf">pdf</a> <a class="bib" href="javascript:togglebib('micro02')">bib</a> </td></tr><tr><td></td><td class="authinfo" colspan="2">
<a class="authinfo" href="http://www.cs.cmu.edu/~seth">Seth Copen Goldstein</a>.
In <em>Tutorial at 35th Annual International Symposium on Microarchitecture (Micro 35)</em>,
Nov 2002.
</td></tr>
<tr><td></td><td colspan="2"><a name="bibmicro02"><pre class="invisible" id="bibtextmicro02">@inproceedings{micro02,
  title = {From Molecules to Computers},
  author = {Goldstein, Seth Copen},
  year = {2002},
  address = {Istanbul, Turkey},
  booktitle = {Tutorial at 35th Annual International Symposium on
     Microarchitecture (Micro 35)},
  note = {Invited Tutorial},
  url = {http://www.cs.cmu.edu/~seth/papers/micro02.pdf},
  month = {Nov},
  keywords = {Electronic Nanotechnology},
}
</pre></a></td></tr>
<tr><td></td><td class="entry"><a name="butts-iccad02"></a><a name="topbutts-iccad02">
</a><a class="title" href="http://www.cs.cmu.edu/~seth/papers/butts-iccad02.html">Molecular electronics: devices, systems and tools for gigagate,gigabit chips</a></td><td class="links" nowrap=""><a class="pdf" href="http://www.cs.cmu.edu/~seth/papers/butts-iccad02.pdf">pdf</a> <a class="bib" href="javascript:togglebib('butts-iccad02')">bib</a> <a class="abs" href="javascript:toggleabs('butts-iccad02')">abstract</a> </td></tr><tr><td></td><td class="authinfo" colspan="2">
<a class="authinfo" href="http://www.cs.cmu.edu/~seth/helpmefind.html">Michael Butts</a>, <a class="authinfo" href="http://www.seas.upenn.edu/~andre/">Andre DeHon</a>, and <a class="authinfo" href="http://www.cs.cmu.edu/~seth">Seth Copen Goldstein</a>.
In <em>International Conference on Computer-Aided Design ( ICCAD  2002)</em>,
pages 433–440, Nov 2002.
</td></tr>
<tr><td></td><td colspan="2"><div class="invisible" id="abstextbutts-iccad02"><table><tr><td class="hide"><a href="javascript:toggleabs('butts-iccad02')">hide<br/>Abstract</a></td><td><p class="abs">New electronics technologies are emerging which may carry us beyond the limits of lithographic processing down to molecular-scale feature sizes. Devices and interconnects can be made from a variety of molecules and materials including bistable and switchable organic molecules, carbon nanotubes, and, single-crystal semiconductor nanowires. They can be self-assembled into organized structures and attached onto lithographic substrates. This tutorial reviews emerging molecular-scale electronics technology for CAD and system designers and highlights where ICCAD research can help support this technology.</p></td></tr></table></div></td></tr><tr><td></td><td colspan="2"><a name="bibbutts-iccad02"><pre class="invisible" id="bibtextbutts-iccad02">@inproceedings{butts-iccad02,
  title = {Molecular electronics: devices, systems and tools for
     gigagate,gigabit chips},
  url = {http://www.cs.cmu.edu/~seth/papers/butts-iccad02.pdf},
  doi = {http://doi.ieeecomputersociety.org/10.1109/ICCAD.2002.1167569},
  booktitle = {International Conference on Computer-Aided Design (
     ICCAD  2002)},
  author = {Butts, Michael and DeHon, Andre and Goldstein, Seth
     Copen},
  abstract = {New electronics technologies are emerging which may
     carry us beyond the limits of lithographic processing down to
     molecular-scale feature sizes. Devices and interconnects can be
     made from a variety of molecules and materials including bistable
     and switchable organic molecules, carbon nanotubes, and,
     single-crystal semiconductor nanowires. They can be
     self-assembled into organized structures and attached onto
     lithographic substrates. This tutorial reviews emerging
     molecular-scale electronics technology for CAD and system
     designers and highlights where ICCAD research can help support
     this technology.},
  address = {San Jose, CA},
  year = {2002},
  pages = {433-440},
  note = {invited tutorial at},
  month = {Nov},
  keywords = {Electronic Nanotechnology,Reconfigurable
     Computing,molecular electronics},
}
</pre></a></td></tr>
<tr><td></td><td class="entry"><a name="isscc02"></a><a name="topisscc02">
</a><a class="title" href="http://www.cs.cmu.edu/~seth/papers/isscc02.html">Digital Logic Using Molecular Electronics</a></td><td class="links" nowrap=""><a class="pdf" href="http://www.cs.cmu.edu/~seth/papers/isscc02.pdf">pdf</a> <a class="bib" href="javascript:togglebib('isscc02')">bib</a> </td></tr><tr><td></td><td class="authinfo" colspan="2">
<a class="authinfo" href="http://www.cs.cmu.edu/~seth/helpmefind.html">Dan Rosewater</a> and <a class="authinfo" href="http://www.cs.cmu.edu/~seth">Seth Copen Goldstein</a>.
In <em>IEEE International Solid-State Circuits Conference (ISSCC)</em>,
Feb 2002.
</td></tr>
<tr><td></td><td colspan="2"><a name="bibisscc02"><pre class="invisible" id="bibtextisscc02">@inproceedings{isscc02,
  author = {Rosewater, Dan and Goldstein, Seth Copen},
  title = {Digital Logic Using Molecular Electronics},
  booktitle = {IEEE International Solid-State Circuits Conference
     (ISSCC)},
  year = {2002},
  month = {Feb},
  address = {San Francisco, CA},
  keywords = {Electronic Nanotechnology,Molecular
     Electronics,Two-Terminal Devices},
  url = {http://www.cs.cmu.edu/~seth/papers/isscc02.pdf},
}
</pre></a></td></tr>
<tr><td class="year">2001</td><td class="entry"><a name="sudhir-fpl01"></a><a name="topsudhir-fpl01">
</a><a class="title" href="http://www.cs.cmu.edu/~seth/papers/sudhir-fpl01.html">Configuration Caching and Swapping</a></td><td class="links" nowrap=""><a class="pdf" href="http://www.cs.cmu.edu/~seth/papers/sudhir-fpl01.pdf">pdf</a> <a class="bib" href="javascript:togglebib('sudhir-fpl01')">bib</a> </td></tr><tr><td></td><td class="authinfo" colspan="2">
<a class="authinfo" href="http://www.cs.cmu.edu/~seth/helpmefind.html">Suraj Sudhir</a>, <a class="authinfo" href="http://research.microsoft.com/~sumann/">Suman Nath</a>, and <a class="authinfo" href="http://www.cs.cmu.edu/~seth">Seth Copen Goldstein</a>.
In <em>11th International Conference on Field Programmable Logic and Applications</em>,
Aug 2001.
</td></tr>
<tr><td></td><td colspan="2"><a name="bibsudhir-fpl01"><pre class="invisible" id="bibtextsudhir-fpl01">@inproceedings{sudhir-fpl01,
  author = {Sudhir, Suraj and Nath, Suman and Goldstein, Seth Copen},
  title = {Configuration Caching and Swapping},
  year = {2001},
  booktitle = {11th International Conference on Field Programmable
     Logic and Applications},
  address = {Belfast, Northern Ireland},
  month = {Aug},
  keywords = {Reconfigurable Computing},
  url = {http://www.cs.cmu.edu/~seth/papers/sudhir-fpl01.pdf},
}
</pre></a></td></tr>
<tr><td></td><td class="entry"><a name="cadambi-fpl01"></a><a name="topcadambi-fpl01">
</a><a class="title" href="http://www.cs.cmu.edu/~seth/papers/cadambi-fpl01.html">Static Profile-driven Compilation for FPGAs</a></td><td class="links" nowrap=""><a class="pdf" href="http://www.cs.cmu.edu/~seth/papers/cadambi-fpl01.pdf">pdf</a> <a class="bib" href="javascript:togglebib('cadambi-fpl01')">bib</a> </td></tr><tr><td></td><td class="authinfo" colspan="2">
<a class="authinfo" href="http://www.nec-labs.com/~cadambi/">Srihari Cadambi</a> and <a class="authinfo" href="http://www.cs.cmu.edu/~seth">Seth Copen Goldstein</a>.
In <em>Proceedings of the 11th International Conference on Field-Programmable Logic and Applications</em>,
Aug 2001.
</td></tr>
<tr><td></td><td colspan="2"><a name="bibcadambi-fpl01"><pre class="invisible" id="bibtextcadambi-fpl01">@inproceedings{cadambi-fpl01,
  title = {Static Profile-driven Compilation for FPGAs},
  url = {http://www.cs.cmu.edu/~seth/papers/cadambi-fpl01.pdf},
  booktitle = {Proceedings of the 11th International Conference on
     Field-Programmable Logic and Applications},
  author = {Cadambi, Srihari and Goldstein, Seth Copen},
  address = {Belfast, Northern Ireland},
  year = {2001},
  month = {Aug},
  keywords = {CAD,Reconfigurable Computing},
}
</pre></a></td></tr>
<tr><td></td><td class="entry"><a name="goldstein-isca01"></a><a name="topgoldstein-isca01">
</a><a class="title" href="http://www.cs.cmu.edu/~seth/papers/goldstein-isca01.html">NanoFabrics: Spatial Computing Using Molecular Electronics</a></td><td class="links" nowrap=""><a class="pdf" href="http://www.cs.cmu.edu/~seth/papers/goldstein-isca01.pdf">pdf</a> <a class="bib" href="javascript:togglebib('goldstein-isca01')">bib</a> <a class="abs" href="javascript:toggleabs('goldstein-isca01')">abstract</a> </td></tr><tr><td></td><td class="authinfo" colspan="2">
<a class="authinfo" href="http://www.cs.cmu.edu/~seth">Seth Copen Goldstein</a> and <a class="authinfo" href="http://research.microsoft.com/users/mbudiu/">Mihai Budiu</a>.
In <em>Proceedings of the 28th International Symposium on Computer Architecture (ISCA)</em>,
pages 178–189, Jul 2001.
</td></tr>
<tr><td></td><td colspan="2"><div class="invisible" id="abstextgoldstein-isca01"><table><tr><td class="hide"><a href="javascript:toggleabs('goldstein-isca01')">hide<br/>Abstract</a></td><td><p class="abs">The continuation of the remarkable exponential increases in processing power over the recent past faces imminent challenges due in part to the physics of deep-submicron CMOS devices and the costs of both chip masks and future fabrication plants. A promising solution to these problems is offered by an alternative to CMOS-based computing, chemically assembled electronic nanotechnology (CAEN). In this paper we outline how CAEN based computing can become a reality. We briefly describe recent work in CAEN and how CAEN will affect computer architecture. We show how the inherently reconfigurable natures of CAEN devices can be exploited to provide high-density chips with defect tolerance which will significantly reduce the cost of manufacturing. After developing the basic building blocks of a CAEN based computing devices we present some preliminary results which indicate that CAEN based computing devices can meet or exceed the performance of CMOS based devices.</p></td></tr></table></div></td></tr><tr><td></td><td colspan="2"><a name="bibgoldstein-isca01"><pre class="invisible" id="bibtextgoldstein-isca01">@inproceedings{goldstein-isca01,
  author = {Goldstein, Seth Copen and Budiu, Mihai},
  title = {{NanoFabrics}: Spatial Computing Using Molecular
     Electronics},
  booktitle = {Proceedings of the 28th International Symposium on
     Computer Architecture (ISCA)},
  month = {Jul},
  address = {{G\"{o}teborg, Sweden}},
  year = {2001},
  pages = {178--189},
  abstract = {The continuation of the remarkable exponential increases
     in processing power over the recent past faces imminent
     challenges due in part to the physics of deep-submicron CMOS
     devices and the costs of both chip masks and future fabrication
     plants. A promising solution to these problems is offered by an
     alternative to CMOS-based computing, chemically assembled
     electronic nanotechnology (CAEN). In this paper we outline how
     CAEN based computing can become a reality. We briefly describe
     recent work in CAEN and how CAEN will affect computer
     architecture. We show how the inherently reconfigurable natures
     of CAEN devices can be exploited to provide high-density chips
     with defect tolerance which will significantly reduce the cost of
     manufacturing. After developing the basic building blocks of a
     CAEN based computing devices we present some preliminary results
     which indicate that CAEN based computing devices can meet or
     exceed the performance of CMOS based devices.},
  url = {http://www.cs.cmu.edu/~seth/papers/goldstein-isca01.pdf},
  keywords = {Spatial Computing, Reconfigurable Computing,Phoenix,
     Electronic Nanotechnology},
}
</pre></a></td></tr>
<tr><td></td><td class="entry"><a name="goldstein-wvlsi01"></a><a name="topgoldstein-wvlsi01">
</a><a class="title" href="http://www.cs.cmu.edu/~seth/papers/goldstein-wvlsi01.html">Electronic Nanotechnology and Reconfigurable Computing</a></td><td class="links" nowrap=""><a class="pdf" href="http://www.cs.cmu.edu/~seth/papers/goldstein-wvlsi01.pdf">pdf</a> <a class="bib" href="javascript:togglebib('goldstein-wvlsi01')">bib</a> </td></tr><tr><td></td><td class="authinfo" colspan="2">
<a class="authinfo" href="http://www.cs.cmu.edu/~seth">Seth Copen Goldstein</a>.
In <em>Proceedings of the IEEE Computer Society Workshop VLSI 2001</em>,
pages 10, Apr 2001.
</td></tr>
<tr><td></td><td colspan="2"><a name="bibgoldstein-wvlsi01"><pre class="invisible" id="bibtextgoldstein-wvlsi01">@inproceedings{goldstein-wvlsi01,
  title = {Electronic Nanotechnology and Reconfigurable Computing},
  url = {http://www.cs.cmu.edu/~seth/papers/goldstein-wvlsi01.pdf},
  booktitle = {Proceedings of the IEEE Computer Society Workshop VLSI
     2001},
  author = {Goldstein, Seth Copen},
  year = {2001},
  pages = {10},
  month = {Apr},
  keywords = {Electronic Nanotechnology,Fault and Defect
     Tolerance,Reconfigurable Computing},
}
</pre></a></td></tr>
<tr><td></td><td class="entry"><a name="goldstein-foresight01"></a><a name="topgoldstein-foresight01">
</a><a class="title" href="http://www.cs.cmu.edu/~seth/papers/goldstein-foresight01.html">MolSpice: Designing Molecular Logic Circuits</a></td><td class="links" nowrap=""><a class="pdf" href="http://www.cs.cmu.edu/~seth/papers/goldstein-foresight01.pdf">pdf</a> <a class="bib" href="javascript:togglebib('goldstein-foresight01')">bib</a> </td></tr><tr><td></td><td class="authinfo" colspan="2">
<a class="authinfo" href="http://www.cs.cmu.edu/~seth">Seth Copen Goldstein</a>, <a class="authinfo" href="http://www.mitre.org/tech/nanotech/ourwork/staff.html">James Ellenbogen</a>, <a class="authinfo" href="http://www.cs.cmu.edu/~seth/helpmefind.html">David Almassiam</a>, <a class="authinfo" href="http://www.cs.cmu.edu/~seth/helpmefind.html">Matt Brown</a>, <a class="authinfo" href="http://www.cs.cmu.edu/~seth/helpmefind.html">Mark Cannarsa</a>, <a class="authinfo" href="http://www.cs.cmu.edu/~seth/helpmefind.html">Jesse Klein</a>, <a class="authinfo" href="http://www.cs.cmu.edu/~seth/helpmefind.html">Schuyler Schell</a>, <a class="authinfo" href="http://www.cis.upenn.edu/~geoffw/research/index.html">Geoff Washburn</a>, and <a class="authinfo" href="http://www.cs.cmu.edu/~seth/helpmefind.html">Matthew M Ziegler</a>.
In <em>Ninth Foresight Conference on Molecular Nanotechnology</em>,
Nov 2001.
</td></tr>
<tr><td></td><td colspan="2"><a name="bibgoldstein-foresight01"><pre class="invisible" id="bibtextgoldstein-foresight01">@inproceedings{goldstein-foresight01,
  author = {Goldstein, Seth Copen and Ellenbogen, James and Almassiam,
     David and Brown, Matt and Cannarsa, Mark and Klein, Jesse and
     Schell, Schuyler and Washburn, Geoff and Ziegler, Matthew M},
  title = {MolSpice: Designing Molecular Logic Circuits},
  booktitle = {Ninth Foresight Conference on Molecular
     Nanotechnology},
  url = {http://www.cs.cmu.edu/~seth/papers/goldstein-foresight01.pdf},
  year = {2001},
  month = {Nov},
  address = {Santa Clara, CA},
  keywords = {Electronic Nanotechnology, Molecular Electronics, CAD},
}
</pre></a></td></tr>
<tr><td class="year">2000</td><td class="entry"><a name="cadambi-iccd00"></a><a name="topcadambi-iccd00">
</a><a class="title" href="http://www.cs.cmu.edu/~seth/papers/cadambi-iccd00.html">Efficient Place and Route for Pipeline Reconfigurable Architectures</a></td><td class="links" nowrap=""><a class="pdf" href="http://www.cs.cmu.edu/~seth/papers/cadambi-iccd00.pdf">pdf</a> <a class="bib" href="javascript:togglebib('cadambi-iccd00')">bib</a> </td></tr><tr><td></td><td class="authinfo" colspan="2">
<a class="authinfo" href="http://www.nec-labs.com/~cadambi/">Srihari Cadambi</a> and <a class="authinfo" href="http://www.cs.cmu.edu/~seth">Seth Copen Goldstein</a>.
In <em>ICCD  2000</em>,
Sep 2000.
</td></tr>
<tr><td></td><td colspan="2"><a name="bibcadambi-iccd00"><pre class="invisible" id="bibtextcadambi-iccd00">@inproceedings{cadambi-iccd00,
  title = {Efficient Place and Route for Pipeline Reconfigurable
     Architectures},
  url = {http://www.cs.cmu.edu/~seth/papers/cadambi-iccd00.pdf},
  booktitle = {ICCD  2000},
  author = {Cadambi, Srihari and Goldstein, Seth Copen},
  address = {Austin, TX},
  year = {2000},
  month = {Sep},
  keywords = {CAD,Place and Route},
}
</pre></a></td></tr>
<tr><td></td><td class="entry"><a name="budiu-europar00"></a><a name="topbudiu-europar00">
</a><a class="title" href="http://www.cs.cmu.edu/~seth/papers/budiu-europar00.html">BitValue Inference: Detecting and Exploiting Narrow Bitwidth Computations</a></td><td class="links" nowrap=""><a class="pdf" href="http://www.cs.cmu.edu/~seth/papers/budiu-europar00.pdf">pdf</a> <a class="bib" href="javascript:togglebib('budiu-europar00')">bib</a> <a class="abs" href="javascript:toggleabs('budiu-europar00')">abstract</a> </td></tr><tr><td></td><td class="authinfo" colspan="2">
<a class="authinfo" href="http://research.microsoft.com/users/mbudiu/">Mihai Budiu</a>, <a class="authinfo" href="http://kona.ee.pitt.edu/sakr/">Majd Sakr</a>, <a class="authinfo" href="http://www.cs.cmu.edu/~seth/helpmefind.html">Kevin Walker</a>, and <a class="authinfo" href="http://www.cs.cmu.edu/~seth">Seth Copen Goldstein</a>.
In <em>Proceedings of the 2000 Europar Conference</em>,
volume 1900, pages 969–979, Aug 2000.
Also appeared as CMU CS Technical Report, CMU-CS-00-141, October 2000..
</td></tr>
<tr><td></td><td colspan="2"><div class="invisible" id="abstextbudiu-europar00"><table><tr><td class="hide"><a href="javascript:toggleabs('budiu-europar00')">hide<br/>Abstract</a></td><td><p class="abs">We present a compiler algorithm called BitValue, which can discover both unused and constant bits in dusty-deck C programs. BitValue uses forward and backward dataflow analyses, generalizing constant-folding and dead-code detection at the bit-level. This algorithm enables compiler optimizations which target special processor architectures for computing on non-standard bitwidths. Using this algorithm we show that up to 31% of the computed bytes are thrown away (for programs from SpecINT95 and Mediabench). A compiler for reconfigurable hardware uses this algorithm to achieve substantial reductions (up to 20-fold) in the size of the synthesized circuits.</p></td></tr></table></div></td></tr><tr><td></td><td colspan="2"><a name="bibbudiu-europar00"><pre class="invisible" id="bibtextbudiu-europar00">@inproceedings{budiu-europar00,
  title = {{BitValue} Inference: Detecting and Exploiting Narrow
     Bitwidth Computations},
  author = {Budiu, Mihai and Sakr, Majd and Walker, Kevin and
     Goldstein, Seth Copen},
  booktitle = {Proceedings of the 2000 Europar Conference},
  year = {2000},
  volume = {1900},
  pages = {969--979},
  month = {Aug},
  issn = {0302-9743},
  series = {Lecture Notes in Computer Science},
  publisher = {Springer Verlag},
  address = {Munich, Germany},
  url = {http://www.cs.cmu.edu/~seth/papers/budiu-europar00.pdf},
  also = {CMU CS Technical Report, CMU-CS-00-141, October 2000.},
  abstract = {We present a compiler algorithm called BitValue, which
     can discover both unused and constant bits in dusty-deck C
     programs. BitValue uses forward and backward dataflow analyses,
     generalizing constant-folding and dead-code detection at the
     bit-level. This algorithm enables compiler optimizations which
     target special processor architectures for computing on
     non-standard bitwidths. Using this algorithm we show that up to
     31\% of the computed bytes are thrown away (for programs from
     SpecINT95 and Mediabench). A compiler for reconfigurable hardware
     uses this algorithm to achieve substantial reductions (up to
     20-fold) in the size of the synthesized circuits.},
  keywords = {Spatial Computing,Reconfigurable
     Computing,Phoenix,PipeRench,CAD},
}
</pre></a></td></tr>
<tr><td></td><td class="entry"><a name="budiu-tr00"></a><a name="topbudiu-tr00">
</a><a class="title" href="http://www.cs.cmu.edu/~seth/papers/budiu-tr00.html">BitValue Inference: Detecting and Exploiting Narrow Bitwidth Computations</a></td><td class="links" nowrap=""><a class="pdf" href="http://www.cs.cmu.edu/~seth/papers/budiu-tr00.pdf">pdf</a> <a class="bib" href="javascript:togglebib('budiu-tr00')">bib</a> </td></tr><tr><td></td><td class="authinfo" colspan="2">
<a class="authinfo" href="http://research.microsoft.com/users/mbudiu/">Mihai Budiu</a> and <a class="authinfo" href="http://www.cs.cmu.edu/~seth">Seth Copen Goldstein</a>.
Carnegie Mellon University Technical Report,
Jun 2000.
See <a href="#budiu-europar00">budiu-europar00</a>.
</td></tr>
<tr><td></td><td colspan="2"><a name="bibbudiu-tr00"><pre class="invisible" id="bibtextbudiu-tr00">@techreport{budiu-tr00,
  title = {BitValue Inference: Detecting and Exploiting Narrow
     Bitwidth Computations},
  url = {http://www.cs.cmu.edu/~seth/papers/budiu-tr00.pdf},
  booktitle = {CMU CS Technical Report, CMU-CS-00-141},
  author = {Budiu, Mihai and Goldstein, Seth Copen},
  institution = {Carnegie Mellon University},
  year = {2000},
  month = {Jun},
  see = {budiu-europar00},
  keywords = {CAD,Compilers:CASH,Reconfigurable Computing},
}
</pre></a></td></tr>
<tr><td></td><td class="entry"><a name="KSS00"></a><a name="topKSS00">
</a><a class="title" href="http://www.cs.cmu.edu/~seth/papers/KSS00.html">Fault Tolerance in Run-time Reconfigurable Architectures</a></td><td class="links" nowrap=""> <a class="bib" href="javascript:togglebib('KSS00')">bib</a> </td></tr><tr><td></td><td class="authinfo" colspan="2">
<a class="authinfo" href="http://www.cs.cmu.edu/~seth/helpmefind.html">Peter M. Kamarchik</a>, <a class="authinfo" href="http://www.cs.cmu.edu/~seth/helpmefind.html">Steven Sinha</a>, and <a class="authinfo" href="http://www.cs.cmu.edu/~seth">Seth Copen Goldstein</a>.
In <em>IEEE Symposium on FPGAs for Custom Computing Machines (FCCM  2000)</em>,
Apr 2000.
</td></tr>
<tr><td></td><td colspan="2"><a name="bibKSS00"><pre class="invisible" id="bibtextKSS00">@inproceedings{KSS00,
  author = {Kamarchik, Peter M. and Sinha, Steven and Goldstein, Seth
     Copen},
  title = {Fault Tolerance in Run-time Reconfigurable Architectures},
  booktitle = {IEEE Symposium on FPGAs for Custom Computing Machines
     (FCCM  2000)},
  year = {2000},
  month = {Apr},
  address = {Napa, CA},
  keywords = {PipeRench, Fault and Defect Tolerance},
}
</pre></a></td></tr>
<tr><td></td><td class="entry"><a name="schmit-jvlsi00"></a><a name="topschmit-jvlsi00">
</a><a class="title" href="http://www.cs.cmu.edu/~seth/papers/schmit-jvlsi00.html">Pipeline Reconfigurable FPGAs</a></td><td class="links" nowrap=""><a class="pdf" href="http://www.cs.cmu.edu/~seth/papers/schmit-jvlsi00.pdf">pdf</a> <a class="bib" href="javascript:togglebib('schmit-jvlsi00')">bib</a> <a class="abs" href="javascript:toggleabs('schmit-jvlsi00')">abstract</a> </td></tr><tr><td></td><td class="authinfo" colspan="2">
<a class="authinfo" href="http://www.cs.cmu.edu/~seth/helpmefind.html">Herman Schmit</a>, <a class="authinfo" href="http://www.nec-labs.com/~cadambi/">Srihari Cadambi</a>, <a class="authinfo" href="http://www.cs.cmu.edu/~seth/helpmefind.html">Matthew Moe</a>, and <a class="authinfo" href="http://www.cs.cmu.edu/~seth">Seth Copen Goldstein</a>.
<em>Journal of VLSI Signal Processing Systems</em>,
33(4):70–77, Apr 2000.
Also appeared as chapter in Field-Programmable Custom Computing Technology: Architecture, Tools, and Applications.
</td></tr>
<tr><td></td><td colspan="2"><div class="invisible" id="abstextschmit-jvlsi00"><table><tr><td class="hide"><a href="javascript:toggleabs('schmit-jvlsi00')">hide<br/>Abstract</a></td><td><p class="abs">While reconfigurable computing promises to deliver incomparable performance, it is still a marginal technology due to the high cost of developing and upgrading applications. Hardware virtualization can be used to significantly reduce both these costs. In this paper we describe the benefits of hardware virtualization, and show how it can be achieved using the technique of pipeline reconfiguration. The result is PipeRench, an architecture that supports robust compilation and provides forward compatibility. Our preliminary performance analysis on PipeRench predicts that it will outperform commercial FPGAs and DSPs in both overall performance and in performance normalized for silicon area over a broad range of problem sizes.</p></td></tr></table></div></td></tr><tr><td></td><td colspan="2"><a name="bibschmit-jvlsi00"><pre class="invisible" id="bibtextschmit-jvlsi00">@article{schmit-jvlsi00,
  author = {Schmit, Herman and Cadambi, Srihari and Moe, Matthew and
     Goldstein, Seth Copen},
  title = {Pipeline Reconfigurable FPGAs},
  journal = {Journal of VLSI Signal Processing Systems},
  volume = {33},
  month = {Apr},
  year = {2000},
  pages = {70-77},
  abstract = {While reconfigurable computing promises to deliver
     incomparable performance, it is still a marginal technology due
     to the high cost of developing and upgrading applications.
     Hardware virtualization can be used to significantly reduce both
     these costs. In this paper we describe the benefits of hardware
     virtualization, and show how it can be achieved using the
     technique of pipeline reconfiguration. The result is PipeRench,
     an architecture that supports robust compilation and provides
     forward compatibility. Our preliminary performance analysis on
     PipeRench predicts that it will outperform commercial FPGAs and
     DSPs in both overall performance and in performance normalized
     for silicon area over a broad range of problem sizes.},
  number = {4},
  url = {http://www.cs.cmu.edu/~seth/papers/schmit-jvlsi00.pdf},
  doi = {},
  also = {chapter in Field-Programmable Custom Computing Technology:
     Architecture, Tools, and Applications},
  keywords = {PipeRench,Reconfigurable Computing},
}
</pre></a></td></tr>
<tr><td></td><td class="entry"><a name="goldstein-ieee00"></a><a name="topgoldstein-ieee00">
</a><a class="title" href="http://www.cs.cmu.edu/~seth/papers/goldstein-ieee00.html">PipeRench: A Reconfigurable Architecture and Compiler</a></td><td class="links" nowrap=""><a class="pdf" href="http://www.cs.cmu.edu/~seth/papers/goldstein-ieee00.pdf">pdf</a> <a class="bib" href="javascript:togglebib('goldstein-ieee00')">bib</a> <a class="abs" href="javascript:toggleabs('goldstein-ieee00')">abstract</a> </td></tr><tr><td></td><td class="authinfo" colspan="2">
<a class="authinfo" href="http://www.cs.cmu.edu/~seth">Seth Copen Goldstein</a>, <a class="authinfo" href="http://www.cs.cmu.edu/~seth/helpmefind.html">Herman Schmit</a>, <a class="authinfo" href="http://research.microsoft.com/users/mbudiu/">Mihai Budiu</a>, <a class="authinfo" href="http://www.nec-labs.com/~cadambi/">Srihari Cadambi</a>, <a class="authinfo" href="http://www.cs.cmu.edu/~seth/helpmefind.html">Matthew Moe</a>, and <a class="authinfo" href="http://www.cs.cmu.edu/~seth/helpmefind.html">R. Reed Taylor</a>.
<em>IEEE Computer</em>,
33(4):70–77, Apr 2000.
</td></tr>
<tr><td></td><td colspan="2"><div class="invisible" id="abstextgoldstein-ieee00"><table><tr><td class="hide"><a href="javascript:toggleabs('goldstein-ieee00')">hide<br/>Abstract</a></td><td><p class="abs">With the proliferation of highly specialized embedded computer systems has come a diversification of workloads for computing devices. General-purpose processors are struggling to efficiently meet these applications’ disparate needs, and custom hardware is rarely feasible. According to the authors, reconfigurable computing, which combines the flexibility of general-purpose processors with the efficiency of custom hardware, can provide the alternative. PipeRench and its associated compiler comprise the authors’ new architecture for reconfigurable computing. Combined with a traditional digital signal processor, microcontroller or general-purpose processor, PipeRench can support a system’s various computing needs without requiring custom hardware. The authors describe the PipeRench architecture and how it solves some of the pre-existing problems with FPGA architectures, such as logic granularity, configuration time, forward compatibility, hard constraints and compilation time.</p></td></tr></table></div></td></tr><tr><td></td><td colspan="2"><a name="bibgoldstein-ieee00"><pre class="invisible" id="bibtextgoldstein-ieee00">@article{goldstein-ieee00,
  author = {Goldstein, Seth Copen and Schmit, Herman and Budiu, Mihai
     and Cadambi, Srihari and Moe, Matthew and Taylor, R. Reed},
  title = {{PipeRench}: A Reconfigurable Architecture and Compiler},
  journal = {IEEE Computer},
  year = {2000},
  volume = {33},
  number = {4},
  month = {Apr},
  pages = {70--77},
  url = {http://www.cs.cmu.edu/~seth/papers/goldstein-ieee00.pdf},
  abstract = {With the proliferation of highly specialized embedded
     computer systems has come a diversification of workloads for
     computing devices. General-purpose processors are struggling to
     efficiently meet these applications' disparate needs, and custom
     hardware is rarely feasible. According to the authors,
     reconfigurable computing, which combines the flexibility of
     general-purpose processors with the efficiency of custom
     hardware, can provide the alternative. PipeRench and its
     associated compiler comprise the authors' new architecture for
     reconfigurable computing. Combined with a traditional digital
     signal processor, microcontroller or general-purpose processor,
     PipeRench can support a system's various computing needs without
     requiring custom hardware. The authors describe the PipeRench
     architecture and how it solves some of the pre-existing problems
     with FPGA architectures, such as logic granularity, configuration
     time, forward compatibility, hard constraints and compilation
     time.},
  keywords = {Reconfigurable Computing,PipeRench},
}
</pre></a></td></tr>
<tr><td></td><td class="entry"><a name="sinha-fccm00"></a><a name="topsinha-fccm00">
</a><a class="title" href="http://www.cs.cmu.edu/~seth/papers/sinha-fccm00.html">Tunable Fault Tolerance for Runtime Reconfigurable Architectures</a></td><td class="links" nowrap=""><a class="pdf" href="http://www.cs.cmu.edu/~seth/papers/sinha-fccm00.pdf">pdf</a> <a class="bib" href="javascript:togglebib('sinha-fccm00')">bib</a> <a class="abs" href="javascript:toggleabs('sinha-fccm00')">abstract</a> </td></tr><tr><td></td><td class="authinfo" colspan="2">
<a class="authinfo" href="http://www.cs.cmu.edu/~seth/helpmefind.html">Steven K. Sinha</a>, <a class="authinfo" href="http://www.cs.cmu.edu/~seth/helpmefind.html">Peter M. Kamarchik</a>, and <a class="authinfo" href="http://www.cs.cmu.edu/~seth">Seth Copen Goldstein</a>.
In <em>8th IEEE Symposium on Field-Programmable Custom Computing Machines (FCCM 2000)</em>,
pages 185–192, Apr 2000.
</td></tr>
<tr><td></td><td colspan="2"><div class="invisible" id="abstextsinha-fccm00"><table><tr><td class="hide"><a href="javascript:toggleabs('sinha-fccm00')">hide<br/>Abstract</a></td><td><p class="abs">Fault tolerance is becoming an increasingly important issue, especially in mission-critical applications where data integrity is a paramount concern. Performance, however, remains a large driving force in the market place. Runtime reconfigurable hardware architectures have the power to balance fault tolerance with performance, allowing the amount of fault tolerance to be tuned at run-time. This paper describes a new built-in self-test designed to run on, and take advantage of, runtime reconfigurable architectures using the PipeRench architecture as a model. In addition, this paper introduces a new metric by which a user can set the desired fault tolerance of a runtime reconfigurable device</p></td></tr></table></div></td></tr><tr><td></td><td colspan="2"><a name="bibsinha-fccm00"><pre class="invisible" id="bibtextsinha-fccm00">@inproceedings{sinha-fccm00,
  title = {Tunable Fault Tolerance for Runtime Reconfigurable
     Architectures},
  url = {http://www.cs.cmu.edu/~seth/papers/sinha-fccm00.pdf},
  booktitle = {8th IEEE Symposium on Field-Programmable Custom
     Computing Machines (FCCM 2000)},
  author = {Sinha, Steven K. and Kamarchik, Peter M. and Goldstein,
     Seth Copen},
  abstract = {Fault tolerance is becoming an increasingly important
     issue, especially in mission-critical applications where data
     integrity is a paramount concern. Performance, however, remains a
     large driving force in the market place. Runtime reconfigurable
     hardware architectures have the power to balance fault tolerance
     with performance, allowing the amount of fault tolerance to be
     tuned at run-time. This paper describes a new built-in self-test
     designed to run on, and take advantage of, runtime reconfigurable
     architectures using the PipeRench architecture as a model. In
     addition, this paper introduces a new metric by which a user can
     set the desired fault tolerance of a runtime reconfigurable
     device},
  doi = {10.1109/FPGA.2000.903405},
  year = {2000},
  pages = {185-192},
  isbn = {0-7695-0871-5},
  address = {Napa Valley, CA},
  month = {Apr},
  keywords = {Fault And Defect Tolerance,PipeRench,Reconfigurable
     Computing},
}
</pre></a></td></tr>
<tr><td></td><td class="entry"><a name="walker-fccm00"></a><a name="topwalker-fccm00">
</a><a class="title" href="http://www.cs.cmu.edu/~seth/papers/walker-fccm00.html">Interfacing Reconfigurable Logic with a CPU</a></td><td class="links" nowrap=""><a class="pdf" href="http://www.cs.cmu.edu/~seth/papers/walker-fccm00.pdf">pdf</a> <a class="bib" href="javascript:togglebib('walker-fccm00')">bib</a> <a class="abs" href="javascript:toggleabs('walker-fccm00')">abstract</a> </td></tr><tr><td></td><td class="authinfo" colspan="2">
<a class="authinfo" href="http://www.cs.cmu.edu/~seth/helpmefind.html">Kevin Walker</a>, <a class="authinfo" href="http://research.microsoft.com/users/mbudiu/">Mihai Budiu</a>, and <a class="authinfo" href="http://www.cs.cmu.edu/~seth">Seth Copen Goldstein</a>.
In <em>2000 IEEE Symposium on Field-Programmable Custom Computing Machines</em>,
pages 317–318, 2000.
</td></tr>
<tr><td></td><td colspan="2"><div class="invisible" id="abstextwalker-fccm00"><table><tr><td class="hide"><a href="javascript:toggleabs('walker-fccm00')">hide<br/>Abstract</a></td><td><p class="abs">Reconfigurable computing devices have achieved substantial performance improvements over conventional processors on some computational kernels. These benefits derive from hardware customization which avoids the mismatch between the basic requirements of the algorithms and the architectures of the processors. A reconfigurable fabric alone is not sufficient for general-purpose computing since it can be ill-suited to executing entire programs due to space limitations, dataflow-centricity, and inefficiency at implementing some operations (e.g. floating-point arithmetic). These observations have led to the appearance of numerous designs which place some form of reconfigurable logic under the control of a general-purpose processor. The authors explore the ways in which a reconfigurable fabric can be interfaced with a general-purpose processor. While off-chip reconfigurable fabrics have proven to be quite effective at performing streaming, data-intensive computations, they require large streams of data to overcome the latency between the devices. We explore the design space for an on-chip fabric, i.e., a reconfigurable function unit (RFU). An RFU allows smaller portions of application to be mapped to the fabric in the form of custom instructions. Though the speedups achieved for stream based computations will in general be much larger than those for custom instructions, they are limited to a smaller class of applications. Custom instructions, however, can be found in a larger class of programs, and compiler techniques can automatically create them.</p></td></tr></table></div></td></tr><tr><td></td><td colspan="2"><a name="bibwalker-fccm00"><pre class="invisible" id="bibtextwalker-fccm00">@inproceedings{walker-fccm00,
  author = {Walker, Kevin and Budiu, Mihai and Goldstein, Seth Copen},
  title = {Interfacing Reconfigurable Logic with a {CPU}},
  booktitle = {2000 IEEE Symposium on Field-Programmable Custom
     Computing Machines},
  pages = {317--318},
  year = {2000},
  url = {http://www.cs.cmu.edu/~seth/papers/walker-fccm00.pdf},
  abstract = {Reconfigurable computing devices have achieved
     substantial performance improvements over conventional processors
     on some computational kernels. These benefits derive from
     hardware customization which avoids the mismatch between the
     basic requirements of the algorithms and the architectures of the
     processors. A reconfigurable fabric alone is not sufficient for
     general-purpose computing since it can be ill-suited to executing
     entire programs due to space limitations, dataflow-centricity,
     and inefficiency at implementing some operations (e.g.
     floating-point arithmetic). These observations have led to the
     appearance of numerous designs which place some form of
     reconfigurable logic under the control of a general-purpose
     processor. The authors explore the ways in which a reconfigurable
     fabric can be interfaced with a general-purpose processor. While
     off-chip reconfigurable fabrics have proven to be quite effective
     at performing streaming, data-intensive computations, they
     require large streams of data to overcome the latency between the
     devices. We explore the design space for an on-chip fabric, i.e.,
     a reconfigurable function unit (RFU). An RFU allows smaller
     portions of application to be mapped to the fabric in the form of
     custom instructions. Though the speedups achieved for stream
     based computations will in general be much larger than those for
     custom instructions, they are limited to a smaller class of
     applications. Custom instructions, however, can be found in a
     larger class of programs, and compiler techniques can
     automatically create them.},
  keywords = {Reconfigurable Computing},
}
</pre></a></td></tr>
<tr><td></td><td class="entry"><a name="schmit-fpcct00"></a><a name="topschmit-fpcct00">
</a><a class="title" href="http://www.cs.cmu.edu/~seth/papers/schmit-fpcct00.html">Pipeline Reconfigurable FPGAs</a></td><td class="links" nowrap=""><a class="pdf" href="http://www.cs.cmu.edu/~seth/papers/schmit-fpcct00.pdf">pdf</a> <a class="bib" href="javascript:togglebib('schmit-fpcct00')">bib</a> </td></tr><tr><td></td><td class="authinfo" colspan="2">
<a class="authinfo" href="http://www.cs.cmu.edu/~seth/helpmefind.html">Herman Schmit</a>, <a class="authinfo" href="http://www.cs.cmu.edu/~seth">Seth Copen Goldstein</a>, <a class="authinfo" href="http://www.nec-labs.com/~cadambi/">Srihari Cadambi</a>, and <a class="authinfo" href="http://www.cs.cmu.edu/~seth/helpmefind.html">Matthew Moe</a>.
In <em>Field-Programmable Custom Computing Technology: Architecture, Tools, and Applications</em>,
2000.
</td></tr>
<tr><td></td><td colspan="2"><a name="bibschmit-fpcct00"><pre class="invisible" id="bibtextschmit-fpcct00">@incollection{schmit-fpcct00,
  title = {Pipeline Reconfigurable FPGAs},
  url = {http://www.cs.cmu.edu/~seth/papers/schmit-fpcct00.pdf},
  booktitle = {Field-Programmable Custom Computing Technology:
     Architecture, Tools, and Applications},
  author = {Schmit, Herman and Goldstein, Seth Copen and Cadambi,
     Srihari and Moe, Matthew},
  year = {2000},
  editor = {Arnold, Jeffrey and Luk, Wayne and Pocek, Ken},
  publisher = {Kluwer Academic Publishers},
  isbn = {0-7923-7803-2},
  keywords = {PipeRench,Reconfigurable Computing},
}
</pre></a></td></tr>
<tr><td></td><td class="entry"><a name="goldstein-asplos00"></a><a name="topgoldstein-asplos00">
</a><a class="title" href="http://www.cs.cmu.edu/~seth/papers/goldstein-asplos00.html">NanoFabrics: Extending Moore's Law Beyond the CMOS Era</a></td><td class="links" nowrap=""><a class="pdf" href="http://www.cs.cmu.edu/~seth/papers/goldstein-asplos00.pdf">pdf</a> <a class="bib" href="javascript:togglebib('goldstein-asplos00')">bib</a> </td></tr><tr><td></td><td class="authinfo" colspan="2">
<a class="authinfo" href="http://www.cs.cmu.edu/~seth">Seth Copen Goldstein</a>.
In <em>The 10th International Conference on Architectural Support for Programming Languages and Operating Systems. (ASPLOS 'IX)</em>,
Nov 2000.
</td></tr>
<tr><td></td><td colspan="2"><a name="bibgoldstein-asplos00"><pre class="invisible" id="bibtextgoldstein-asplos00">@inproceedings{goldstein-asplos00,
  title = {NanoFabrics: Extending Moore's Law Beyond the CMOS Era},
  url = {http://www.cs.cmu.edu/~seth/papers/goldstein-asplos00.pdf},
  booktitle = {The 10th International Conference on Architectural
     Support for Programming Languages and Operating Systems. (ASPLOS
     'IX)},
  author = {Goldstein, Seth Copen},
  address = {Cambridge, MA},
  year = {2000},
  month = {Nov},
  keywords = {Electronic Nanotechnology,Fault and Defect
     Tolerance,Molecular Electronics,Reconfigurable Computing},
}
</pre></a></td></tr>
<tr><td class="year">1999</td><td class="entry"><a name="reed-ches99"></a><a name="topreed-ches99">
</a><a class="title" href="http://www.cs.cmu.edu/~seth/papers/reed-ches99.html">A High-Performance Flexible Architecture for Cryptography</a></td><td class="links" nowrap=""><a class="pdf" href="http://www.cs.cmu.edu/~seth/papers/reed-ches99.pdf">pdf</a> <a class="bib" href="javascript:togglebib('reed-ches99')">bib</a> <a class="abs" href="javascript:toggleabs('reed-ches99')">abstract</a> </td></tr><tr><td></td><td class="authinfo" colspan="2">
<a class="authinfo" href="http://www.cs.cmu.edu/~seth/helpmefind.html">R. Reed Taylor</a> and <a class="authinfo" href="http://www.cs.cmu.edu/~seth">Seth Copen Goldstein</a>.
In <em>Proceedings of the Workshop on Cryptographic Hardware and Embedded Systems 1999 (CHES99)</em>,
pages 231–245, Aug 1999.
</td></tr>
<tr><td></td><td colspan="2"><div class="invisible" id="abstextreed-ches99"><table><tr><td class="hide"><a href="javascript:toggleabs('reed-ches99')">hide<br/>Abstract</a></td><td><p class="abs">Cryptographic algorithms are more efficiently implemented in custom hardware than in software running on general-purpose processors. However, systems which use hardware implementations have significant drawbacks: they are unable to respond to flaws discovered in the implemented algorithm or to changes in standards. In this paper we show how reconfigurable computing offers high performance yet flexible solutions for cryptographic algorithms. We focus on PipeRench, a reconfigurable fabric that supports implementations which can yield better than custom-hardware performance and yet maintains all the flexibility of software based systems. PipeRench is a pipelined reconfigurable fabric which virtualizes hardware, enabling large circuits to be run on limited physical hardware. We present implementations for Crypton, IDEA, RC6, and Twofish on PipeRench and an extension of PipeRench, PipeRench+. We also describe how various proposed AES algorithms could be implemented on PipeRench. PipeRench achieves speedups of between 2x and 12x over conventional processors.</p></td></tr></table></div></td></tr><tr><td></td><td colspan="2"><a name="bibreed-ches99"><pre class="invisible" id="bibtextreed-ches99">@inproceedings{reed-ches99,
  author = {Taylor, R. Reed and Goldstein, Seth Copen},
  title = {A High-Performance Flexible Architecture for Cryptography},
  booktitle = {Proceedings of the Workshop on Cryptographic Hardware
     and Embedded Systems 1999 (CHES99)},
  address = {Worcester, MA},
  year = {1999},
  pages = {231-245},
  month = {Aug},
  abstract = {Cryptographic algorithms are more efficiently
     implemented in custom hardware than in software running on
     general-purpose processors. However, systems which use hardware
     implementations have significant drawbacks: they are unable to
     respond to flaws discovered in the implemented algorithm or to
     changes in standards. In this paper we show how reconfigurable
     computing offers high performance yet flexible solutions for
     cryptographic algorithms. We focus on PipeRench, a reconfigurable
     fabric that supports implementations which can yield better than
     custom-hardware performance and yet maintains all the flexibility
     of software based systems. PipeRench is a pipelined
     reconfigurable fabric which virtualizes hardware, enabling large
     circuits to be run on limited physical hardware. We present
     implementations for Crypton, IDEA, RC6, and Twofish on PipeRench
     and an extension of PipeRench, PipeRench+. We also describe how
     various proposed AES algorithms could be implemented on
     PipeRench. PipeRench achieves speedups of between 2x and 12x over
     conventional processors.},
  url = {http://www.cs.cmu.edu/~seth/papers/reed-ches99.pdf},
  keywords = {PipeRench,Reconfigurable Computing},
}
</pre></a></td></tr>
<tr><td></td><td class="entry"><a name="goldstein-isca99"></a><a name="topgoldstein-isca99">
</a><a class="title" href="http://www.cs.cmu.edu/~seth/papers/goldstein-isca99.html">PipeRench: a Coprocessor for Streaming Multimedia Acceleration</a></td><td class="links" nowrap=""><a class="pdf" href="http://www.cs.cmu.edu/~seth/papers/goldstein-isca99.pdf">pdf</a> <a class="bib" href="javascript:togglebib('goldstein-isca99')">bib</a> <a class="abs" href="javascript:toggleabs('goldstein-isca99')">abstract</a> </td></tr><tr><td></td><td class="authinfo" colspan="2">
<a class="authinfo" href="http://www.cs.cmu.edu/~seth">Seth Copen Goldstein</a>, <a class="authinfo" href="http://www.cs.cmu.edu/~seth/helpmefind.html">Herman Schmit</a>, <a class="authinfo" href="http://www.cs.cmu.edu/~seth/helpmefind.html">Matthew Moe</a>, <a class="authinfo" href="http://research.microsoft.com/users/mbudiu/">Mihai Budiu</a>, <a class="authinfo" href="http://www.nec-labs.com/~cadambi/">Srihari Cadambi</a>, <a class="authinfo" href="http://www.cs.cmu.edu/~seth/helpmefind.html">R. Reed Taylor</a>, and <a class="authinfo" href="http://www.cs.cmu.edu/~seth/helpmefind.html">Ronald Laufer</a>.
In <em>Proceedings of the 26th International Symposium on Computer Architecture (ISCA)</em>,
pages 28–39, May 1999.
</td></tr>
<tr><td></td><td colspan="2"><div class="invisible" id="abstextgoldstein-isca99"><table><tr><td class="hide"><a href="javascript:toggleabs('goldstein-isca99')">hide<br/>Abstract</a></td><td><p class="abs">Future computing workloads will emphasize an architecture’s ability to perform relatively simple calculations on massive quantities of mixed-width data. This paper describes a novel reconfigurable fabric architecture, PipeRench, optimized to accelerate these types of computations. PipeRench enables fast, robust compilers, supports forward compatibility, and virtualizes configurations, thus removing the fixed size constraint present in other fabrics. For the first time we explore how the bit-width of processing elements affects performance and show how the PipeRench architecture has been optimized to balance the needs of the compiler against the realities of silicon. Finally, we demonstrate extreme performance speedup on certain computing kernels (up to 190x versus a modern RISC processor), and analyze how this acceleration translates to application speedup.</p></td></tr></table></div></td></tr><tr><td></td><td colspan="2"><a name="bibgoldstein-isca99"><pre class="invisible" id="bibtextgoldstein-isca99">@inproceedings{goldstein-isca99,
  author = {Goldstein, Seth Copen and Schmit, Herman and Moe, Matthew
     and Budiu, Mihai and Cadambi, Srihari and Taylor, R. Reed and
     Laufer, Ronald},
  title = {{PipeRench}: a Coprocessor for Streaming Multimedia
     Acceleration},
  booktitle = {Proceedings of the 26th International Symposium on
     Computer Architecture (ISCA)},
  month = {May},
  year = {1999},
  url = {http://www.cs.cmu.edu/~seth/papers/goldstein-isca99.pdf},
  pages = {28--39},
  abstract = {Future computing workloads will emphasize an
     architecture's ability to perform relatively simple calculations
     on massive quantities of mixed-width data. This paper describes a
     novel reconfigurable fabric architecture, PipeRench, optimized to
     accelerate these types of computations. PipeRench enables fast,
     robust compilers, supports forward compatibility, and virtualizes
     configurations, thus removing the fixed size constraint present
     in other fabrics. For the first time we explore how the bit-width
     of processing elements affects performance and show how the
     PipeRench architecture has been optimized to balance the needs of
     the compiler against the realities of silicon. Finally, we
     demonstrate extreme performance speedup on certain computing
     kernels (up to 190x versus a modern RISC processor), and analyze
     how this acceleration translates to application speedup.},
  address = {Atlanta, GA},
  keywords = {Reconfigurable Computing,PipeRench},
}
</pre></a></td></tr>
<tr><td></td><td class="entry"><a name="cadambi-fccm99"></a><a name="topcadambi-fccm99">
</a><a class="title" href="http://www.cs.cmu.edu/~seth/papers/cadambi-fccm99.html">CPR: A Configuration Profiling Tool</a></td><td class="links" nowrap=""><a class="pdf" href="http://www.cs.cmu.edu/~seth/papers/cadambi-fccm99.pdf">pdf</a> <a class="bib" href="javascript:togglebib('cadambi-fccm99')">bib</a> </td></tr><tr><td></td><td class="authinfo" colspan="2">
<a class="authinfo" href="http://www.nec-labs.com/~cadambi/">Srihari Cadambi</a> and <a class="authinfo" href="http://www.cs.cmu.edu/~seth">Seth Copen Goldstein</a>.
In <em>7th Annual IEEE Symposium on Field-Programmable Custom Computing Machines (FCCM  1999)</em>,
pages 104, Apr 1999.
</td></tr>
<tr><td></td><td colspan="2"><a name="bibcadambi-fccm99"><pre class="invisible" id="bibtextcadambi-fccm99">@inproceedings{cadambi-fccm99,
  title = {CPR: A Configuration Profiling Tool},
  url = {http://www.cs.cmu.edu/~seth/papers/cadambi-fccm99.pdf},
  booktitle = {7th Annual IEEE Symposium on Field-Programmable Custom
     Computing Machines (FCCM  1999)},
  author = {Cadambi, Srihari and Goldstein, Seth Copen},
  year = {1999},
  pages = {104},
  address = {Napa Valley, CA},
  month = {Apr},
  keywords = {CAD,Reconfigurable Computing,Place And Route},
}
</pre></a></td></tr>
<tr><td></td><td class="entry"><a name="budiu-fpga99"></a><a name="topbudiu-fpga99">
</a><a class="title" href="http://www.cs.cmu.edu/~seth/papers/budiu-fpga99.html">Fast Compilation for Pipelined Reconfigurable Fabrics</a></td><td class="links" nowrap=""><a class="pdf" href="http://www.cs.cmu.edu/~seth/papers/budiu-fpga99.pdf">pdf</a> <a class="bib" href="javascript:togglebib('budiu-fpga99')">bib</a> <a class="abs" href="javascript:toggleabs('budiu-fpga99')">abstract</a> </td></tr><tr><td></td><td class="authinfo" colspan="2">
<a class="authinfo" href="http://research.microsoft.com/users/mbudiu/">Mihai Budiu</a> and <a class="authinfo" href="http://www.cs.cmu.edu/~seth">Seth Copen Goldstein</a>.
In <em>Proceedings of the 1999 ACM/SIGDA Seventh International Symposium on Field Programmable Gate Arrays (FPGA  1999)</em>,
pages 195–205, Feb 1999.
</td></tr>
<tr><td></td><td colspan="2"><div class="invisible" id="abstextbudiu-fpga99"><table><tr><td class="hide"><a href="javascript:toggleabs('budiu-fpga99')">hide<br/>Abstract</a></td><td><p class="abs">In this paper we describe a compiler which quickly synthesizes high quality pipelined datapaths for pipelined reconfigurable devices. The compiler uses the same internal representation to perform synthesis, module generation, optimization, and place and route. The core of the compiler is a linear time place and route algorithm more than two orders of magnitude faster than traditional CAD tools. The key behind our approach is that we never backtrack, rip-up, or re-route. Instead, the graph representing the computation is preprocessed to guarantee routability by inserting lazy noops. The preprocessing steps provides enough information to make a greedy strategy feasible. The compilation speed is approximately 3000 bit-operations/second (on a PII/400Mhz) for a wide range of applications. The hardware utilization averages 60% on the target device, PipeRench.</p></td></tr></table></div></td></tr><tr><td></td><td colspan="2"><a name="bibbudiu-fpga99"><pre class="invisible" id="bibtextbudiu-fpga99">@inproceedings{budiu-fpga99,
  author = {Budiu, Mihai and Goldstein, Seth Copen},
  title = {Fast Compilation for Pipelined Reconfigurable Fabrics},
  booktitle = {Proceedings of the 1999 ACM/SIGDA Seventh International
     Symposium on Field Programmable Gate Arrays (FPGA  1999)},
  month = {Feb},
  year = {1999},
  pages = {195-205},
  url = {http://www.cs.cmu.edu/~seth/papers/budiu-fpga99.pdf},
  abstract = {In this paper we describe a compiler which quickly
     synthesizes high quality pipelined datapaths for pipelined
     reconfigurable devices. The compiler uses the same internal
     representation to perform synthesis, module generation,
     optimization, and place and route. The core of the compiler is a
     linear time place and route algorithm more than two orders of
     magnitude faster than traditional CAD tools. The key behind our
     approach is that we never backtrack, rip-up, or re-route.
     Instead, the graph representing the computation is preprocessed
     to guarantee routability by inserting lazy noops. The
     preprocessing steps provides enough information to make a greedy
     strategy feasible. The compilation speed is approximately 3000
     bit-operations/second (on a PII/400Mhz) for a wide range of
     applications. The hardware utilization averages 60\% on the
     target device, PipeRench.},
  keywords = {Reconfigurable Computing,PipeRench,Place and Route},
}
</pre></a></td></tr>
<tr><td class="year">1998</td><td class="entry"><a name="goldstein-ymw98"></a><a name="topgoldstein-ymw98">
</a><a class="title" href="http://www.cs.cmu.edu/~seth/papers/goldstein-ymw98.html">The Lazy Multithreaded Implementation Design Space</a></td><td class="links" nowrap=""> <a class="bib" href="javascript:togglebib('goldstein-ymw98')">bib</a> </td></tr><tr><td></td><td class="authinfo" colspan="2">
<a class="authinfo" href="http://www.cs.cmu.edu/~seth">Seth Copen Goldstein</a> and <a class="authinfo" href="http://www.cs.berkeley.edu/~culler/">David E. Culler</a>.
In <em>The Yale Multithreaded Workshop</em>,
Jun 1998.
</td></tr>
<tr><td></td><td colspan="2"><a name="bibgoldstein-ymw98"><pre class="invisible" id="bibtextgoldstein-ymw98">@inproceedings{goldstein-ymw98,
  title = {The Lazy Multithreaded Implementation Design Space},
  booktitle = {The Yale Multithreaded Workshop},
  author = {Goldstein, Seth Copen and Culler, David E.},
  address = {New Haven, CT},
  year = {1998},
  month = {Jun},
  keywords = {Lazy Threads,Parallel Computing},
}
</pre></a></td></tr>
<tr><td></td><td class="entry"><a name="blanton-ftc98"></a><a name="topblanton-ftc98">
</a><a class="title" href="http://www.cs.cmu.edu/~seth/papers/blanton-ftc98.html">Tunable Fault Tolernace via Test and Reconfiguration</a></td><td class="links" nowrap=""><a class="pdf" href="http://www.cs.cmu.edu/~seth/papers/blanton-ftc98.pdf">pdf</a> <a class="bib" href="javascript:togglebib('blanton-ftc98')">bib</a> </td></tr><tr><td></td><td class="authinfo" colspan="2">
<a class="authinfo" href="http://www.ece.cmu.edu/~blanton/">Shawn Blanton</a>, <a class="authinfo" href="http://www.cs.cmu.edu/~seth">Seth Copen Goldstein</a>, and <a class="authinfo" href="http://www.cs.cmu.edu/~seth/helpmefind.html">Herman Schmit</a>.
In <em>Digest of FastAbstracts of the 28th Annual International Symposium on Fault-Tolerant Computing</em>,
pages 9–10, Jun 1998.
</td></tr>
<tr><td></td><td colspan="2"><a name="bibblanton-ftc98"><pre class="invisible" id="bibtextblanton-ftc98">@inproceedings{blanton-ftc98,
  author = {Blanton, Shawn and Goldstein, Seth Copen and Schmit,
     Herman},
  title = {Tunable Fault Tolernace via Test and Reconfiguration},
  booktitle = {Digest of FastAbstracts of the 28th Annual
     International Symposium on Fault-Tolerant Computing},
  year = {1998},
  month = {Jun},
  pages = {9--10},
  keywords = {PipeRench, Fault and Defect Tolerance},
  url = {http://www.cs.cmu.edu/~seth/papers/blanton-ftc98.pdf},
}
</pre></a></td></tr>
<tr><td></td><td class="entry"><a name="moe-fccm98"></a><a name="topmoe-fccm98">
</a><a class="title" href="http://www.cs.cmu.edu/~seth/papers/moe-fccm98.html">Characterization and Parameterization of a Pipeline Reconfigurable FGPA</a></td><td class="links" nowrap=""><a class="pdf" href="http://www.cs.cmu.edu/~seth/papers/moe-fccm98.pdf">pdf</a> <a class="bib" href="javascript:togglebib('moe-fccm98')">bib</a> </td></tr><tr><td></td><td class="authinfo" colspan="2">
<a class="authinfo" href="http://www.cs.cmu.edu/~seth/helpmefind.html">Matthew Moe</a>, <a class="authinfo" href="http://www.cs.cmu.edu/~seth/helpmefind.html">Herman Schmit</a>, and <a class="authinfo" href="http://www.cs.cmu.edu/~seth">Seth Copen Goldstein</a>.
In <em>6th Annual IEEE Symposium on Field-Programmable Custom Computing Machines (FCCM  1998)</em>,
pages 294–295, Apr 1998.
</td></tr>
<tr><td></td><td colspan="2"><a name="bibmoe-fccm98"><pre class="invisible" id="bibtextmoe-fccm98">@inproceedings{moe-fccm98,
  author = {Moe, Matthew and Schmit, Herman and Goldstein, Seth
     Copen},
  title = {{Characterization and Parameterization of a Pipeline
     Reconfigurable {FGPA}}},
  booktitle = {6th Annual IEEE Symposium on Field-Programmable Custom
     Computing Machines (FCCM  1998)},
  month = {Apr},
  address = {Napa, CA},
  year = {1998},
  pages = {294--295},
  note = {poster session 3},
  keywords = {PipeRench, Reconfigurable Computing},
  url = {http://www.cs.cmu.edu/~seth/papers/moe-fccm98.pdf},
}
</pre></a></td></tr>
<tr><td></td><td class="entry"><a name="cadambi-fpga98"></a><a name="topcadambi-fpga98">
</a><a class="title" href="http://www.cs.cmu.edu/~seth/papers/cadambi-fpga98.html">Managing pipeline-reconfigurable FPGAs</a></td><td class="links" nowrap=""><a class="pdf" href="http://www.cs.cmu.edu/~seth/papers/cadambi-fpga98.pdf">pdf</a> <a class="bib" href="javascript:togglebib('cadambi-fpga98')">bib</a> <a class="abs" href="javascript:toggleabs('cadambi-fpga98')">abstract</a> </td></tr><tr><td></td><td class="authinfo" colspan="2">
<a class="authinfo" href="http://www.nec-labs.com/~cadambi/">Srihari Cadambi</a>, <a class="authinfo" href="http://www.cs.cmu.edu/~seth/helpmefind.html">J. Weener</a>, <a class="authinfo" href="http://www.cs.cmu.edu/~seth">Seth Copen Goldstein</a>, <a class="authinfo" href="http://www.cs.cmu.edu/~seth/helpmefind.html">Herman Schmit</a>, and <a class="authinfo" href="http://www.cs.cmu.edu/~seth/helpmefind.html">Donald E Thomas</a>.
In <em>Proceedings of the 1998 ACM/SIGDA Sixth International Symposium on Field Programmable Gate Arrays</em>,
pages 55–64, Feb 1998.
</td></tr>
<tr><td></td><td colspan="2"><div class="invisible" id="abstextcadambi-fpga98"><table><tr><td class="hide"><a href="javascript:toggleabs('cadambi-fpga98')">hide<br/>Abstract</a></td><td><p class="abs">While reconfigurable computing promises to deliver incomparable performance, it is still a marginal technology due to the high cost of developing and upgrading applications. Hardware virtualization can be used to significantly reduce both these costs. In this paper we describe the benefits of hardware virtualization, and show how it can be acheived using a combination of pipeline reconfiguration and run-time scheduling of both configuration streams and data streams. The result is PipeRench, an architecture that supports robust compilation and provides forward compatibility. Our preliminary performance analysis predicts that PipeRench will outperform commercial FPGAs and DSPs in both overall performance and in performance per mm<sup>2</sup>.</p></td></tr></table></div></td></tr><tr><td></td><td colspan="2"><a name="bibcadambi-fpga98"><pre class="invisible" id="bibtextcadambi-fpga98">@inproceedings{cadambi-fpga98,
  author = {Cadambi, Srihari and Weener, J. and Goldstein, Seth Copen
     and Schmit, Herman and Thomas, Donald E},
  title = {{Managing pipeline-reconfigurable FPGAs}},
  booktitle = {Proceedings of the 1998 ACM/SIGDA Sixth International
     Symposium on Field Programmable Gate Arrays},
  year = {1998},
  month = {Feb},
  pages = {55--64},
  address = {Monterey, CA},
  abstract = {While reconfigurable computing promises to deliver
     incomparable performance, it is still a marginal technology due
     to the high cost of developing and upgrading applications.
     Hardware virtualization can be used to significantly reduce both
     these costs. In this paper we describe the benefits of hardware
     virtualization, and show how it can be acheived using a
     combination of pipeline reconfiguration and run-time scheduling
     of both configuration streams and data streams. The result is
     PipeRench, an architecture that supports robust compilation and
     provides forward compatibility. Our preliminary performance
     analysis predicts that PipeRench will outperform commercial FPGAs
     and DSPs in both overall performance and in performance per
     mm$^2$.},
  keywords = {PipeRench, Reconfigurable Computing},
  url = {http://www.cs.cmu.edu/~seth/papers/cadambi-fpga98.pdf},
}
</pre></a></td></tr>
<tr><td class="year">1997</td><td class="entry"><a name="goldstein-phd97"></a><a name="topgoldstein-phd97">
</a><a class="title" href="http://www.cs.cmu.edu/~seth/papers/goldstein-phd97.html">Lazy Threads Compiler and Runtime Structures for Fine-Grained Parallel Programming</a></td><td class="links" nowrap=""><a class="pdf" href="http://www.cs.cmu.edu/~seth/papers/goldstein-phd97.pdf">pdf</a> <a class="bib" href="javascript:togglebib('goldstein-phd97')">bib</a> </td></tr><tr><td></td><td class="authinfo" colspan="2">
<a class="authinfo" href="http://www.cs.cmu.edu/~seth">Seth Copen Goldstein</a>.
PhD Thesis, University of California--Berkeley,
1997.
</td></tr>
<tr><td></td><td colspan="2"><a name="bibgoldstein-phd97"><pre class="invisible" id="bibtextgoldstein-phd97">@phdthesis{goldstein-phd97,
  title = {Lazy Threads Compiler and Runtime Structures for
     Fine-Grained Parallel Programming},
  url = {http://www.cs.cmu.edu/~seth/papers/goldstein-phd97.pdf},
  author = {Goldstein, Seth Copen},
  school = {University of California--Berkeley},
  year = {1997},
  address = {Berkeley, CA},
  keywords = {Lazy Threads,Parallel Computing,Split-C,Threaded
     Abstract Machine (TAM)},
}
</pre></a></td></tr>
<tr><td></td><td class="entry"><a name="ait-kaci-jlp97"></a><a name="topait-kaci-jlp97">
</a><a class="title" href="http://www.cs.cmu.edu/~seth/papers/ait-kaci-jlp97.html">Order-sorted feature theory unification</a></td><td class="links" nowrap=""><a class="pdf" href="http://www.cs.cmu.edu/~seth/papers/ait-kaci-jlp97.pdf">pdf</a> <a class="bib" href="javascript:togglebib('ait-kaci-jlp97')">bib</a> <a class="abs" href="javascript:toggleabs('ait-kaci-jlp97')">abstract</a> </td></tr><tr><td></td><td class="authinfo" colspan="2">
<a class="authinfo" href="http://koala.ilog.fr/wiki/bin/view/Main/HassanAitKaci">Ait-Kaci Hassan</a>, <a class="authinfo" href="http://swt.informatik.uni-freiburg.de/podelski">Andreas Podelski</a>, and <a class="authinfo" href="http://www.cs.cmu.edu/~seth">Seth Copen Goldstein</a>.
<em>The Journal of Logic Programming</em>,
30(2):99–124, Feb 1997.
Also appeared as Proceedings of the International Symposium on Logic Programming (ILPS), 1993 and as DEC Technical Report PRL-RR-32.
</td></tr>
<tr><td></td><td colspan="2"><div class="invisible" id="abstextait-kaci-jlp97"><table><tr><td class="hide"><a href="javascript:toggleabs('ait-kaci-jlp97')">hide<br/>Abstract</a></td><td><p class="abs">Order-sorted feature (OSF) terms provide an adequate representation for objects as flexible records. They are sorted, attributed, possibly nested structures, ordered thanks to a subsort ordering. Sorts definitions offer the functionality of classes imposing structural constraints on objects. These constraints involve variable sorting and equations among feature paths, including self-reference. Formally, sort definitions may be seen as axioms forming an OSF theory. OSF theory unification is the process of normalizing an OSF term taking into account sort definitions, enforcing structural constraints imposed by an OSF theory. It allows objects to inherit, and thus abide by, constraints from their classes. We propose a formal system that logically models record objects with (possibly recursive) class definitions accommodating multiple inheritance. We show that OSF theory unification is undecidable in general. However, we give a set of confluent normalization rules which is complete for detecting the inconsistency of an object with respect to an OSF theory. Furthermore, a subset consisting of all rules but one is confluent and terminating. This yields a practical complete normalization strategy, as well as an effective compilation scheme.</p></td></tr></table></div></td></tr><tr><td></td><td colspan="2"><a name="bibait-kaci-jlp97"><pre class="invisible" id="bibtextait-kaci-jlp97">@article{ait-kaci-jlp97,
  author = {Hassan, Ait-Kaci and Podelski, Andreas and Goldstein, Seth
     Copen},
  title = {Order-sorted feature theory unification},
  journal = {The Journal of Logic Programming},
  volume = {30},
  month = {Feb},
  year = {1997},
  abstract = {Order-sorted feature (OSF) terms provide an adequate
     representation for objects as flexible records. They are sorted,
     attributed, possibly nested structures, ordered thanks to a
     subsort ordering. Sorts definitions offer the functionality of
     classes imposing structural constraints on objects. These
     constraints involve variable sorting and equations among feature
     paths, including self-reference. Formally, sort definitions may
     be seen as axioms forming an OSF theory. OSF theory unification
     is the process of normalizing an OSF term taking into account
     sort definitions, enforcing structural constraints imposed by an
     OSF theory. It allows objects to inherit, and thus abide by,
     constraints from their classes. We propose a formal system that
     logically models record objects with (possibly recursive) class
     definitions accommodating multiple inheritance. We show that OSF
     theory unification is undecidable in general. However, we give a
     set of confluent normalization rules which is complete for
     detecting the inconsistency of an object with respect to an OSF
     theory. Furthermore, a subset consisting of all rules but one is
     confluent and terminating. This yields a practical complete
     normalization strategy, as well as an effective compilation
     scheme.},
  pages = {99--124},
  number = {2},
  url = {http://www.cs.cmu.edu/~seth/papers/ait-kaci-jlp97.pdf},
  doi = {doi:10.1016/Spring 200743-1066(96)00053-2},
  also = {Proceedings of the International Symposium on Logic
     Programming (ILPS), 1993 and as DEC Technical Report PRL-RR-32},
  keywords = {Logic Programming},
}
</pre></a></td></tr>
<tr><td class="year">1996</td><td class="entry"><a name="goldstein96-jpdc"></a><a name="topgoldstein96-jpdc">
</a><a class="title" href="http://www.cs.cmu.edu/~seth/papers/goldstein96-jpdc.html">Lazy threads: implementing a fast parallel call</a></td><td class="links" nowrap=""><a class="pdf" href="http://www.cs.cmu.edu/~seth/papers/goldstein96-jpdc.pdf">pdf</a> <a class="bib" href="javascript:togglebib('goldstein96-jpdc')">bib</a> <a class="abs" href="javascript:toggleabs('goldstein96-jpdc')">abstract</a> </td></tr><tr><td></td><td class="authinfo" colspan="2">
<a class="authinfo" href="http://www.cs.cmu.edu/~seth">Seth Copen Goldstein</a>, <a class="authinfo" href="http://www.cs.ucsb.edu/~schauser/">Klaus Erik Schauser</a>, and <a class="authinfo" href="http://www.cs.berkeley.edu/~culler/">David E. Culler</a>.
<em>Journal of Parallel and Distributed Computing</em>,
37(1):5–20, 1996.
</td></tr>
<tr><td></td><td colspan="2"><div class="invisible" id="abstextgoldstein96-jpdc"><table><tr><td class="hide"><a href="javascript:toggleabs('goldstein96-jpdc')">hide<br/>Abstract</a></td><td><p class="abs">In this paper, we describe lazy threads, a new approach for implementing multithreaded execution models on conventional machines. We show how they can implement a parallel call at nearly the efficiency of a sequential call. The central idea is to specialize the representation of a parallel call so that it can execute as a parallel-ready sequential call. This allows excess parallelism to degrade into sequential calls with the attendant efficient stack management and direct transfer of control and data, yet a call that truly needs to execute in parallel, gets its own thread of control. The efficiency of lazy threads is achieved through a careful attention to storage management and a code generation strategy that allows us to represent potential parallel work with no overhead.</p></td></tr></table></div></td></tr><tr><td></td><td colspan="2"><a name="bibgoldstein96-jpdc"><pre class="invisible" id="bibtextgoldstein96-jpdc">@article{goldstein96-jpdc,
  author = {Goldstein, Seth Copen and Schauser, Klaus Erik and Culler,
     David E.},
  title = {Lazy threads: implementing a fast parallel call},
  journal = {Journal of Parallel and Distributed Computing},
  volume = {37},
  number = {1},
  year = {1996},
  pages = {5--20},
  publisher = {Academic Press, Inc.},
  address = {Orlando, FL, USA},
  keywords = {Lazy Threads, Parallel Computing},
  url = {http://www.cs.cmu.edu/~seth/papers/goldstein96-jpdc.pdf},
  abstract = {In this paper, we describe lazy threads, a new approach
     for implementing multithreaded execution models on conventional
     machines. We show how they can implement a parallel call at
     nearly the efficiency of a sequential call. The central idea is
     to specialize the representation of a parallel call so that it
     can execute as a parallel-ready sequential call. This allows
     excess parallelism to degrade into sequential calls with the
     attendant efficient stack management and direct transfer of
     control and data, yet a call that truly needs to execute in
     parallel, gets its own thread of control. The efficiency of lazy
     threads is achieved through a careful attention to storage
     management and a code generation strategy that allows us to
     represent potential parallel work with no overhead.},
}
</pre></a></td></tr>
<tr><td class="year">1995</td><td class="entry"><a name="schauser-fplca95"></a><a name="topschauser-fplca95">
</a><a class="title" href="http://www.cs.cmu.edu/~seth/papers/schauser-fplca95.html">How Much Non-Strictness Do Lenient Programs Require?</a></td><td class="links" nowrap=""><a class="pdf" href="http://www.cs.cmu.edu/~seth/papers/schauser-fplca95.pdf">pdf</a> <a class="bib" href="javascript:togglebib('schauser-fplca95')">bib</a> </td></tr><tr><td></td><td class="authinfo" colspan="2">
<a class="authinfo" href="http://www.cs.ucsb.edu/~schauser/">Klaus Erik Schauser</a> and <a class="authinfo" href="http://www.cs.cmu.edu/~seth">Seth Copen Goldstein</a>.
In <em>Conference on Functional Programming Languages and Computer Architecture</em>,
Jun 1995.
</td></tr>
<tr><td></td><td colspan="2"><a name="bibschauser-fplca95"><pre class="invisible" id="bibtextschauser-fplca95">@inproceedings{schauser-fplca95,
  title = {How Much Non-Strictness Do Lenient Programs Require?},
  url = {http://www.cs.cmu.edu/~seth/papers/schauser-fplca95.pdf},
  booktitle = {Conference on Functional Programming Languages and
     Computer Architecture},
  author = {Schauser, Klaus Erik and Goldstein, Seth Copen},
  address = {La Jolla, CA},
  year = {1995},
  month = {Jun},
  keywords = {Functional Programming, Parallel Computing},
}
</pre></a></td></tr>
<tr><td></td><td class="entry"><a name="callahan-isca95"></a><a name="topcallahan-isca95">
</a><a class="title" href="http://www.cs.cmu.edu/~seth/papers/callahan-isca95.html">NIFDY: A Low Overhead, High Throughput Network Interface</a></td><td class="links" nowrap=""><a class="pdf" href="http://www.cs.cmu.edu/~seth/papers/callahan-isca95.pdf">pdf</a> <a class="bib" href="javascript:togglebib('callahan-isca95')">bib</a> </td></tr><tr><td></td><td class="authinfo" colspan="2">
<a class="authinfo" href="http://roquefort.crcl.cs.cmu.edu/~tcal/home.html">Timothy J Callahan</a> and <a class="authinfo" href="http://www.cs.cmu.edu/~seth">Seth Copen Goldstein</a>.
In <em>Proceedings of the 22nd International Symposium on Computer Architecture</em>,
Jun 1995.
</td></tr>
<tr><td></td><td colspan="2"><a name="bibcallahan-isca95"><pre class="invisible" id="bibtextcallahan-isca95">@inproceedings{callahan-isca95,
  title = {NIFDY: A Low Overhead, High Throughput Network Interface},
  url = {http://www.cs.cmu.edu/~seth/papers/callahan-isca95.pdf},
  booktitle = {Proceedings of the 22nd International Symposium on
     Computer Architecture},
  author = {Callahan, Timothy J and Goldstein, Seth Copen},
  address = {Santa Margherita Ligure, Italy},
  year = {1995},
  month = {Jun},
  keywords = {parallel Computing, NIFDY},
}
</pre></a></td></tr>
<tr><td></td><td class="entry"><a name="goldstein-lcr95"></a><a name="topgoldstein-lcr95">
</a><a class="title" href="http://www.cs.cmu.edu/~seth/papers/goldstein-lcr95.html">Enabling Primitives for Compiling Parallel Languages</a></td><td class="links" nowrap=""><a class="pdf" href="http://www.cs.cmu.edu/~seth/papers/goldstein-lcr95.pdf">pdf</a> <a class="bib" href="javascript:togglebib('goldstein-lcr95')">bib</a> </td></tr><tr><td></td><td class="authinfo" colspan="2">
<a class="authinfo" href="http://www.cs.cmu.edu/~seth">Seth Copen Goldstein</a>, <a class="authinfo" href="http://www.cs.berkeley.edu/~culler/">David E. Culler</a>, and <a class="authinfo" href="http://www.cs.ucsb.edu/~schauser/">Klaus Erik Schauser</a>.
In <em>Third Workshop on Languages, Compilers, and Run-Time Systems for Scalable Computers</em>,
May 1995.
</td></tr>
<tr><td></td><td colspan="2"><a name="bibgoldstein-lcr95"><pre class="invisible" id="bibtextgoldstein-lcr95">@inproceedings{goldstein-lcr95,
  title = {Enabling Primitives for Compiling Parallel Languages},
  url = {http://www.cs.cmu.edu/~seth/papers/goldstein-lcr95.pdf},
  booktitle = {Third Workshop on Languages, Compilers, and Run-Time
     Systems for Scalable Computers},
  author = {Goldstein, Seth Copen and Culler, David E. and Schauser,
     Klaus Erik},
  address = {Rochester, NY},
  year = {1995},
  month = {May},
  keywords = {Parallel Computing,Lazy Threads},
}
</pre></a></td></tr>
<tr><td></td><td class="entry"><a name="dusseau-tr92"></a><a name="topdusseau-tr92">
</a><a class="title" href="http://www.cs.cmu.edu/~seth/papers/dusseau-tr92.html">Introduction to Split-C</a></td><td class="links" nowrap=""><a class="pdf" href="http://www.cs.cmu.edu/~seth/papers/dusseau-tr92.pdf">pdf</a> <a class="bib" href="javascript:togglebib('dusseau-tr92')">bib</a> </td></tr><tr><td></td><td class="authinfo" colspan="2">
<a class="authinfo" href="http://www.cs.berkeley.edu/~culler/">David E. Culler</a>, <a class="authinfo" href="http://www.cs.wisc.edu/~dusseau/">Andrea Dusseau</a>, <a class="authinfo" href="http://www.cs.cmu.edu/~seth">Seth Copen Goldstein</a>, <a class="authinfo" href="http://www.cs.washington.edu/homes/arvind/">Arvind Krishnamurthy</a>, <a class="authinfo" href="http://www.crhc.uiuc.edu/~steve/">Steven Lumetta</a>, <a class="authinfo" href="http://www.voneicken.com/">Thorsten von Eicken</a>, and <a class="authinfo" href="http://www.cs.berkeley.edu/~yelick/">Katherine Yelick</a>.
University of California--Berkeley Technical Report,
Apr 1995.
</td></tr>
<tr><td></td><td colspan="2"><a name="bibdusseau-tr92"><pre class="invisible" id="bibtextdusseau-tr92">@techreport{dusseau-tr92,
  title = {Introduction to Split-C},
  url = {http://www.cs.cmu.edu/~seth/papers/dusseau-tr92.pdf},
  author = {Culler, David E. and Dusseau, Andrea and Goldstein, Seth
     Copen and Krishnamurthy, Arvind and Lumetta, Steven and
     von~Eicken, Thorsten and Yelick, Katherine},
  month = {Apr},
  institution = {University of California--Berkeley},
  year = {1995},
  keywords = {Parallel Computing,Split-C},
}
</pre></a></td></tr>
<tr><td></td><td class="entry"><a name="GSC95"></a><a name="topGSC95">
</a><a class="title" href="http://www.cs.cmu.edu/~seth/papers/GSC95.html">Lazy Threads, Stacklets, and Synchronizers: Enabling primitives for compiling parallel languages</a></td><td class="links" nowrap=""> <a class="bib" href="javascript:togglebib('GSC95')">bib</a> </td></tr><tr><td></td><td class="authinfo" colspan="2">
<a class="authinfo" href="http://www.cs.cmu.edu/~seth">Seth Copen Goldstein</a>, <a class="authinfo" href="http://www.cs.berkeley.edu/~culler/">David E. Culler</a>, and <a class="authinfo" href="http://www.cs.ucsb.edu/~schauser/">Klaus Erik Schauser</a>.
University of California at Berkeley Technical Report,
1995.
</td></tr>
<tr><td></td><td colspan="2"><a name="bibGSC95"><pre class="invisible" id="bibtextGSC95">@techreport{GSC95,
  author = {Goldstein, Seth Copen and Culler, David E. and Schauser,
     Klaus Erik},
  title = {{Lazy Threads, Stacklets, and Synchronizers: Enabling
     primitives for compiling parallel languages}},
  institution = {University of California at Berkeley},
  year = {1995},
  keywords = {Lazy Threads, Parallel Computing},
}
</pre></a></td></tr>
<tr><td></td><td class="entry"><a name="SCG95"></a><a name="topSCG95">
</a><a class="title" href="http://www.cs.cmu.edu/~seth/papers/SCG95.html">Separation Constraint Partitioning --- A New Algorithm for Partitioning non-Strict Programs Into Sequential Threads</a></td><td class="links" nowrap=""><a class="pdf" href="http://www.cs.cmu.edu/~seth/papers/SCG95.pdf">pdf</a> <a class="bib" href="javascript:togglebib('SCG95')">bib</a> </td></tr><tr><td></td><td class="authinfo" colspan="2">
<a class="authinfo" href="http://www.cs.ucsb.edu/~schauser/">Klaus Erik Schauser</a>, <a class="authinfo" href="http://www.cs.berkeley.edu/~culler/">David E. Culler</a>, and <a class="authinfo" href="http://www.cs.cmu.edu/~seth">Seth Copen Goldstein</a>.
In <em>Proceedings of the Principles of Programming Languages</em>,
Jan 1995.
</td></tr>
<tr><td></td><td colspan="2"><a name="bibSCG95"><pre class="invisible" id="bibtextSCG95">@inproceedings{SCG95,
  author = {Schauser, Klaus Erik and Culler, David E. and Goldstein,
     Seth Copen},
  booktitle = {Proceedings of the Principles of Programming
     Languages},
  title = {Separation Constraint Partitioning --- A New Algorithm for
     Partitioning non-Strict Programs Into Sequential Threads},
  year = {1995},
  address = {San Francisco, CA},
  month = {Jan},
  keywords = {Parallel Computing},
  url = {http://www.cs.cmu.edu/~seth/papers/SCG95.pdf},
}
</pre></a></td></tr>
<tr><td class="year">1994</td><td class="entry"><a name="goldstein94"></a><a name="topgoldstein94">
</a><a class="title" href="http://www.cs.cmu.edu/~seth/papers/goldstein94.html">The Implementation of a Threaded Abstract Machine</a></td><td class="links" nowrap=""> <a class="bib" href="javascript:togglebib('goldstein94')">bib</a> </td></tr><tr><td></td><td class="authinfo" colspan="2">
<a class="authinfo" href="http://www.cs.cmu.edu/~seth">Seth Copen Goldstein</a>.
Master's Thesis, University of California at Berkeley,
May 1994.
Also appeared as UC-Berkeley Technical Report UCB/CSD-94-818.
</td></tr>
<tr><td></td><td colspan="2"><a name="bibgoldstein94"><pre class="invisible" id="bibtextgoldstein94">@mastersthesis{goldstein94,
  author = {Goldstein, Seth Copen},
  title = {The Implementation of a Threaded Abstract Machine},
  school = {University of California at Berkeley},
  year = {1994},
  address = {Computer Science Division, University of California,
     Berkeley, Ca 94720},
  month = {May},
  also = {UC-Berkeley Technical Report UCB/CSD-94-818},
  keywords = {Parallel Computing, Threaded Abstract Machine (TAM)},
}
</pre></a></td></tr>
<tr><td></td><td class="entry"><a name="goldstein-tr94"></a><a name="topgoldstein-tr94">
</a><a class="title" href="http://www.cs.cmu.edu/~seth/papers/goldstein-tr94.html">The Implementation of a Threaded Abstract Machine</a></td><td class="links" nowrap=""><a class="pdf" href="http://www.cs.cmu.edu/~seth/papers/goldstein-tr94.pdf">pdf</a> <a class="bib" href="javascript:togglebib('goldstein-tr94')">bib</a> </td></tr><tr><td></td><td class="authinfo" colspan="2">
<a class="authinfo" href="http://www.cs.cmu.edu/~seth">Seth Copen Goldstein</a>.
EECS Department, University of California, Berkeley Technical Report No. UCB/CSD-94-818,
1994.
See <a href="#goldstein94">goldstein94</a>.
</td></tr>
<tr><td></td><td colspan="2"><a name="bibgoldstein-tr94"><pre class="invisible" id="bibtextgoldstein-tr94">@techreport{goldstein-tr94,
  author = {Goldstein, Seth Copen},
  title = {The Implementation of a Threaded Abstract Machine},
  institution = {EECS Department, University of California, Berkeley},
  year = {1994},
  url = {http://www.cs.cmu.edu/~seth/papers/goldstein-tr94.pdf},
  number = {UCB/CSD-94-818},
  see = {goldstein94},
  keywords = {Threaded Abstract Machine (TAM)},
}
</pre></a></td></tr>
<tr><td></td><td class="entry"><a name="goldstein-cm5users94"></a><a name="topgoldstein-cm5users94">
</a><a class="title" href="http://www.cs.cmu.edu/~seth/papers/goldstein-cm5users94.html">Active Messages: A Communication Foundation for Parallel Programming Models</a></td><td class="links" nowrap=""> <a class="bib" href="javascript:togglebib('goldstein-cm5users94')">bib</a> </td></tr><tr><td></td><td class="authinfo" colspan="2">
<a class="authinfo" href="http://www.cs.cmu.edu/~seth">Seth Copen Goldstein</a>.
CM-5 Users Group,
Feb 1994.
</td></tr>
<tr><td></td><td colspan="2"><a name="bibgoldstein-cm5users94"><pre class="invisible" id="bibtextgoldstein-cm5users94">@misc{goldstein-cm5users94,
  title = {Active Messages: A Communication Foundation for Parallel
     Programming Models},
  howpublished = {CM-5 Users Group},
  author = {Goldstein, Seth Copen},
  address = {Santa Fe, NM},
  year = {1994},
  month = {Feb},
  keywords = {Active Messages,Parallel Computing},
}
</pre></a></td></tr>
<tr><td class="year">1993</td><td class="entry"><a name="CullerGSvE93"></a><a name="topCullerGSvE93">
</a><a class="title" href="http://www.cs.cmu.edu/~seth/papers/CullerGSvE93.html">TAM --- a compiler controlled threaded abstract machine</a></td><td class="links" nowrap=""><a class="pdf" href="http://www.cs.cmu.edu/~seth/papers/CullerGSvE93.pdf">pdf</a> <a class="bib" href="javascript:togglebib('CullerGSvE93')">bib</a> <a class="abs" href="javascript:toggleabs('CullerGSvE93')">abstract</a> </td></tr><tr><td></td><td class="authinfo" colspan="2">
<a class="authinfo" href="http://www.cs.berkeley.edu/~culler/">David E. Culler</a>, <a class="authinfo" href="http://www.cs.cmu.edu/~seth">Seth Copen Goldstein</a>, <a class="authinfo" href="http://www.cs.ucsb.edu/~schauser/">Klaus Erik Schauser</a>, and <a class="authinfo" href="http://www.voneicken.com/">Thorsten von Eicken</a>.
<em>Journal of Parallel and Distributed Computing</em>,
volume 18, pages 347–370, Jul 1993.
</td></tr>
<tr><td></td><td colspan="2"><div class="invisible" id="abstextCullerGSvE93"><table><tr><td class="hide"><a href="javascript:toggleabs('CullerGSvE93')">hide<br/>Abstract</a></td><td><p class="abs">The Threaded Abstract Machine (TAM) refines dataflow execution models to address the critical constraints that modern parallel architectures place on the compilation of general-purpose parallel programming languages. TAM defines a self-scheduled machine language of parallel threads, which provides a path from dataflow-graph program representations to conventional control flow. The most important feature of TAM is the way it exposes the interaction between the handling of asynchronous message events, the scheduling of computation, and the utilization of the storage hierarchy. This paper provides a complete description of TAM and codifies the model in terms of a pseudo machine language TL0. Issues in compilation from a high level parallel language to TL0 are discussed in general and specifically in regard to the Id90 language. The implementation of TL0 on the CM-5 multiprocessor is explained in detail. Using this implementation, a cost model is developed for the various TAM primitives. The TAM approach is evaluated on sizable Id90 programs on a 64 processor system. The scheduling hierarchy of quanta and threads is shown to provide substantial locality while tolerating long latencies. This allows the average thread scheduling cost to be extremely low.</p></td></tr></table></div></td></tr><tr><td></td><td colspan="2"><a name="bibCullerGSvE93"><pre class="invisible" id="bibtextCullerGSvE93">@article{CullerGSvE93,
  author = {Culler, David E. and Goldstein, Seth Copen and Schauser,
     Klaus Erik and von~Eicken, Thorsten},
  title = {{TAM --- a compiler controlled threaded abstract machine}},
  journal = {Journal of Parallel and Distributed Computing},
  year = {1993},
  volume = {18},
  pages = {347-370},
  month = {Jul},
  abstract = {The Threaded Abstract Machine (TAM) refines dataflow
     execution models to address the critical constraints that modern
     parallel architectures place on the compilation of
     general-purpose parallel programming languages. TAM defines a
     self-scheduled machine language of parallel threads, which
     provides a path from dataflow-graph program representations to
     conventional control flow. The most important feature of TAM is
     the way it exposes the interaction between the handling of
     asynchronous message events, the scheduling of computation, and
     the utilization of the storage hierarchy. This paper provides a
     complete description of TAM and codifies the model in terms of a
     pseudo machine language TL0. Issues in compilation from a high
     level parallel language to TL0 are discussed in general and
     specifically in regard to the Id90 language. The implementation
     of TL0 on the CM-5 multiprocessor is explained in detail. Using
     this implementation, a cost model is developed for the various
     TAM primitives. The TAM approach is evaluated on sizable Id90
     programs on a 64 processor system. The scheduling hierarchy of
     quanta and threads is shown to provide substantial locality while
     tolerating long latencies. This allows the average thread
     scheduling cost to be extremely low.},
  url = {http://www.cs.cmu.edu/~seth/papers/CullerGSvE93.pdf},
  keywords = {Active Messages, Parallel Computing,Threaded Abstract
     Machine (TAM)},
}
</pre></a></td></tr>
<tr><td></td><td class="entry"><a name="SpertusGSvECD93"></a><a name="topSpertusGSvECD93">
</a><a class="title" href="http://www.cs.cmu.edu/~seth/papers/SpertusGSvECD93.html">Evaluation of Mechanisms for Fine-Grained Parallel Programs in the J-Machine and the CM-5</a></td><td class="links" nowrap=""><a class="pdf" href="http://www.cs.cmu.edu/~seth/papers/SpertusGSvECD93.pdf">pdf</a> <a class="bib" href="javascript:togglebib('SpertusGSvECD93')">bib</a> </td></tr><tr><td></td><td class="authinfo" colspan="2">
<a class="authinfo" href="http://people.mills.edu/spertus/">Ellen Spertus</a>, <a class="authinfo" href="http://www.cs.cmu.edu/~seth">Seth Copen Goldstein</a>, <a class="authinfo" href="http://www.cs.ucsb.edu/~schauser/">Klaus Erik Schauser</a>, <a class="authinfo" href="http://www.voneicken.com/">Thorsten von Eicken</a>, <a class="authinfo" href="http://www.cs.berkeley.edu/~culler/">David E. Culler</a>, and <a class="authinfo" href="http://cva.stanford.edu/billd_webpage_new.html">William J. Dally</a>.
In <em>Proceedings of the 20th International Symposium on Computer Architecture (ISCA)</em>,
May 1993.
</td></tr>
<tr><td></td><td colspan="2"><a name="bibSpertusGSvECD93"><pre class="invisible" id="bibtextSpertusGSvECD93">@inproceedings{SpertusGSvECD93,
  author = {Spertus, Ellen and Goldstein, Seth Copen and Schauser,
     Klaus Erik and von~Eicken, Thorsten and Culler, David E. and
     Dally, William J.},
  title = {{Evaluation of Mechanisms for Fine-Grained Parallel
     Programs in the J-Machine and the CM-5}},
  booktitle = {Proceedings of the 20th International Symposium on
     Computer Architecture (ISCA)},
  address = {San Diego, CA},
  month = {May},
  year = {1993},
  keywords = {Active Messages, Parallel Computing,Threaded Abstract
     Machine (TAM)},
  url = {http://www.cs.cmu.edu/~seth/papers/SpertusGSvECD93.pdf},
}
</pre></a></td></tr>
<tr><td></td><td class="entry"><a name="ait-kaci-prl93"></a><a name="topait-kaci-prl93">
</a><a class="title" href="http://www.cs.cmu.edu/~seth/papers/ait-kaci-prl93.html">Order-sorted feature theory unification</a></td><td class="links" nowrap=""><a class="pdf" href="http://www.cs.cmu.edu/~seth/papers/ait-kaci-prl93.pdf">pdf</a> <a class="bib" href="javascript:togglebib('ait-kaci-prl93')">bib</a> </td></tr><tr><td></td><td class="authinfo" colspan="2">
<a class="authinfo" href="http://koala.ilog.fr/wiki/bin/view/Main/HassanAitKaci">Ait-Kaci Hassan</a>, <a class="authinfo" href="http://swt.informatik.uni-freiburg.de/podelski">Andreas Podelski</a>, and <a class="authinfo" href="http://www.cs.cmu.edu/~seth">Seth Copen Goldstein</a>.
DEC Paris Research Labs Technical Report No. PRL-RR-32,
1993.
See <a href="#ait-kaci-jlp97">ait-kaci-jlp97</a>.
</td></tr>
<tr><td></td><td colspan="2"><a name="bibait-kaci-prl93"><pre class="invisible" id="bibtextait-kaci-prl93">@techreport{ait-kaci-prl93,
  author = {Hassan, Ait-Kaci and Podelski, Andreas and Goldstein, Seth
     Copen},
  title = {Order-sorted feature theory unification},
  institution = {DEC Paris Research Labs},
  number = {PRL-RR-32},
  year = {1993},
  see = {ait-kaci-jlp97},
  keywords = {Logic Programming},
  url = {http://www.cs.cmu.edu/~seth/papers/ait-kaci-prl93.pdf},
}
</pre></a></td></tr>
<tr><td></td><td class="entry"><a name="culler-sc93"></a><a name="topculler-sc93">
</a><a class="title" href="http://www.cs.cmu.edu/~seth/papers/culler-sc93.html">Parallel Programming in Split-C</a></td><td class="links" nowrap=""><a class="pdf" href="http://www.cs.cmu.edu/~seth/papers/culler-sc93.pdf">pdf</a> <a class="bib" href="javascript:togglebib('culler-sc93')">bib</a> </td></tr><tr><td></td><td class="authinfo" colspan="2">
<a class="authinfo" href="http://www.cs.berkeley.edu/~culler/">David E. Culler</a>, <a class="authinfo" href="http://www.cs.wisc.edu/~dusseau/">Andrea Dusseau</a>, <a class="authinfo" href="http://www.cs.cmu.edu/~seth">Seth Copen Goldstein</a>, <a class="authinfo" href="http://www.cs.washington.edu/homes/arvind/">Arvind Krishnamurthy</a>, <a class="authinfo" href="http://www.crhc.uiuc.edu/~steve/">Steven Lumetta</a>, <a class="authinfo" href="http://www.voneicken.com/">Thorsten von Eicken</a>, and <a class="authinfo" href="http://www.cs.berkeley.edu/~yelick/">Katherine Yelick</a>.
In <em>Proceedings of the Supercomputing  1993 Conference</em>,
pages 262–273, Nov 1993.
</td></tr>
<tr><td></td><td colspan="2"><a name="bibculler-sc93"><pre class="invisible" id="bibtextculler-sc93">@inproceedings{culler-sc93,
  author = {Culler, David E. and Dusseau, Andrea and Goldstein, Seth
     Copen and Krishnamurthy, Arvind and Lumetta, Steven and
     von~Eicken, Thorsten and Yelick, Katherine},
  title = {Parallel Programming in Split-C},
  booktitle = {Proceedings of the Supercomputing  1993 Conference},
  pages = {262-273},
  year = {1993},
  address = {Portland, OR},
  month = {Nov},
  keywords = {Active Messages,Parallel Computing},
  url = {http://www.cs.cmu.edu/~seth/papers/culler-sc93.pdf},
}
</pre></a></td></tr>
<tr><td class="year">1992</td><td class="entry"><a name="voneicken-isca92"></a><a name="topvoneicken-isca92">
</a><a class="title" href="http://www.cs.cmu.edu/~seth/papers/voneicken-isca92.html">Active Messages: A Mechanism for Integrated Communication and Computation</a></td><td class="links" nowrap=""><a class="pdf" href="http://www.cs.cmu.edu/~seth/papers/voneicken-isca92.pdf">pdf</a> <a class="bib" href="javascript:togglebib('voneicken-isca92')">bib</a> <a class="abs" href="javascript:toggleabs('voneicken-isca92')">abstract</a> </td></tr><tr><td></td><td class="authinfo" colspan="2">
<a class="authinfo" href="http://www.voneicken.com/">Thorsten von Eicken</a>, <a class="authinfo" href="http://www.cs.berkeley.edu/~culler/">David E. Culler</a>, <a class="authinfo" href="http://www.cs.cmu.edu/~seth">Seth Copen Goldstein</a>, and <a class="authinfo" href="http://www.cs.ucsb.edu/~schauser/">Klaus Erik Schauser</a>.
In <em>Proceedings of the 19th International Symposium on Computer Architecture (ISCA)</em>,
pages 430–440, May 1992.
</td></tr>
<tr><td></td><td colspan="2"><div class="invisible" id="abstextvoneicken-isca92"><table><tr><td class="hide"><a href="javascript:toggleabs('voneicken-isca92')">hide<br/>Abstract</a></td><td><p class="abs">The design challenge for large-scale multiprocessors is (1) to minimize communication overhead, (2) allow communication to overlap computation, and (3) coordinate the two without sacrificing processor cost/performance. We show that existing message passing multiprocessors have unnecessarily high communication costs. Research prototypes of message driven machines demonstrate low communication overhead, but poor processor cost/performance. We introduce a simple communication mechanism, <em>Active Messages</em>, show that it is intrinsic to both architectures, allows cost effective use of the hardware, and offers tremendous flexibility. Implementations on nCUBE/2 and CM-5 are described and evaluated using a split-phase shared-memory extension to C, <em>Split-C</em>. We further show that active messages are sufficient to implement the dynamically scheduled languages for which message driven machines were designed. With this mechanism, latency tolerance becomes a programming/compiling concern. Hardware support for active messages is desirable and we outline a range of enhancements to mainstream processors.</p></td></tr></table></div></td></tr><tr><td></td><td colspan="2"><a name="bibvoneicken-isca92"><pre class="invisible" id="bibtextvoneicken-isca92">@inproceedings{voneicken-isca92,
  author = {von~Eicken, Thorsten and Culler, David E. and Goldstein,
     Seth Copen and Schauser, Klaus Erik},
  title = {{Active Messages}: A Mechanism for Integrated Communication
     and Computation},
  month = {May},
  booktitle = {Proceedings of the 19th International Symposium on
     Computer Architecture (ISCA)},
  address = {Gold Coast, Australia},
  pages = {430--440},
  year = {1992},
  url = {http://www.cs.cmu.edu/~seth/papers/voneicken-isca92.pdf},
  abstract = {The design challenge for large-scale multiprocessors is
     (1) to minimize communication overhead, (2) allow communication
     to overlap computation, and (3) coordinate the two without
     sacrificing processor cost/performance. We show that existing
     message passing multiprocessors have unnecessarily high
     communication costs. Research prototypes of message driven
     machines demonstrate low communication overhead, but poor
     processor cost/performance. We introduce a simple communication
     mechanism, {\em Active Messages}, show that it is intrinsic to
     both architectures, allows cost effective use of the hardware,
     and offers tremendous flexibility. Implementations on nCUBE/2 and
     CM-5 are described and evaluated using a split-phase
     shared-memory extension to C, {\em Split-C}. We further show that
     active messages are sufficient to implement the dynamically
     scheduled languages for which message driven machines were
     designed. With this mechanism, latency tolerance becomes a
     programming/compiling concern. Hardware support for active
     messages is desirable and we outline a range of enhancements to
     mainstream processors.},
  keywords = {Active Messages, Parallel Computing},
}
</pre></a></td></tr>
<tr><td></td><td class="entry"><a name="culler-wdc92"></a><a name="topculler-wdc92">
</a><a class="title" href="http://www.cs.cmu.edu/~seth/papers/culler-wdc92.html">Empirical Study of a Dataflow Language on the CM-5</a></td><td class="links" nowrap=""><a class="pdf" href="http://www.cs.cmu.edu/~seth/papers/culler-wdc92.pdf">pdf</a> <a class="bib" href="javascript:togglebib('culler-wdc92')">bib</a> </td></tr><tr><td></td><td class="authinfo" colspan="2">
<a class="authinfo" href="http://www.cs.berkeley.edu/~culler/">David E. Culler</a>, <a class="authinfo" href="http://www.cs.cmu.edu/~seth">Seth Copen Goldstein</a>, <a class="authinfo" href="http://www.cs.ucsb.edu/~schauser/">Klaus Erik Schauser</a>, and <a class="authinfo" href="http://www.voneicken.com/">Thorsten von Eicken</a>.
In <em>Proc. of the Dataflow Workshop, 19th Int'l Symposium on Computer Architecture</em>,
pages 187–210, May 1992.
</td></tr>
<tr><td></td><td colspan="2"><a name="bibculler-wdc92"><pre class="invisible" id="bibtextculler-wdc92">@inproceedings{culler-wdc92,
  author = {Culler, David E. and Goldstein, Seth Copen and Schauser,
     Klaus Erik and von~Eicken, Thorsten},
  title = {{Empirical Study of a Dataflow Language on the CM-5}},
  booktitle = {Proc. of the Dataflow Workshop, 19th Int'l Symposium on
     Computer Architecture},
  address = {Gold Coast, Australia},
  month = {May},
  year = {1992},
  pages = {187--210},
  keywords = {Parallel Computing,Threaded Abstract Machine (TAM),
     Id90, Dataflow},
  url = {http://www.cs.cmu.edu/~seth/papers/culler-wdc92.pdf},
}
</pre></a></td></tr>
<tr><td></td><td class="entry"><a name="goldstein-ilpc92"></a><a name="topgoldstein-ilpc92">
</a><a class="title" href="http://www.cs.cmu.edu/~seth/papers/goldstein-ilpc92.html">Supporting Implicitly Parallel Languages</a></td><td class="links" nowrap=""> <a class="bib" href="javascript:togglebib('goldstein-ilpc92')">bib</a> </td></tr><tr><td></td><td class="authinfo" colspan="2">
<a class="authinfo" href="http://www.cs.cmu.edu/~seth">Seth Copen Goldstein</a>.
In <em>14th Annual Industrial Liaison Program Conference</em>,
Mar 1992.
</td></tr>
<tr><td></td><td colspan="2"><a name="bibgoldstein-ilpc92"><pre class="invisible" id="bibtextgoldstein-ilpc92">@inproceedings{goldstein-ilpc92,
  title = {Supporting Implicitly Parallel Languages},
  booktitle = {14th Annual Industrial Liaison Program Conference},
  author = {Goldstein, Seth Copen},
  address = {Berkeley, CA},
  year = {1992},
  month = {Mar},
  keywords = {Parallel Computing,Threaded Abstract Machine (TAM),
     Id90},
}
</pre></a></td></tr>
<tr><td></td><td class="entry"><a name="goldstein-prl92"></a><a name="topgoldstein-prl92">
</a><a class="title" href="http://www.cs.cmu.edu/~seth/papers/goldstein-prl92.html">An Abstract Machine to Implement Functions in LIFE</a></td><td class="links" nowrap=""><a class="pdf" href="http://www.cs.cmu.edu/~seth/papers/goldstein-prl92.pdf">pdf</a> <a class="bib" href="javascript:togglebib('goldstein-prl92')">bib</a> </td></tr><tr><td></td><td class="authinfo" colspan="2">
<a class="authinfo" href="http://www.cs.cmu.edu/~seth">Seth Copen Goldstein</a>.
DEC Paris Research Lab Technical Report No. Note 18,
1992.
</td></tr>
<tr><td></td><td colspan="2"><a name="bibgoldstein-prl92"><pre class="invisible" id="bibtextgoldstein-prl92">@techreport{goldstein-prl92,
  author = {Goldstein, Seth Copen},
  title = {An Abstract Machine to Implement Functions in LIFE},
  url = {http://www.cs.cmu.edu/~seth/papers/goldstein-prl92.pdf},
  institution = {DEC Paris Research Lab},
  year = {1992},
  number = {Note 18},
  keywords = {Logic Programming},
}
</pre></a></td></tr>
<tr><td></td><td class="entry"><a name="goldstein-id92"></a><a name="topgoldstein-id92">
</a><a class="title" href="http://www.cs.cmu.edu/~seth/papers/goldstein-id92.html">Studying Dynamic Program Behavior `In the Large'</a></td><td class="links" nowrap=""> <a class="bib" href="javascript:togglebib('goldstein-id92')">bib</a> </td></tr><tr><td></td><td class="authinfo" colspan="2">
<a class="authinfo" href="http://www.cs.cmu.edu/~seth">Seth Copen Goldstein</a>.
In <em>ID Workshop</em>,
Nov 1992.
</td></tr>
<tr><td></td><td colspan="2"><a name="bibgoldstein-id92"><pre class="invisible" id="bibtextgoldstein-id92">@inproceedings{goldstein-id92,
  title = {Studying Dynamic Program Behavior `In the Large'},
  booktitle = {ID Workshop},
  author = {Goldstein, Seth Copen},
  address = {Minneapolis, MN},
  year = {1992},
  month = {Nov},
  keywords = {Parallel Computing,Threaded Abstract Machine (TAM),
     Id90},
}
</pre></a></td></tr>
<tr><td class="year">1991</td><td class="entry"><a name="bacon-wpdd91"></a><a name="topbacon-wpdd91">
</a><a class="title" href="http://www.cs.cmu.edu/~seth/papers/bacon-wpdd91.html">Hardware-Assisted Replay of Multiprocessor Programs</a></td><td class="links" nowrap=""><a class="pdf" href="http://www.cs.cmu.edu/~seth/papers/bacon-wpdd91.pdf">pdf</a> <a class="bib" href="javascript:togglebib('bacon-wpdd91')">bib</a> </td></tr><tr><td></td><td class="authinfo" colspan="2">
<a class="authinfo" href="http://www.research.ibm.com/people/d/dfb/">David F. Bacon</a> and <a class="authinfo" href="http://www.cs.cmu.edu/~seth">Seth Copen Goldstein</a>.
In <em>Proceedings of the ACM/ONR Workshop on Parallel and Distributed Debugging</em>,
May 1991.
</td></tr>
<tr><td></td><td colspan="2"><a name="bibbacon-wpdd91"><pre class="invisible" id="bibtextbacon-wpdd91">@inproceedings{bacon-wpdd91,
  title = {Hardware-Assisted Replay of Multiprocessor Programs},
  url = {http://www.cs.cmu.edu/~seth/papers/bacon-wpdd91.pdf},
  booktitle = {Proceedings of the ACM/ONR Workshop on Parallel and
     Distributed Debugging},
  author = {Bacon, David F. and Goldstein, Seth Copen},
  year = {1991},
  address = {Santa Cruz, CA},
  month = {May},
  keywords = {Debugging,Parallel Computing},
}
</pre></a></td></tr>
<tr><td class="year">1990</td><td class="entry"><a name="goldstein-tools90"></a><a name="topgoldstein-tools90">
</a><a class="title" href="http://www.cs.cmu.edu/~seth/papers/goldstein-tools90.html">The Future of Object-Oriented Programming</a></td><td class="links" nowrap=""> <a class="bib" href="javascript:togglebib('goldstein-tools90')">bib</a> </td></tr><tr><td></td><td class="authinfo" colspan="2">
<a class="authinfo" href="http://www.cs.cmu.edu/~seth">Seth Copen Goldstein</a>.
In <em>TOOLS 1990</em>,
May 1990.
</td></tr>
<tr><td></td><td colspan="2"><a name="bibgoldstein-tools90"><pre class="invisible" id="bibtextgoldstein-tools90">@inproceedings{goldstein-tools90,
  title = {The Future of Object-Oriented Programming},
  booktitle = {TOOLS 1990},
  author = {Goldstein, Seth Copen},
  address = {Paris, France},
  year = {1990},
  month = {May},
  keywords = {Object-Oriented Programming},
}
</pre></a></td></tr>
</table></td></tr></table></div></body>
</html>
