<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="utf-8"/>
<meta content="IE=edge" http-equiv="X-UA-Compatible"/>
<meta content="width=device-width, initial-scale=1" name="viewport"/>
<title>Jan Vitek @ NEU</title>
<!-- Bootstrap -->
<link href="css/bootstrap.min.css" rel="stylesheet"/>
<!--[if lt IE 8]>
    <link href="css/ie7.css" rel="stylesheet">
    <![endif]-->
<!-- Custom css -->
<link href="css/custom.css" rel="stylesheet"/>
<!-- For IE 9 and below. ICO should be 32x32 pixels in size -->
<!--[if IE]><link rel="shortcut icon" href="./img/favicon.ico"><![endif]-->
<!-- Firefox, Chrome, Safari, IE 11+ and Opera. 196x196 pixels in size. -->
<link href="img/favicon.png" rel="icon"/>
<!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->
<!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
<!--[if lt IE 9]>
      <script src="https://oss.maxcdn.com/html5shiv/3.7.2/html5shiv.min.js"></script>
      <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
    <![endif]-->
<script language="JavaScript" type="text/JavaScript"><!--                                                                           
                                                                                                                                    
function MM_swapImgRestore() { var i,x,a=document.MM_sr; for(i=0;a&&i<a.length&&(x=a[i])&&x.oSrc;i++) x.src=x.oSrc; }               
function MM_preloadImages() {                                                                                                       
  var d=document; if(d.images){ if(!d.MM_p) d.MM_p=new Array();                                                                     
    var i,j=d.MM_p.length,a=MM_preloadImages.arguments; for(i=0; i<a.length; i++)                                                   
    if (a[i].indexOf("#")!=0){ d.MM_p[j]=new Image; d.MM_p[j++].src=a[i];}}                                                         
}                                                                                                                                   
function MM_findObj(n, d) {                                                                                                         
  var p,i,x;  if(!d) d=document; if((p=n.indexOf("?"))>0&&parent.frames.length) {                                                   
    d=parent.frames[n.substring(p+1)].document; n=n.substring(0,p);}                                                                
  if(!(x=d[n])&&d.all) x=d.all[n]; for (i=0;!x&&i<d.forms.length;i++) x=d.forms[i][n];                                              
  for(i=0;!x&&d.layers&&i<d.layers.length;i++) x=MM_findObj(n,d.layers[i].document);                                                
  if(!x && d.getElementById) x=d.getElementById(n); return x;                                                                       
  }                                                                                                                                 
function MM_swapImage() {                                                                                                           
  var i,j=0,x,a=MM_swapImage.arguments; document.MM_sr=new Array; for(i=0;i<(a.length-2);i+=3)                                      
   if ((x=MM_findObj(a[i]))!=null){document.MM_sr[j++]=x; if(!x.oSrc) x.oSrc=x.src; x.src=a[i+2];}                                  
}                                                                                                                                   
                                                                                                                                    
function swaptabs (showthis,hidethis) {                                                                                             
  var style2 = document.getElementById(showthis).style;style2.display = "block";                                                    
  var style3 = document.getElementById(hidethis).style;style3.display ="none";                                                      
}                                                                                                                                   
                                                                                                                                    
                                                                                                                                    
//--></script>
</head>
<body id="pn-top">
<div class="container">
<div class="header">
<div class="row">
<nav>
<ul class="nav navbar-nav">
<li role="presentation"><a href="#pn-anchor-home">[jv]</a></li>
<li role="presentation"><a href="#pn-anchor-news">[news]</a></li>
<li role="presentation"><a href="#pn-anchor-service">[service]</a></li>
<li role="presentation"><a href="#pn-anchor-projects">[projects]</a></li>
<li role="presentation"><a href="#pn-anchor-publications">[publications]</a></li>
<li role="presentation"><a href="#pn-anchor-teaching">[teaching]</a></li>
<li role="presentation"><a href="http://prl.ccs.neu.edu" target="_blank"> <img height="25" src="img/prl.png"/></a>
</li><li role="presentation"><a href="http://prl-prg.github.io" target="_blank"> <img height="25" src="img/prl-final-2.png"/></a>
</li></ul>
</nav>
</div>
</div>
<div class="content">
<div class="row pn-white-bg">
<div class="col-md-12">
<h2 class="pn-courier-bold" id="pn-anchor-home" vertical-align="bottom">
<img alt="Jan Vitek" src="images/me2wide.jpg" width="1040"/>
</h2>
</div>
<div class="col-md-4">
<p>My research focus on <em>design and implementation of
            programming abstractions in areas</em> that have included
            real-time embedded systems, concurrent and distributed systems
            and more recently scalable data analytics.</p>
<p>I have published in venues that specialize in Programming
            Languages, Virtual Machines, Compilers, Software Engineering,
            Real-time Computing, and Bioinformatics.</p>
<p>I enjoy beautiful code that solves real-world problems.</p>
<p>Software &amp; papers should be
            free. <a href="http://en.wikipedia.org/wiki/Open_access" target="_blank"><img alt="Open access" class="pn-inline-link" src="img/open_access.jpg"/></a></p>
<p>Research should be repeatable and
            replicated. <a href="http://cacm.acm.org/magazines/2015/3/183593-the-real-software-crisis/fulltext" target="_blank"><img alt="The real software crisis" class="pn-inline-link" src="img/real_software.jpg"/></a></p>
<a href="http://ccs.neu.edu" target="_blank"><img height="50" src="img/neu.png"/></a>  
	     <a href="http://prl.ccs.neu.edu" target="_blank"> <img height="50" src="img/prl.png"/></a>  
	     <a href="https://prl-prg.github.io" target="_blank"> <img height="60" src="images/prl.png"/></a>
<table>
<tr><td><img src="images/CZ.ico" width="25"/></td>
<td>Czech by birth.</td></tr>
<tr><td><img src="images/CH.png" width="25"/></td><td>Swiss by adoption, I miss the Alps. </td></tr>
</table>
</div>
<div class="col-md-4 pn-grey-font">
<p>Jan Vitek is a Professor of Computer Science at Northeastern
            University. He holds degrees from the University of Geneva andd
            Victoria. He works on topics related to the design and
            implementation of programming languages. In the <em>Ovm
            project</em>, he led the implementation of the first real-time
            Java virtual machine to be successfully flight-tested. Together
            with Noble and Potter, he proposed a concept that became known
            as <em>Ownership Types</em>. He was one of the designers of the
            Thorn language. He worked on gaining a better understanding of
            the JavaScript language and is looking at how to support
            scalable data analysis in R. Prof. Vitek chaired ACM SIGPLAN; he
            was the Chief Scientist at Fiji Systems and the founding team at
            H2O.ai, a vice chair of AITO; a vice chair of IFIP WG 2.4, and
            chaired SPLASH, PLDI, ECOOP, ISMM and LCTES and was program
            chair of ESOP, ECOOP, VEE, Coordination, and TOOLS.</p>
</div>
<div class="col-md-4 pn-top--40px">
<br/>
<h2>Jan Vitek</h2>
<p><em>Professor of Computer Science</em></p>
<address>
<p class="pn-grey-font">Khoury College of  <br/>
                Computer Sciences<br/>
                Northeastern University<br/>
                440 Huntington Ave,<br/>
                Boston, MA 02115</p>
<p>
<span class="pn-grey-font pn-contact-span">Skype:</span>
<span class="pn-courier-bold">vitek_jan</span><br/>
<span class="pn-grey-font pn-contact-span">Email:</span>
<span class="pn-courier-bold"><a class="pn-dark" href="mailto:vitekj@me.com?subject=Jan%20Vitek%20website%20inquiry">vitekj@me.com</a></span><br/>
<span class="pn-grey-font pn-contact-span">Office:</span>
<span class="pn-courier-bold">Yes</span><br/>
<span class="pn-grey-font pn-contact-span">CV:</span>
<a class="pn-dark" href="pubs/cv.pdf" target="_blank"><span class="pn-courier-bold">PDF</span></a><br/>
<span class="pn-grey-font pn-contact-span">H-index:</span>
<a class="pn-dark" href="https://scholar.google.com/citations?user=Ws0GjboAAAAJ&amp;hl=en&amp;oi=ao" target="_blank"><span class="pn-courier-bold">49</span></a><br/>
<span class="pn-grey-font pn-contact-span">DBLP:</span>
<a class="pn-dark" href="http://dblp.uni-trier.de/pers/hd/v/Vitek:Jan" target="_blank"><span class="pn-courier-bold">Here</span></a><br/>
<span class="pn-grey-font pn-contact-span">Ln:</span>
<a class="pn-dark" href="https://www.linkedin.com/in/jvitek" target="_blank"><span class="pn-courier-bold">Here</span></a><br/>
<span class="pn-grey-font pn-contact-span">FB:</span>
<a class="pn-dark" href="https://www.facebook.com/jvitekjr" target="_blank"><span class="pn-courier-bold">Here</span></a><br/>
<span class="pn-grey-font pn-contact-span">Lab:</span>
<a class="pn-dark" href="http://prl.ccs.neu.edu" target="_blank"><span class="pn-courier-bold">PRL</span></a>
</p>
</address>
</div>
</div>
<div class="row pn-grey-bg">
<div class="col-md-12"><h2 class="pn-courier-bold" id="pn-anchor-news">[news]</h2></div>
<div class="col-md-12">
<table>
<tr>
</tr><tr><td><ul class="pn-ul-triangle"><li><span class="pn-news-span"><strong><a href="https://pliss.org/2020" target="_blank">PLISS</a></strong></span></li></ul></td>
<td> The third <a href="https://pliss.org/2020" target="_blank">Programming Language Implementation Summer
	School</a> will be in Italy in 2020</td>
</tr>
<tr><td><ul class="pn-ul-triangle"><li><span class="pn-news-span"><strong><a href="https://www.sigplan.org/Awards/Service/" target="_blank">Award</a></strong></span></li></ul></td>
<td>Received the 2019
            <a href="https://www.sigplan.org/Awards/Service/">ACM SIGPLAN Distinguished Service Award</a></td>
</tr>
<tr><td><ul class="pn-ul-triangle"><li><span class="pn-news-span"><strong><a href="https://2018.ecoop.org/attending/awards" target="_blank">ToT</a></strong></span></li></ul></td>
<td>Our 1998 ownership paper,
            <a href="http://janvitek.org/pubs/ecoop98.pdf">Flexible Alias
            Protection</a>, got the ECOOP Test-Of-Time award in 2018</td>
</tr>
<tr><td><ul class="pn-ul-triangle"><li><span class="pn-news-span"><strong>
<a href="https://2018.splashcon.org/track/splash-2018-OOPSLA-Artifacts" target="_blank">AEC</a></strong></span></li></ul> </td>
<td>The OOPSLA artifact evaluation process accepted a record 35
	  artifacts and 33 are archived for reuse</td>
</tr>
<tr><td><ul class="pn-ul-triangle"><li><span class="pn-news-span"><strong>
<a href="https://conf.researchr.org/event/issta-2018/issta-2018-artifacts-tests-from-traces-automated-unit-test-generation-for-r" target="_blank">AEC</a></strong></span></li></ul> </td>
<td><a href="https://github.com/PRL-PRG/genthat">Genthat</a> received an ISSTA 2018 distinguished
	artifact award </td>
</tr>
<tr><td><ul class="pn-ul-triangle"><li><span class="pn-news-span"><strong>
<a href="https://conf.researchr.org/track/ecoop-issta-2018/wossca-2018-papers" target="_blank">WoSSCA</a></strong></span></li></ul>
</td><td> I co-organizedthe first <a href="https://conf.researchr.org/track/ecoop-issta-2018/wossca-2018-papers">
        Workshop on Speculative Side Channel Analysis, 2018</a> </td>
</tr>
<tr><td><ul class="pn-ul-triangle"><li><span class="pn-news-span"><strong>
<a href="https://conf.researchr.org/track/ecoop-issta-2018/salad-2018-papers" target="_blank">SALAD</a></strong></span></li></ul>
</td>
<td>I co-organized the first ONR-funded
         workshop <a href="https://conf.researchr.org/track/ecoop-issta-2018/salad-2018-papers" target="_blank">Workshop on SoftwAre debLoating And
         Delayering</a></td>
</tr>
<td><ul class="pn-ul-triangle"><li><span class="pn-news-span"><strong><a href="http://janvitek.org/pubs/oopsla17b.pdf" target="_blank">Deja Vu</a></strong></span></li></ul></td>
<td>Our paper on code duplication on Github is popular 
	  <a href="http://blog.acolyer.org/2017/11/20/dejavu-a-map-of-code-duplicates-on-github">here</a>
<a href="https://developers.slashdot.org/story/17/11/23/2352233/more-than-half-of-github-is-duplicate-code-researchers-find">here</a>
<a href="https://www.theregister.co.uk/2017/11/21/github_duplicate_code/">here</a>
<a href="https://www.developpez.com/actu/175363/GitHub-des-chercheurs-estiment-que-plus-de-la-moitie-des-codes-ecrits-en-Java-Python-C-Cplusplus-et-JavaScript-sont-dupliques/">ici</a>
<a href="https://www.opennet.ru/opennews/art.shtml?num=47596">bot</a>
<a href="https://www.toutiao.com/a6491879685222302221/">这里</a>
<a href="http://www.sohu.com/a/206363660_114760">这里</a>
<a href="https://www.youtube.com/watch?v=4M-ASEpVOaY">[Talk]</a>
<a href="http://mondego.ics.uci.edu/projects/dejavu/">[Distinguished Artifact]</a>
</td>
<tr>
<td>
<ul class="pn-ul-triangle"><li><span class="pn-news-span"><strong><a href="http://services.google.com/fh/files/blogs/v2_final_list.pdf" target="_blank">Google</a></strong></span></li>
</ul>
</td>
<td>
	  Our work on analysis of JavaScript is supported by  a <a href="http://services.google.com/fh/files/blogs/v2_final_list.pdf" target="_blank">Google Faculty Research Award</a>
</td>
</tr>
<tr><td><ul class="pn-ul-triangle"><li><span class="pn-news-span"><strong> <a href="https://github.com/rift-lecture/rift" target="_blank">LLVM</a></strong></span></li> </ul></td>
<td><em>Build a JIT with LLVM</em> class
	at <a href="https://www.fit.cvut.cz/en">CVUT</a> with Oli and
	Peta <a href="https://github.com/rift-lecture/rift" target="_blank">[source]</a>
</td>
</tr>
<tr><td><ul class="pn-ul-triangle"><li><span class="pn-news-span"><strong><a href="http://sigplan.org" target="_blank">SIGPLAN</a></strong></span></li></ul></td>
<td>I was Chair of SIGPLAN, here is my
	final <a href="pubs/sigplan-15-report.pdf" target="_blank">report</a></td>
</tr>
<tr><td><ul class="pn-ul-triangle"> <li><span class="pn-news-span"><strong><a href="http://www.dagstuhl.de/en/publications/lipics" target="_blank">OA</a></strong></span></li></ul></td>
<td><a href="http://2015.ecoop.org" target="_blank">ECOOP</a> has
	been Gold Open Access since 2015</td>
</tr>
<tr><td><ul class="pn-ul-triangle"><li><span class="pn-news-span"><strong><a href="http://cacm.acm.org/magazines/2015/3/183593-the-real-software-crisis/fulltext" target="_blank">Artifacts</a></strong></span></li></ul></td>
<td>Arguing for artifact evaluation in <a href="http://cacm.acm.org" target="_blank">CACM</a></td>
</tr>
</table>
</div>
</div>
<div class="row pn-white-bg">
<div class="col-md-12">
<h2 class="pn-courier-bold" id="pn-anchor-service">[service]</h2>
</div>
<div class="col-md-4">
<h3>Honors</h3>
<table>
<tr><td>2019</td>
<td><a href="https://www.sigplan.org/Awards/Service/" target="_blank">ACM SIGPLAN Distinguished Service Award</a></td>
</tr>
<tr><td>2018</td>
<td><a href="https://2018.ecoop.org/attending/awards" target="_blank">ECOOP Test of Time Award</a></td>
</tr>
<tr><td>2018</td>
<td><a href="https://conf.researchr.org/event/issta-2018/issta-2018-artifacts-tests-from-traces-automated-unit-test-generation-for-r" target="_blank">ISSTA Distinguished Artifact
                  Award</a></td>
</tr>
<tr><td>2017</td>
<td><a href="https://2017.splashcon.org/attending/splash-awards" target="_blank">OOPSLA Distinguished Artifact Award</a></td>
</tr>
<tr><td>2013</td>
<td><a href="https://www.cs.purdue.edu/people/awards/" target="_blank">Purdue Undergraduate Advising Award</a></td>
</tr>
<tr><td>2011</td>
<td><a href="http://www.purdue.edu/provost/faculty/awards/faculty.html" target="_blank">Purdue University Faculty Scholar</a></td>
</tr>
<tr>
<td>2011</td>
<td>Purdue Undergraduate Advising Award</td>
</tr>
<tr><td>2011</td>
<td>Microsoft SEIF Research Award</td>
</tr>
<tr><td>2006</td>
<td><a href="http://download.boulder.ibm.com/ibmdl/pub/software/dw/university/facultyawards/2006_faculty_recipients.pdf" target="_blank">IBM Faculty Award</a></td>
</tr>
<tr><td>2001</td>
<td>NSF <a href="http://www.nsf.gov/awardsearch/showAward?AWD_ID=0093282" target="_blank">CAREER Award</a></td>
</tr>
</table>
<h3>Conferences</h3>
<table>
<tr><td class="pn-first-td"><a href="" target="_blank">ECOOP 2020</a></td><td>Workshop Chair</td>
</tr>
<tr><td class="pn-first-td"><a href="https://2019.splashcon.org/track/splash-2019-Artifacts" target="_blank">OOPSLA 2019</a></td><td>Artiface Evaluation Chair</td>
</tr>
<tr><td class="pn-first-td"><a href="https://conf.researchr.org/home/etaps-2019" target="_blank">ETAPS 2019</a></td><td>General Chair</td>
</tr>
<tr><td class="pn-first-td"><a href="http://splashcon.org" target="_blank">SPLASH 2018</a></td><td>General Chair</td>
</tr>
<tr><td class="pn-first-td"><a href="http://splashcon.org" target="_blank">OOPSLA 2018</a></td>
<td>Artifact Evaluation Chair</td>
</tr>
<tr><td class="pn-first-td"><a href="http://2015.ecoop.org" target="_blank">ECOOP 2015</a></td> <td>Comfy Chair</td>
</tr>
<tr><td class="pn-first-td"><a href="http://conf.researchr.org/home/esop-2015" target="_blank">ESOP 2015</a></td><td>Program Chair</td>
</tr>
<tr><td class="pn-first-td"><a href="http://popl15-aec.cs.umass.edu/home/" target="_blank">POPL 2015</a></td><td>Artiface Evaluation Chair</td>
</tr>
<tr><td class="pn-first-td"><a href="http://pldi14-aec.cs.brown.edu" target="_blank">PLDI 2014</a></td><td>Artiface Evaluation Chair</td>
</tr>
<tr><td class="pn-first-td"><a href="http://ecoop13-aec.cs.brown.edu" target="_blank">ECOOP 2013</a></td><td>Artiface Evaluation Chair</td>
</tr>
<tr><td><a href="http://pldi12.cs.purdue.edu" target="_blank">PLDI 2012</a></td><td>General Chair</td>
</tr>
<tr><td><a href="http://lctes2011.elis.ugent.be/?file=kop1.php" target="_blank">LCTES 2011</a></td> <td>General Chair</td>
</tr>
<tr><td><a href="http://www.cs.purdue.edu/ISMM10/" target="_blank">ISMM 2010</a></td><td>General Chair</td>
</tr>
<tr><td><a href="http://malaga2010.lcc.uma.es/" target="_blank">TOOLS 2010</a></td><td>Program Chair</td>
</tr>
<tr><td><a href="http://d3s.mff.cuni.cz/conferences/jtres2010/" target="_blank">JTRES 2010</a></td><td>Program Chair</td>
</tr>
<tr><td><a href="https://ecoop08.cs.ucy.ac.cy/" target="_blank">ECOOP 2008</a></td> <td>Program Chair</td>
</tr>
<tr><td><a href="events/COORD07/" target="_blank">COORD 2007</a></td> <td>Program Chair</td>
</tr>
<tr><td><a href="http://janvitek.github.io/events/TRANSACT" target="_blank">TRANSACT 2006</a></td> <td>General Chair</td>
</tr>
<tr><td><a href="http://www.sigplan.org/Conferences/VEE/" target="_blank">VEE 2005</a></td><td>Program Chair</td>
</tr>
<tr><td><a href="http://janvitek.github.io/plditut" target="_blank">PLDI 2005</a></td><td>Tutorial Chair</td>
</tr>
</table>
<h3>Events</h3>
<table>
<tr><td><a href="https://pliss2017.github.io" target="_blank">PLISS</a></td>
<td>Programming Language Implementation Summer School, 
		  <a href="https://pliss2017.github.io">2017</a>, 
		  <a href="https://pliss2019.github.io">2019</a>, 
		  <a href="https://pliss.org/2020">2020</a></td>
</tr>
<tr>
<td><a href="vitekj/ESS10/Welcome.html" target="_blank">ESS</a></td>
<td>ECOOP Summer School: <a href="events/ESS10/index.html" target="_blank">2010</a>, 
		  2011, 
		  <a href="http://ecoop12.cs.purdue.edu/content/ecoop-Summer-school">2012</a>, 
		  <a href="events/ESS13" target="_blank">2013</a>, 
		  <a href="http://ecoop14.it.uu.se/programme/ecoop-school.php" target="_blank">2014</a>, 
		  <a href="http://ecoop14.it.uu.se/programme/ecoop-school.php">2015</a>, 
		  <a href="http://2016.ecoop.org/track/Summer+School">2016</a>, 
		  <a href="http://2017.ecoop.org/track/ecoop-2017-Summer-School">2017</a>,             
		  <a href="https://conf.researchr.org/track/ecoop-issta-2018/ecoop-issta-2018-Summer-school">2018</a></td>
</tr>
<tr><td><a href="http://www.dagstuhl.de/en/program/calendar/semhp/?semnr=16111" target="_blank">REMC 2016</a></td>
<td>Dagstuhl Seminar 16111 on Rethinking Experimental Methods in Computing</td>
</tr>
<tr>
<td><a href="http://splashcon.org/2013/program/splash-i" target="_blank">SPLASH-I</a></td>
<td>SPLASH-I track: 2013, 2015,
		  <a href="https://2018.splashcon.org/track/splash-2018-SPLASH-I">2018</a>
</td>
</tr>
<tr>
<td><a href="http://janvitek.org/events/sotu.js14/" target="_blank">SOTU.JS 2014</a></td>
<td>Stat of the Union: JavaScript</td>
</tr>
<tr>
<td><a href="http://www.dynali.org/" target="_blank">DALI 2013</a></td>
<td>NSF Workshop on Dynamic Languages for Scalable Data Analytics</td>
</tr>
<tr>
<td><a href="events/PBD13/" target="_blank">PDB 2013</a></td>
<td>NSF Workshop on Programming with Big Data</td>
</tr>
<tr>
<td><a href="https://www.cs.purdue.edu/sss/projects/veesc/2010/" target="_blank">VEESC 2010</a></td>
<td>Workshop on Dynamic Languages for Scientific Computing</td>
</tr>
<tr>
<td><a href="vitekj/TIC10/Welcome.html" target="_blank">TiC</a></td>
<td>Trends in Concurrency: <a href="events/TiC06" target="_blank">2006</a>, <a href="events/TiC08" target="_blank">2008</a>,  <a href="vitekj/TIC10/Welcome.html" target="_blank">2010</a></td>
</tr>
<tr>
<td><a href="https://www.cs.purdue.edu/sss/projects/tm/tmw2010/Welcome.html" target="_blank">TMW 2010</a></td>
<td>NSF Transactional Memory Workshop</td>
</tr>
<tr>
<td><a href="events/IFIP08/" target="_blank">WG2.4</a></td>
<td>IFIP WG2.4 meeting in Bormio</td>
</tr>
<tr>
<td><a href="http://www.dagstuhl.de/en/program/calendar/semhp/?semnr=05251" target="_blank">TfT 2005</a></td>
<td>Dagstuhl Workshop on Types for Tools</td>
</tr>
</table>
<h3>Activities</h3>
<table>
<tr>
</tr><tr>
<td><a href="http://bioconductor.org/about/advisory-board" target="_blank">Bioconductor</a></td>
<td>Scientific Advisory Board, 2017--</td>
</tr>
<tr>
<td><a href="http://www.sigplan.org/" target="_blank">SIGPLAN</a></td>
<td>Past Chair, 2015--2018</td>
</tr>
<tr>
<td><a href="http://www.sigplan.org/" target="_blank">SIGPLAN</a></td>
<td>Chair, 2012--2015</td>
</tr>
<tr>
<td><a href="http://www.aito.org/" target="_blank">AITO</a></td>
<td>Vice President, 2010--2018</td>
</tr>
<tr>
<td><a href="http://wg24.cs.uvic.ca/ContentWG24.shtml" target="_blank">IFIP WG2.4</a></td>
<td>Vice Chair, 2011--2015 </td>
</tr>
<tr>
<td><a href="http://www.cominlabs.ueb.eu/" target="_blank">Comin Labs</a></td>
<td>Member, Advisory Board, 2011--2016</td>
</tr>
<tr>
<td><a href="https://jcp.org/en/jsr/detail?id=302" target="_blank">JSR-302</a></td>
<td>Member, Expert Group, 2008--2013</td>
</tr>
<tr>
<td><a href="http://www.sigplan.org/Conferences/lctes/main" target="_blank">LCTES</a></td>
<td>Member, SC, 2011--2015</td>
</tr>
<tr>
<td><a href="http://www.sigplan.org/Conferences/icfp/main" target="_blank">ICFP</a></td>
<td>Member, SC, 2012--2015</td>
</tr>
<tr>
<td><a href="http://www.sigplan.org/Conferences/oopslas/main" target="_blank">OOPSLA</a></td>
<td>Member, SC, 2012--</td>
</tr>
<tr>
<td><a href="http://www.sigplan.org/Conferences/pldi/main" target="_blank">PLDI</a></td>
<td>Member SC, 2012--18;  Chair 2014--16</td>
</tr>
<tr>
<td><a href="http://www.sigplan.org/Conferences/popl/main" target="_blank">POPL</a></td>
<td>Member, SC, 2012--2015</td>
</tr>
<tr>
<td><a href="http://www.sigplan.org/Conferences/ismm/main" target="_blank">ISMM</a></td>
<td>Member, SC, 2010--2015</td>
</tr>
<tr>
<td><a href="http://d3s.mff.cuni.cz/conferences/jtres2010/cfp.html" target="_blank">JTRES</a></td>
<td>Member, SC, 2010--2017</td>
</tr>
<tr>
<td><a href="http://janvitek.github.io/events/TRANSACT" target="_blank">TRANSACT</a></td>
<td>Founding Member, SC, 2006--2017</td>
</tr>
<tr>
<td><a href="http://2015.ecoop.org/track/RIOT-2015-papers" target="_blank">RIOT</a></td>
<td>Founding Member, SC, 2015--</td>
</tr>
<tr>
<td><a href="http://2015.ecoop.org/track/ML4PL2015" target="_blank">ML4PL</a></td>
<td>Founding Member, SC, 2015</td>
</tr>
<tr>
<td><a href="http://wrigstad.com/stop11/" target="_blank">STOP</a></td>
<td>Founding Member, SC, 2011--</td>
</tr>
<tr>
<td class="pn-first-td"><a href="http://www.jot.fm/index.html" target="_blank">JOT</a></td>
<td>Editor in Chief, 2013--2014</td>
</tr>
</table>
</div>
<div class="col-md-4">
<h3>Invited Talks</h3>
<table>
<tr>
<td><a href="https://www.fedcsis.org/2017/speakers/jan_vitek">FedCSIS 2017</a></td>
<td>Data Analysis for the Masses. Prague <a href="https://www.youtube.com/watch?v=4yIV3OpP0tw&amp;t=846s" target="blank">Video</a>
</td> </tr>
<tr><td><a href="http://conf.researchr.org/track/scala-2016/scala-2016">Scala 2016</a></td>
<td>This Is Not A Type: Gradual Typing in Practice.  Amsterdam</td>
</tr>
<tr><td><a href="https://www.meetup.com/Boston-useR/">useR</a></td><td> Making R run fast. Greater Boston useR Group
               <a href="https://www.youtube.com/watch?v=HStF1RJOyxI">Video</a>
</td> </tr>
<tr><td><a href="">PLMW 2016</a></td>
<td>My twenty five years in OO. Amsterdam</td>
</tr><tr><td><a href="http://http://mloc-js.com/2015/">MLOC.JS 2015</a></td>
<td>Benchmarks killed the beast: Understanding JS performance
		 for fun and profit. International Large Scale JavaScript
		 Conference, Budapest</td>
</tr>
<tr><td><a href="http://plmw15.iisc-seal.net/program">PLMW 2015</a></td>
<td> Repeatability, reproducibility and rigor in CS research. 
		 Programming Language Mentoring Workshop, Mumbai  
		 <a href="https://www.youtube.com/watch?v=ii72uzciu6I">Video 1</a> <a href="https://www.youtube.com/watch?v=EAzrn2DeAL0">2</a> </td>
</tr>
<tr>
<td><a href="http://vee2014.cs.technion.ac.il" target="_blank">VEE 2014</a></td>
<td> The Case for the Three Rs of Systems Research: Repeatability, Reproducibility and Rigor</td>
</tr>
<tr>
<td><a href="http://www.srl.inf.ethz.ch/workshop2013.php" target="_blank">SCR 2013</a></td>
<td>Why JavaScript Programmers Hate You: An ode to dynamic languages. Workshop on Software Correctness and Reliability, Zurich <a href="http://www.srl.inf.ethz.ch/workshop2013/eth-vitek.pdf" target="_blank">PDF</a> <a href="http://www.youtube.com/watch?v=t3GzCwoQfb4" target="_blank">Video</a><a></a></td>
</tr>
<tr>
<td><a href="http://www.doc.ic.ac.uk/~gds/PLMW/" target="_blank">PLMW 2013</a></td>
<td>Planet Dynamic or: How I Learned to Stop Worrying and Love Reflection. SIGPLAN Programming Languages Mentoring Workshop, Rome</td>
</tr>
<tr>
<td><a href="http://types.cs.washington.edu/ftfjp2013/" target="_blank">FTFJP 2013</a></td>
<td>JavaScript Programmers Hate You.  Formal Techniques for Java-like Programs, Montpellier</td>
</tr>
<tr>
<td><a href="http://aplas12.kuis.kyoto-u.ac.jp" target="_blank">APLAS 2012</a></td>
<td>Planet Dynamic or: How I Learned to Stop Worrying and Love Reflection.  Asian Symposium on Programming Languages and Systems, Kyoto</td>
</tr>
<tr>
<td><a href="https://sites.google.com/site/aki65thbd/" targeet="_blank">Aki 2012</a></td>
<td>Thorn: Objects, Scripts and more...  Concurrent Objects and Beyond Symposium in Honor of Professor Akinori Yonezawa’s 65th Birthday, Kobe</td>
</tr>
<tr>
<td><a href="http://research.microsoft.com/en-us/events/fs2011/" target="_blank">MSR 2011</a></td>
<td>The Rise of Dynamic Languages for Scientific Computing, MSR Faculty Summit <a href="http://research.microsoft.com/apps/video/?id=152280" target="_blank">Video</a></td>
</tr>
<tr>
<td><a href="http://goedel.cs.uiowa.edu/MVD/" target="_blank">MVD 10</a></td>
<td>Is Java Ready for Real-time?  <a href="http://goedel.cs.uiowa.edu/MVD/talks/Vitek.pdf" target="_blank">PDF</a></td>
</tr>
<tr>
<td> <a href="http://research.microsoft.com/en-us/um/redmond/events/APLWACA2010/program.htm" target="_blank">APLWA 2010</a></td>
<td>Of Scripts and Programs Tall tales, Urban Legends and Future Prospects  <a href="talks/dls09.pdf" target="_blank">PDF</a></td>
</tr>
<tr>
<td><a href="http://www.dynamic-languages-symposium.org/dls-09/" target="_blank">DLS 2009</a></td>
<td>Of Scripts and Programs Tall tales, Urban Legends and Future Prospects  <a href="talks/dls09.pdf" target="_blank">PDF</a></td>
</tr>
<tr>
<td><a href="http://tools.ethz.ch/tools2009/" target="_blank">TOOLS 2009</a></td>
<td>Programming models for Real-time and Concurrency. <a href="talks/tools09.pdf" target="_blank">PDF</a></td>
</tr>
<tr>
<td><a href="http://people.cs.kuleuven.be/~dirk/ada-belgium/events/05/050630-fcs.html" target="_blank">FCS 2005</a></td>
<td>Language-based Intrusion Detection, Foundations of Computer Security</td>
</tr>
<tr>
<td> <a href="http://www.sti.uniurb.it/events/fosad04/" target="_blank">FOSAD 2004</a></td>
<td>Coordination and Security, School on Foundations of Security Analysis and Design <a href="http://www.sti.uniurb.it/events/fosad04/fosad04-coordination.pdf" target="_blank">PDF</a></td>
</tr>
</table>
<h3>Program Committees</h3>
<table>
<tr>
<td class="pn-first-td"><a href="http://www.math.nagoya-u.ac.jp/~garrigue/APLAS2014/" target="_blank">APLAS</a></td>
<td>Asian Symp. on Programming Languages and Systems, 2014</td>
</tr>
<tr>
<td><a href="http://www.sable.mcgill.ca/array/" target="_blank">ARRAY</a></td>
<td>Workshop on Libraries, Languages, and Compilers for Array Programming, 
		  <a href="http://www.sable.mcgill.ca/array/" target="_blank">2014</a>, 
		  <a href="http://conf.researchr.org/track/pldi2015/ARRAY-2015-papers" target="_blank">2015</a>,
		  <a href="http://pldi17.sigplan.org/committee/array-2017-papers-program-committee" target="_blank">2017</a>
</td>
</tr>
<tr>
<td><a href="http://www.stix.polytechnique.fr/~logozzo/WEB/Aiool.html" target="_blank">AIOOL</a></td>
<td>Workshop on Abstract Interpretation of Object-oriented Languages, 2005</td>
</tr>
<tr>
<td><a href="http://webhome.cs.uvic.ca/~ycoady/acp4is04/pc.html" target="_blank">ACP4IS</a></td>
<td>Workshop on Aspects, Components, and Patterns for Infrastructure Software, 2003, 2004</td>
</tr>
<tr>
<td><a href="http://www.cs.dartmouth.edu/ASA-MA/" target="_blank">ASA/MA</a></td>
<td>Agent Systems and Applications/ Mobile Agents, 2001</td>
</tr>
<tr>
<td><a href="http://users.ecs.soton.ac.uk/lavm/aisb/cfp.html" target="_blank">AISB</a></td>
<td>Symposium on Software mobility and adaptive behaviour, 2001</td>
</tr>
<tr>
<td><a href="http://www.sci.univr.it/~spoto/Bytecode07/" target="_blank">Bytecode</a></td>
<td>Workshop on Bytecode Semantics, Verification, Analysis and Transformation, 2007, 2008</td>
</tr>
<tr>
<td><a href="http://etaps08.mit.bme.hu/" target="_blank">CC</a></td>
<td>Conference on Compiler Construction, 2003, 2008, <a href="http://www.etaps.org/2012/cc" target="_blank">2012</a>,
<a href="http://www.etaps.org/index.php/2014/cc" target="_blank">2014</a></td>
</tr>
<tr>
<td><a href="http://www.cse.chalmers.se/~andrei/" target="_blank">CSF</a></td>
<td>Computer Security Foundations Symposium, 2008</td>
</tr>
<tr>
<td><a href="http://www-users.cs.york.ac.uk/~paige/cordie06.htm" target="_blank">CORDIE</a></td>
<td>Workshop on Concurrency, Real-Time and Distribution in Eiffel, 2006</td>
</tr>
<tr>
<td><a href="http://discotec09.di.fc.ul.pt/index.php?title=Coordination" target="_blank">COORD</a></td>
<td>Conference on Coordination Models and Languages, 2005, 2009</td>
</tr>
<tr>
<td><a href="http://www.cs.mcgill.ca/~xueliu/Confs/WCPS2009/" target="_blank">CPS</a></td>
<td>Workshop on Cyber-Physical Systems, 2008, 2009</td>
</tr>
<tr>
<td><a href="http://cd04.cs.ucl.ac.uk/" target="_blank">CD</a></td>
<td>Component Deployment, 2002, 2004</td>
</tr>
<tr>
<td><a href="http://www.podc.org/data/podc2004/JavaWorkshop-cfp.txt" target="_blank">CSJP</a></td>
<td>Workshop on Concurrency and Synchronization in Java Programs, 2004</td>
</tr>
<tr>
<td><a href="http://www.date-conference.com/" target="_blank">DATE</a></td>
<td>DATE Conference, Model Based Design of Embedded Systems track, 2010</td>
</tr>
<tr>
<td><a href="http://www.dynamic-languages-symposium.org/dls-16/index.html" target="_blank">DLS</a></td>
<td>Dynamic Language Symposium
                Conference, <a href="http://www.dynamic-languages-symposium.org/dls-10/" target="_blank">2010</a>,
                <a href="http://www.dynamic-languages-symposium.org/dls-14/index.html" target="_blank">2014</a>,
                <a href="http://www.dynamic-languages-symposium.org/dls-15/index.html" target="_blank">2015</a>, 
		<a href="http://www.dynamic-languages-symposium.org/dls-16/index.html" target="_blank">2016</a>,
		<a href="http://www.dynamic-languages-symposium.org/dls-17" target="_blank">2017</a>
</td>
</tr>
<tr>
<td><a href="events/dosws.html" target="_blank">DOSW</a></td>
<td>Distributed Object Security Workshop, 1999</td>
</tr>
<tr>
<td class="pn-first-td"><a href="https://2017.ecoop.org/" target="_blank">ECOOP</a></td>
<td>European Conference on Object-Oriented Programming, 1998, 2000, 2001, 2002, 2003, 2007, 2008, 2009, 2010, 
		  <a href="http://www.lirmm.fr/ecoop13/" target="_blank">2013</a>, <a href="http://2017.ecoop.org">2017</a><a>, </a><a href="http://2020.ecoop.org">2020</a><a>
</a></td>
</tr>
<tr>
<td><a href="http://esop09.pps.jussieu.fr/" target="_blank">ESOP</a></td>
<td>European Symposium on Programming, 2002, 2007, 2009,
                2011, <a href="http://conf.researchr.org/home/esop-2015">2015</a>,
		    <a href="http://www.etaps.org/index.php/2016/esop" target="_blank">2016</a></td>
</tr>
<tr>
<td><a href="http://www.emsoft.org/" target="_blank">EMSOFT</a></td>
<td>Conference on Embedded Software, 2011.</td>
</tr>
<tr>
<td><a href="http://cse.stfx.ca/~euc09/" target="_blank">EUC</a></td>
<td>Conference on Embedded and Ubiquitous Computing, 2009, 2010</td>
</tr>
<tr>
<td><a href="https://tc.gtisc.gatech.edu/feast17/" target="_blank">FEAST</a></td>
<td>Workshop on Forming an Ecosystem Around Software Transformation, <a href="https://tc.gtisc.gatech.edu/feast17/">2017</a></td>
</tr>
<tr>
<td><a href="http://foclasa07.lcc.uma.es/" target="_blank">FOCLASA</a></td>
<td>Foundations of Coordination Languages and Software Architectures, 2007</td>
</tr>
</table>
</div>
<div class="col-md-4">
<p class="pn-h3-like"> </p>
<table>
<tr>
<td><a href="http://fool2013.cs.brown.edu/" target="_blank">FOOL</a></td>
<td>Foundations of Object-Oriented Languages, 2013</td>
</tr>
<tr>
<td><a href="http://proton.inrialpes.fr/~depalma/GCM11/" target="_blank">GCM</a></td>
<td>Workshop on Green Computing Middleware, 2011.</td>
</tr>
<tr>
<td><a href="http://program-transformation.org/GPCE13" target="_blank">GPCE</a></td>
<td>Generative Programming: Concepts &amp; Experiences, 2013</td>
</tr>
<tr>
<td><a href="#" target="_blank">MASS</a></td>
<td>Symposium on Multi-Agent Security and Survivability, 2004</td>
</tr>
<tr>
<td><a href="http://www.cs.ru.nl/~erikpoll/ftfjp/cfp.html" target="_blank">FTfJP</a></td>
<td>Workshop on Formal Techniques for Java-like Programs, 2005</td>
</tr>
<tr>
<td><a href="http://w3.isis.vanderbilt.edu/HCSP-CPS/" target="_blank">HCSP</a></td>
<td>Workshop on High Confidence Software Platforms for Cyber-Physical Systems, 2006</td>
</tr>
<tr>
<td><a href="https://www.usenix.org/conference/hotpar13" target="_blank">HotPar</a></td>
<td>Topics in Parallelism, 2013</td>
</tr>
<tr>
<td><a href="http://soft-dev.org/events/icooolps14/" target="_blank">ICOOOLPS</a></td>
<td>Implementation, Compilation, Optimization of
                Object-Oriented Languages, Programs and Systems, 2006,
		  <a href="http://soft-dev.org/events/icooolps14/" target="_blank">2013,
		    </a><a href="http://2015.ecoop.org/track/ICOOOLPS-2015-papers" target="_blank">2015</a>,
		    <a href="http://conf.researchr.org/track/pldi-ecoop-2017/ICOOOLPS-2017-papers" target="_blank">2017</a>
</td>
</tr>
<tr>
<td><a href="https://www.cs.purdue.edu/homes/jv/var/icalp.html" target="_blank">ICALP</a></td>
<td>International Conference on Automata, Languages and Programming, 2000</td>
</tr>
<tr>
<td><a href="http://cs.au.dk/~danvy/icfp05/" target="_blank">ICFP</a></td>
<td>International Functional Programming Conference, 2005</td>
</tr>
<tr>
<td><a href="#" target="_blank">ISORC</a></td>
<td>International Symposium on Object and componentoriented Real-time Computing, 2012.</td>
</tr>
<tr>
<td><a href="http://www.multicore-systems.org/iwmse2010" target="_blank">IWMSE</a></td>
<td>International Workshop on Multicore Software Engineering, 2010</td>
</tr>
<tr>
<td><a href="http://people.dsv.su.se/~tobias/iwaco2007.html" target="_blank">IWACO</a></td>
<td>International Workshop on Aliasing, Confinement and
                  Ownership, 2003,
                  2007, <a href="http://ecs.victoria.ac.nz/Events/IWACO2011/WebHome" target="_blank">2014</a>
</td>
</tr>
<tr>
<td><a href="events/ecoopws/iwaoos" target="_blank">IWAOOS</a></td>
<td>Intercontinental Workshop on Aliasing in Object- Oriented Systems, 1999</td>
</tr>
<tr>
<td><a href="#" target="_blank">JTRes</a></td>
<td>Workshop on Java Technologies for Real-Time and Embedded
                Systems, 2008, 2007, 2006, 2005, 2004, 2003, 2008, 2009,
                2010</td>
</tr>
<tr>
<td><a href="#" target="_blank">JFLA</a></td>
<td>Journees Francophones des Langages Applicatifs, 2000, 1998, 1995</td>
</tr>
<tr>
<td><a href="http://ssw.jku.at/manlang18/" target="_blank">ManLang</a></td>
<td>International Conference on Managed Languages and Runtimes, 
		  <a href="http://d3s.mff.cuni.cz/conferences/manlang17" target="_blank">2017</a>,
  		  <a href="http://ssw.jku.at/manlang18/" target="_blank">2018</a>,
		</td>
</tr>
<tr>
<td><a href="events/ecoopws/ws00" target="_blank">MOS</a></td>
<td>Mobile Objects Systems Workshop, 2004, 2003, 2002,
                2001, <a href="events/ecoopws/ws00" target="_blank">2000</a>, <a href="events/ecoopws/ws99" target="_blank">1999</a>, <a href="events/ecoopws/ws98" target="_blank">1998</a>, <a href="events/ecoopws/ws97" target="_blank">1997</a>, <a href="events/ecoopws/ws996" target="_blank">1996</a>, <a href="events/ecoopws/ws95" target="_blank">1995</a></td>
</tr>
<tr>
<td><a href="http://faculty.uoit.ca/bradbury/sac-musepat2016/" target="_blank">MUSEPAT</a></td>
<td>Multicore Software Engineering, Performance, Applications, and Tools, <a href="http://faculty.uoit.ca/bradbury/sac-musepat2016" target="_blank">2016</a></td>
</tr>
<tr>
<td><a href="http://places09.di.fc.ul.pt/" target="_blank">PLACES</a></td>
<td>Programming Language Approaches to Concurrency and
                Communication-cEntric Software, 2009,
                2010, <a href="http://places11.di.fc.ul.pt/" target="_blank">2011</a>, <a href="http://places12.di.fc.ul.pt/" target="_blank">2012</a></td>
</tr>
<tr>
<td><a href="http://www.cs.umd.edu/~mwh/PLAS07/" target="_blank">PLAS</a></td>
<td>Workshop on Programming Languages and Analysis for Security, 2007</td>
</tr>
<tr>
<td><a href="http://unavailable.adobe.com/" target="_blank">PLASTIC</a></td>
<td>Workshop on Programming Language And Systems Technologies for Internet Clients, 2011</td>
</tr>
<tr>
<td><a href="http://cs.stanford.edu/pldi10/" target="_blank">PLDI</a></td>
<td>Programming Language Design and Implementation, 2002, 2010, <a href="http://pldi2013.ucombinator.org/" target="_blank">2013</a></td>
</tr>
<tr>
<td><a href="http://www.podc.org/podc2010/" target="_blank">PODC</a></td>
<td>Symposium on Principles of Distributed Computing, 2010</td>
</tr>
<tr>
<td><a href="http://www.cse.psu.edu/popl/11/" target="_blank">POPL</a></td>
<td>Principles of Programming Languages, 2001, 2008, 2011.</td>
</tr>
<tr>
<td><a href="http://www.wifo.uni-mannheim.de/pppj2006/" target="_blank">PPPJ</a></td>
<td>conference on Principles and Practice of Programming in Java, 2006</td>
</tr>
<tr>
<td><a href="http://2015.rtas.org/" target="_blank">RTAS</a></td>
<td>Real-Time and Embedded Technology and Applications Symposium, 2011.</td>
</tr>
<tr>
<td><a href="http://2014.rtss.org/" target="_blank">RTSS</a></td>
<td>Real-Time System Symposium, 2009, 2010, 2011.</td>
</tr>
<tr>
<td><a href="http://www.sigsac.org/sacmat2001.html" target="_blank">SACMAT</a></td>
<td>Symposium on Access Control Models and Technologies, 2001</td>
</tr>
<tr>
<td><a href="http://www.mrtc.mdh.se/SANCS15/" target="_blank">SANCS</a></td>
<td>Workshop on Software Architectures for Next-generation
                Cyber-physical
                Systems, <a href="http://www.mrtc.mdh.se/SANCS15/" target="_blank">2015</a></td>
</tr>
<tr>
<td><a href="http://lampwww.epfl.ch/~hmiller/scala2015/" target="_blank">SCALA</a></td>
<td>Scala Symposium, <a href="http://lampwww.epfl.ch/~hmiller/scala2015/" target="_blank">2015</a></td>
</tr>
<tr>
<td><a href="http://2016.ecoop.org/track/STOP-2016" target="_blank">STOP</a></td>
<td>Script to Program Evolution Workshop, <a href="http://2016.ecoop.org/track/STOP-2016" target="_blank">2016</a></td>
</tr>
<tr>
<td><a href="http://popl-obt-2014.cs.brown.edu/" target="_blank">OBT</a></td>
<td>Off-the Beaten Track, 2014</td>
</tr>
<tr>
<td><a href="http://oops.disi.unige.it/" target="_blank">OOPS</a></td>
<td>Object Oriented Programming Languages and Systems 2005, 2004</td>
</tr>
<tr>
<td><a href="http://2015.splashcon.org/" target="_blank">OOPSLA</a></td>
<td>Object-Oriented Programming Systems, Languages, and
                Applications, 2000, 2004, 2007,
                2008, <a href="http://2016.splashcon.org/">2016</a></td>
</tr>
<tr>
<td><a href="https://conf.researchr.org/track/ecoop-issta-2018/salad-2018-papers" target="_blank">SALAD</a></td>
<td>Workshop on SoftwAre debLoating And Delayering, 2018</td>
</tr>
<tr>
<td><a href="http://cs.unibo.it/~zavattar/secco04/" target="_blank">SecCo</a></td>
<td>Workshop on Security Issues in Concurrency, 2003, 2004, 2007</td>
</tr>
<tr>
<td><a href="http://ctuning.org/cm/wiki/index.php?title=Events:TRUST2014" target="_blank">TRUST</a></td>
<td>Workshop on Reproducible Research Methodologies and New Publication Models, 2014</td>
</tr>
<tr>
<td><a href="http://riotworkshop.github.io" target="_blank">RIOT</a></td>
<td>R Implementation Optimization and Tooling Workshop, 
		  <a href="http://2015.ecoop.org/track/RIOT-2015-papers" target="_blank">2015</a>,
		  <a href="http://riotworkshop.github.io" target="_blank">2016</a>, 2017</td>
</tr>
<tr>
<td><a href="http://2016.splashcon.org/track/rumple2016" target="_blank">RUMPLE</a></td>
<td>Workshop on ReUsable and Modular Programming Language
                Ecosystems, <a href="http://2016.splashcon.org/track/rumple2016" target="_blank">2016</a></td>
</tr>
<tr>
<td><a href="http://conf.researchr.org/home/vee-2018" target="_blank">VEE</a></td>
<td>Conference on Virtual Execution  Environments,
		  <a href="http://www.cs.technion.ac.il/~erez/vee11/VEE_2011/Home_Page.html" target="_blank">2011</a>,
		  <a href="http://conf.researchr.org/home/vee-2018" target="_blank">2018</a>,
		  <a href="http://conf.researchr.org/home/vee-2019" target="_blank">2019</a>
</td>
</tr>
<tr>
<td><a href="http://design.cs.iastate.edu/vmil/2013/" target="_blank">VMIL</a></td>
<td>Workshop on Virtual Machines and Intermediate Languages, 2009,
		<a href="https://2019.splashcon.org/home/vmil-2019">2019</a></td>
</tr>
<tr>
<td><a href="http://wasdett.org/2013/" target="_blank">WASDeTT</a></td>
<td>Workshop on Academic Software Development Tools and Techniques, 2013</td>
</tr>
<tr>
<td><a href="https://conf.researchr.org/track/ecoop-issta-2018/wossca-2018-papers" target="_blank">WoSSCA</a></td>
<td>Workshop on Speculative Side Channel Analysis, 2018</td>
</tr>
<tr>
<td><a href="https://www2018.thewebconf.org" target="_blank">WWW</a></td>
<td>The Web Conference, <a href="https://www2018.thewebconf.org">2018</a></td>
</tr>
</table>
</div>
</div>
<div class="row pn-grey-bg">
<div class="col-md-12">
<h2 class="pn-courier-bold" id="pn-anchor-projects">[projects]</h2>
</div>
<div class="col-md-4">
<h3>Active</h3>
<table>
<tr>
<td><a href="https://plg.uwaterloo.ca/~dynjs/" target="_blank"><img alt="Dynjs" src="img/dynjs.png"/></a></td>
<td>Analyze the dynamic behavior of JavaScript programs and
		its implications on analyses and security. Code available
		for JSBench and JSLocker. Data available for our analysis
		papers.</td>
</tr>
<tr>
<td><a href="http://www.fiji-systems.com/" target="_blank"><img alt="Fiji" src="img/fiji.gif" width="70"/></a></td>
<td> The Fiji real-time JVM and Fiji C1 compiler run on on a
		broad range of HW/OS (ARM, PowerPC and x86, RTEMS, Linux,
		Darwin), with deterministic garbage collection, or safe
		GC-less allocation. Allow to create mixed-criticality
		systems with isolation and partitioning. </td>
</tr>
<tr>
<td><a href="https://github.com/allr/" target="_blank">AllR</a></td>
<td>Tools related to the R programming language including
		the Purdue implementation of the FastR virtual machine
		(2014), timeR, testR and benchR. Code and data available.
		FastR has been transitionned to Oracle.</td>
</tr>
</table>
</div>
<div class="col-md-4">
<h3>History</h3>
<table>
<tr>
<td><a href="https://www.cs.purdue.edu/sss/projects/aj/">AJ</a></td>
<td>Data-centric concurrency control for Java using
		atomic-sets. Project completed in 2013 in collaboration with
		IBM research. Data available.</td>
</tr>
<tr>
<td><a href="http://sourceforge.net/projects/flexotask/">FlexoTasks</a></td>
<td>Very low latency real-time streaming in Java. Project
		completed in 2010 in collaboration with IBM research. Code
		and data available.</td>
</tr>
<tr>
<td><a href="soft/Thorn.webarchive" target="_blank"><img alt="Thorn" src="img/thorn_logo3.png" width="60"/></a></td>
<td>Thorn is a dynamically-typed concurrent language in
		which lightweight isolated processes communicate by message
		passing. Thorn includes aggregate data types, class-based
		objects, first-class functions, modules, and features for
		gradual evolution of scripts to programs.  Completed in
		2010.  </td>
</tr>
<tr>
<td><a href="soft/ovm/" target="_blank"><img alt="Ovm" src="img/ovm.png" width="60"/></a></td>
<td>The Ovm project aims to develop a customizable framework
		for research in virtual machines and object-oriented
		programming language runtime systems. Completed in
		2009. Code available.</td>
</tr>
</table>
</div>
<div class="col-md-4">
<table>
<tr>
<td><a href="https://www.cs.purdue.edu/sss/projects/oscj/" target="_blank"><img alt="oSCJ" src="img/oscj.jpg" width="60"/></a></td>
<td>An open-source implementation of a subset of
		Safety-Critical Java. Completed in 2010. Code
		available.</td>
</tr>
<tr>
<td><a href="https://www.cs.purdue.edu/sss/projects/cdx/" target="_blank">CDx</a></td>
<td>CDx is an open source application benchmark suite that
		targets hard and soft real-time Java virtual
		machines. Completed in 2009. Code and data available.</td>
</tr>
<tr>
<td><a href="https://www.cs.purdue.edu/news/1-12-06scaneagle.htm" target="_blank"><img alt="Prismj" src="img/jaop.png" width="45"/> </a></td>
<td>Real-time Java controls for a ScanEagle UAV. Winner of
		DUKE's Choice award. Completed in 2005.</td>
</tr>
<tr>
<td><a href="http://lpd.epfl.ch/transactions/wiki/doku.php?id=stmbench7" target="_blank">stmbench7</a></td>
<td> A benchmark for evaluating software transactional
		memory implementations. The benchmark aims at providing a
		workload that is both realistic and non-trivial to
		scale. Code available. Completed in 2007.</td>
</tr>
<tr>
<td><a href="soft/mba/mba.html"><img alt="MBA" src="soft/mba/mba.png" width="60"/></a></td>
<td>MBA is a Java program for automated assignment and
		assessment of uncertainty of protein backbone NMR.
		Completed in 2006. Code and data available.</td>
</tr>
</table>
</div>
</div>
<div class="row pn-transparent-bg">
<div class="col-md-12">
<h2 class="pn-courier-bold" id="pn-anchor-publications">[publications]</h2>
</div>
<div class="col-md-12">
<ul class="pn-ul-triangle">
<li class="pn-journal"><div>
<div class="pn-publications">
<a class="pn-link"><span class="pn-publications-span">
<strong>OOPSLA 2019</strong></span>Scala Implicits are
			Everywhere: A large-scale study of the use of
			Implicits in the wild</a>
<div class="pn-readmore"> <br/>
<strong>Authors</strong>: Filip Krikava, Heather
                      Muller, Jan Vitek. <br/>
<strong>Abstract</strong>: The Scala programming
                      language offers two distinctive language features
                      implicit parameters and implicit conversions, often
                      referred together as implicits. Announced without
                      fanfare in 2004, implicits have quickly grown to
                      become a widely and pervasively used feature of the
                      language. They provide a way to reduce the boilerplate
                      code in Scala programs. They are also used to
                      implement certain language features without having to
                      modify the compiler. We report on a large-scale study
                      of the use of implicits in the wild. For this, we
                      analyzed 7,280 Scala projects hosted on GitHub,
                      spanning over 8.1M call sites involving implicits and
                      370.7K implicit declarations across 18.7M lines of
                      Scala code. <br/>
<strong>Venue</strong>: PACM PL: Conference on
		      Object-Oriented Programming Languages, Systems and
		      Applications (OOPSLA)<br/>
<a href="pubs/oopsla19b.pdf" target="_blank"><button class="btn btn-default btn-xs pn-download" type="button">PDF</button></a>
<strong>DOI</strong>: 
		      <a href="https://doi.org/10.1145/3360589" target="_blank">10.1145/3360589</a>
<strong>Artifact</strong>:
		      <a href="https://doi.org/10.5281/zenodo.3369436">
			10.5281/zenodo.3369436</a>
<strong>Video:</strong>
<a href="https://www.youtube.com/watch?v=g9KtbKoDTLo&amp;feature=youtu.be">YouTube</a><br/><br/>
</div>
</div>
</div>
</li>
<li class="pn-journal"><div>
<div class="pn-publications">
<a class="pn-link"><span class="pn-publications-span">
<strong>OOPSLA 2019</strong></span>On the Design,
			Implementation and Use of Laziness in R</a>
<div class="pn-readmore"> <br/>
<strong>Authors</strong>: Aviral Goel, Jan Vitek. <br/>
<strong>Abstract</strong>: The R programming language
		      has been lazy for over twenty five years. This paper
		      presents a review of the design and implementation of
		      call-by-need in R, and a data-driven study of how
		      generations of programmers have put laziness to use in
		      their code. We analyze 16,707 libraries and observe
		      the creation of 270.9 B promises. Our data suggests
		      that there is little supporting evidence to assert
		      that programmers use laziness to avoid unnecessary
		      computation or to operate over infinite data
		      structures. For the most part R code appears to have
		      been written without reliance on, and in many cases
		      even knowledge of, delayed argument evaluation. The
		      only significant exception is a small number of
		      packages and core libraries which leverage
		      call-by-need for meta-programming.<br/>
<strong>Venue</strong>: PACM PL: Conference on
		      Object-Oriented Programming Languages, Systems and
		      Applications (OOPSLA)<br/>
<a href="pubs/oopsla19a.pdf" target="_blank"><button class="btn btn-default btn-xs pn-download" type="button">PDF</button></a>
<strong>DOI</strong>: 
		      <a href="https://doi.org/10.1145/3360579" target="_blank">10.1145/3360579</a>
<strong>Artifact</strong>: 
		      <a href="https://doi.org/10.5281/zenodo.3369573">
			10.5281/zenodo.3369573</a><br/>
<strong>Video:</strong>
<a href="https://www.youtube.com/watch?v=qLxz9HPP6wI&amp;feature=youtu.be">YouTube</a><br/><br/>
</div>
</div>
</div>
</li>
<li class="pn-conferences"><div>
<div class="pn-publications">
<a class="pn-link">
<span class="pn-publications-span">
<strong>DLS 2019</strong>
</span>R Melts Brains: An IR for First-Class
		     Environments and Lazy Effectful Arguments</a>
<div class="pn-readmore"> <br/>
<strong>Authors</strong>: Olivier Flückige, Ming-Ho
                      Yee, Guido Chari, Jakob Hain, Jan Ječmen, Jan
                      Vitek <br/>
<strong>Abstract</strong>: The R programming language
		     combines a number of features considered hard to
		     analyze and implement efficiently: dynamic typing,
		     reflection, lazy evaluation, vectorized primitive
		     types, first-class closures, and extensive use of
		     native code.  Additionally, variable scopes are reified
		     at runtime as first-class environments.  The
		     combination of these features renders most static
		     program analysis techniques impractical, and thus,
		     compiler optimizations based on them ineffective.  We
		     present our work on PIR, an intermediate representation
		     with explicit support for first-class environments and
		     effectful lazy evaluation.  We describe two dataflow
		     analyses on PIR: the first enables reasoning about
		     variables and their environments, and the second infers
		     where arguments are evaluated.  Leveraging their
		     results, we show how to elide environment creation and
		     inline functions.<br/>
<strong>Venue</strong>: 
		      Dynamic Language Symposium (DLS)<br/>
<strong>DOI</strong>: 
		      <a href="https://doi.org/10.1145/3276945.3276946" target="_blank">10.1145/3276945.3276946</a>
<a href="pubs/dls19.pdf" target="_blank"><button class="btn btn-default btn-xs pn-download" type="button">PDF</button></a>
<strong>Artifact:</strong> <a href="https://github.com/reactorlabs/rir">github.com/reactorlabs/rir</a>
<strong>Video:</strong>
<a href="https://www.youtube.com/watch?v=I9GIdWsm_u8&amp;list=PLyrlk8Xaylp6NnMlpuxab1yZBVYPNhu_4&amp;index=6&amp;t=0s">Youtube</a><a><br/>
</a></div>
</div>
</div>
</li>
<li class="pn-conferences"><div>
<div class="pn-publications">
<a class="pn-link">
<span class="pn-publications-span">
<strong>ECOOP 2019</strong>
</span>Julia's efficient algorithm for subtyping unions
		     and covariant tuples</a>
<div class="pn-readmore"> <br/>
<strong>Authors</strong>: Benjamin Chung, 
                      Francesco Zappa Nardelli, Jan Vitek <br/>
<strong>Abstract</strong>: The Julia programming
		      language supports multiple dispatch and provides a
		      rich type annotation language to specify method
		      applicability. When multiple methods are applicable
		      for a given call, Julia relies on subtyping between
		      method signatures to pick the correct method to
		      invoke. Julia’s subtyping algorithm is surprisingly
		      complex, and determining whether it is correct remains
		      an open question. In this paper, we focus on one piece
		      of this problem: the interaction between union types
		      and covariant tuples. Previous work normalized unions
		      inside tuples to disjunctive normal form. However,
		      this strategy has two drawbacks: complex type
		      signatures induce space explosion, and interference
		      between normalization and other features of Julia’s
		      type system. In this paper, we describe the algorithm
		      that Julia uses to compute subtyping between tuples
		      and unions—an algorithm that is immune to space
		      explosion and plays well with other features of the
		      language. We prove this algorithm correct and complete
		      against a semantic-subtyping denotational model in
		      Coq.<br/>
<strong>Venue</strong>: European Conference on
                      Object-Oriented Programming (ECOOP)<br/>
<strong>DOI</strong>: <a href="https://dx.doi.org/10.4230/LIPIcs.ECOOP.2019.24" target="_blank">10.4230/LIPIcs.ECOOP.2019.24</a>
<a href="pubs/ecoop19.pdf" target="_blank"><button class="btn btn-default btn-xs pn-download" type="button">PDF</button></a>
<strong>Artifact:</strong> <a href="https://dx.doi.org/10.4230/DARTS.5.2.8">dx.doi.org/10.4230/DARTS.5.2.8</a>
<strong>Video:</strong> <a href="https://www.youtube.com/watch?v=1FD-sRAiyh4">Youtube</a><br/>
</div>
</div>
</div>
</li>
<li class="pn-journal"><div>
<div class="pn-publications">
<a class="pn-link"><span class="pn-publications-span">
<strong>TOPLAS 2019</strong></span>On the Impact of Programming Languages on Code Quality</a>
<div class="pn-readmore"> <br/>
<strong>Authors</strong>: Emery D. Berger, Celeste
                      Hollenbeck, Petr Maj, Olga Vitek, Jan Vitek. <br/>
<strong>Abstract</strong>: In a 2014 paper, Ray,
		      Posnett, Devanbu, and Filkov claimed to have uncovered
		      a statistically significant association between eleven
		      programming languages and software defects in 729
		      projects hosted on GitHub.  Specifically, their work
		      answered four research questions relating to software
		      defects and programming languages. With data and code
		      provided by the authors, the present paper first
		      attempts to conduct an experimental repetition of the
		      original study. The repetition is only partially
		      successful, due to missing code and issues with the
		      classification of languages. The second part of this
		      work focuses on their main claim, the association
		      between bugs and languages, and performs a complete,
		      independent reanalysis of the data and of the
		      statistical modeling steps undertaken by Ray et al. in
		      2014. This reanalysis uncovers a number of serious
		      flaws which reduce the number of languages with an
		      association with defects down from eleven to only
		      four.  Moreover, the practical effect size is
		      exceedingly small. These results thus undermine the
		      conclusions of the original study. Correcting the
		      record is important, as many subsequent works have
		      cited the 2014 paper and have asserted, without
		      evidence, a causal link between the choice of
		      programming language for a given task and the number
		      of software defects. Causation is not supported by the
		      data at hand; and, in our opinion, even after fixing
		      the methodological flaws we uncovered, too many
		      unaccounted sources of bias remain to hope for a
		      meaningful comparison of bug rates across
		      languages.<br/>
<strong>Venue</strong>: ACM Tansactions on Programming
		      Languages (TOPLAS)<br/>
<strong>DOI</strong>: <a href="https://dx.doi.org/10.1145/3340571" target="_blank">10.1145/3340571</a>
<a href="pubs/toplas19.pdf" target="_blank"><button class="btn btn-default btn-xs pn-download" type="button">PDF</button></a>
<strong>Artifact:</strong>
<a href="https://github.com/PRL-PRG/TOPLAS19_145_Artifact">github.com/PRL-PRG/TOPLAS19_145_Artifact</a>
<strong>Video:</strong> <a href="https://www.youtube.com/watch?v=ePCpq0AMyVk">CurryOn version</a>
<a href="https://www.youtube.com/watch?v=8tG4LawDYI8&amp;feature=youtu.be">OOPSLA version (short)</a><br/>
</div>
</div>
</div>
</li>
<li class="pn-journal"><div>
<div class="pn-publications">
<a class="pn-link"><span class="pn-publications-span">
<strong>TECS 2019</strong></span>Can Android Run on
		      Time? Extending and Measuring the Android Platform's
		      Timeliness</a>
<div class="pn-readmore"> <br/>
<strong>Authors</strong>: 
		      Yin Yan, Girish Gokul, Karthik Dantu, Steven Y. Ko, 
		      Lukasz Ziarek, and Jan Vitek. <br/>
<strong>Abstract</strong>: Time predictability is
                      difficult to achieve in the complex, layered execution
                      environments that are common in modern embedded
                      devices such as smartphones. We explore adopting the
                      Android programming model for a range of embedded
                      applications that extends beyond mobile devices, under
                      the constraint that changes to widely used libraries
                      should be minimized. The challenges we explore
                      include: the interplay between real-time activities
                      and the rest of the system, how to express the
                      timeliness requirements of components, and how well
                      those requirements can be met on stock embedded
                      platforms. We detail the design and implementation of
                      our modifications to the Android framework along with
                      a real-time VM and OS, and provide experimental data
                      validating feasibility over five applications.<br/>
<strong>Venue</strong>: Transactions on Embedded Computing
                      Systems (TECS)<br/>
<strong>DOI</strong>: <a href="https://dx.doi.org/10.1145/3289257" target="_blank">10.1145/3289257</a>
<a href="pubs/tecs18.pdf" target="_blank"><button class="btn btn-default btn-xs pn-download" type="button">PDF</button></a><br/>
</div>
</div>
</div>
</li>
<li class="pn-journal"><div>
<div class="pn-publications">
<a class="pn-link"><span class="pn-publications-span">
<strong>JFP 2019</strong></span> How to Evaluate
			the Performance of Gradual Type Systems</a>
<div class="pn-readmore"> <br/>
<strong>Authors</strong>: Ben Greenman, Asumu Takikawa,
		      Max S. New, Daniel Felty, Robert Bruce Findler,
		      Jan Vitek and Matthias Felleisen. <br/>
<strong>Abstract</strong>: A sound gradual type
		      system ensures that untyped components of a program
		      can never break the guarantees of statically typed
		      components. This assurance relies on runtime checks,
		      which in turn impose performance overhead in
		      proportion to the frequency and nature of interaction
		      between typed and untyped components.  The literature
		      on gradual typing lacks rigorous descriptions of
		      methods for measuring the performance of gradual
		      type systems. This gap has consequences for the
		      implementors of gradual type systems and developers
		      who use such systems. Without systematic evaluation of
		      mixed-typed programs, implementors cannot precisely
		      determine how improvements to a gradual type system
		      affect performance. Developers cannot predict whether
		      adding types to part of a program will significantly
		      degrade (or improve) its performance.  This paper
		      presents the first method for evaluating the
		      performance of sound gradual type systems. The method
		      quantifies both the absolute performance of a gradual
		      type system and the relative performance of two
		      implementations of the same gradual type system. To
		      validate the method, the paper reports on its
		      application to twenty programs and three
		      implementations of Typed Racket.<br/>
<strong>Venue</strong>: Journal of Functional
		      Programs (JFP)<br/>
<strong>DOI</strong>: <a href="https://dx.doi.org/12.1017/Spring 200956796818000217" target="_blank">10.1017/Spring 200956796818000217</a>
<a href="pubs/jfp18.pdf" target="_blank"><button class="btn btn-default btn-xs pn-download" type="button">PDF</button></a><br/>
</div>
</div>
</div>
</li>
<li class="pn-journal"><div>
<div class="pn-publications">
<a class="pn-link"><span class="pn-publications-span">
<strong>TOPLAS 2019</strong></span>Feature-Specific
			Profiling</a>
<div class="pn-readmore"> <br/>
<strong>Authors</strong>: Leif Andersen, Vincent
                      St-Amour, Jan Vitek, Matthias Felleisen. <br/>
<strong>Abstract</strong>: While high-level languages
		      come with significant readability and maintainability
		      benefits, their performance remains difficult to
		      predict. For example, programmers may unknowingly use
		      language features inappropriately, which cause their
		      programs to run slower than expected. To address this
		      issue, we introduce feature-specific profiling, a
		      technique that reports performance costs in terms of
		      linguistic constructs. Festure-specific profilers help
		      programmers find expensive uses of specific features
		      of their language. We describe the architecture of a
		      profiler that implements our approach, explain
		      prototypes of the profiler for two languages with
		      different characteristics and implementation
		      strategies, and provide empirical evidence for the
		      approach’s general usefulness as a performance
		      debugging tool.<br/>
<strong>Venue</strong>: ACM Tansactions on Programming
		      Languages (TOPLAS)<br/>
<strong>DOI</strong>: <a href="https://dx.doi.org/10.1145/3275519" target="_blank">10.1145/3275519</a>
<a href="pubs/toplas18.pdf" target="_blank"><button class="btn btn-default btn-xs pn-download" type="button">PDF</button></a><br/>
</div>
</div>
</div>
</li>
<li class="pn-journal"><div>
<div class="pn-publications">
<a class="pn-link"><span class="pn-publications-span">
<strong>JAR 2018</strong></span>Verifying a Concurrent
			Garbage Collector with a Rely-Guarantee
			Methodology</a>
<div class="pn-readmore"> <br/>
<strong>Authors</strong>: 
		      Yannick Zakowski, David Cachera, Delphine Demange,
		      Gustavo Petri, David Pichardie,
		      Suresh Jagannathan and Jan Vitek. <br/>
<strong>Abstract</strong>: Concurrent garbage
                      collection algorithms are a challenge for program
                      verification. In this paper, we address this problem
                      by proposing a mechanized proof methodology based on
                      the Rely-Guarantee proof technique. We design a
                      compiler intermediate representation with strong type
                      guarantees, dedicated support for abstract concurrent
                      data structures, and high-level iterators on runtime
                      internals. In addition, we define an Rely-Guarantee
                      program logic supporting an incremental proof
                      methodology where annotations and invariants can be
                      progressively enriched. We formalize the intermediate
                      representation, the proof system, and prove the
                      soundness of the methodology in the Coq proof
                      assistant. Equipped with this, we prove a fully
                      concurrent garbage collector where mutators never have
                      to wait for the collector.<br/>
<strong>Venue</strong>: Journal of Automated
		      Reasoning (JAR)<br/>
<strong>DOI</strong>: <a href="https://doi.org/10.1007/s10817-018-9489-x" target="_blank">https://doi.org/10.1007/s10817-018-9489-x</a>
<a href="pubs/jar18.pdf" target="_blank"><button class="btn btn-default btn-xs pn-download" type="button">PDF</button></a><br/>
</div>
</div>
</div>
</li>
<li class="pn-journals">
<div>
<div class="pn-publications">
<a class="pn-link"><span class="pn-publications-span"><strong>OOPSLA 2018</strong></span>
                    Julia: Dynamism and Performance Reconciled by Design  </a>
<div class="pn-readmore"> <br/>
<strong>Authors</strong>: Benjamin Chung, Lionel
		      Zoubritzky, Jeff Bezanson, Stefang Karpinski, Viral
		      Shah, Jan Vitek <br/>
<strong>Abstract</strong>: Julia is a programming
		      language for the scientific community that combines
		      features of productivity languages, such as Python or
		      MATLAB, with characteristics of performance-oriented
		      languages, such as C++ or Fortran.  Julia has many
		      productivity features: dynamic typing, automatic
		      memory management, rich type annotations, and multiple
		      dispatch. At the same time, it lets programmers
		      control memory layout and uses a specializing
		      just-in-time compiler that eliminates some of the
		      overhead of those features. This paper details these
		      choices, and reflects on their implications for
		      performance and usability.<br/>
<strong>Venue</strong>: PACM PL: Conference on
		      Object-Oriented Programming Languages, Systems and
		      Applications (OOPSLA)<br/>
<strong>DOI</strong>:          
		      <a href="https://dx.doi.org/10.1145/3276490" target="_blank">10.1145/3276490</a>
<a href="pubs/oopsla18b.pdf" target="_blank"><button class="btn btn-default btn-xs pn-download" type="button">PDF</button></a>
</div>
</div>
</div>
</li>
<li class="pn-journals">
<div>
<div class="pn-publications">
<a class="pn-link"><span class="pn-publications-span">
<strong>OOPSLA 2018</strong></span>
                     Julia Subtyping: A Rational Reconstruction </a>
<div class="pn-readmore"> <br/>
<strong>Authors</strong>: Francesco Zappa Nardelli,
		      Artem Pelenitsyn, Julia Belyakova, Benjamin Chung,
		      Jeff Bezanson, Jan Vitek<br/>
<strong>Abstract</strong>: Programming languages that
		      support multiple dispatch rely on an expressive notion
		      of subtyping to specify method applicability. In these
		      languages, type annotations on method declarations are
		      used to select, out of a potentially large set of
		      methods, the one that is most appropriate for a
		      particular tuple of arguments. Julia is a language for
		      scientific computing built around multiple dispatch
		      and an expressive subtyping relation. This paper
		      provides the first formal definition of Julia’s
		      subtype relation and motivates its design. We validate
		      our specification empirically with an implementation
		      of our definition that we compare against the existing
		      Julia implementation on a collection of real-world
		      programs. Our subtype implementation differs on 122
		      subtype tests out of 6,014.476. The first 120
		      differences are due to a bug in Julia that was fixed
		      once reported; the remaining 2 are under
		      discussion.<br/>
<strong>Venue</strong>: PACM PL: Conference on
		      Object-Oriented Programming Languages, Systems and
		      Applications (OOPSLA)<br/>
<strong>DOI</strong>:          
		      <a href="https://dx.doi.org/10.1145/3276483" target="_blank">10.1145/3276483</a>
<a href="pubs/oopsla18a.pdf" target="_blank"><button class="btn btn-default btn-xs pn-download" type="button">PDF</button></a>
</div>
</div>
</div>
</li>
<li class="pn-conferences"><div>
<div class="pn-publications">
<a class="pn-link"><span class="pn-publications-span">
<strong>DLS 2018</strong></span>Self-Contained
			Development Environments                 </a>
<div class="pn-readmore"> <br/>
<strong>Authors</strong>:  Guido Chari, Javeier Pimas,
		      Olivier Fluckiger, Jan Vitek<br/>
<strong>Abstract</strong>: Operating systems are
		      traditionally implemented in low-level,
		      performance-oriented programming languages. These
		      languages typically rely on minimal runtime support
		      and provide unfettered access to the underlying
		      hardware. Tradition has benefits: developers control
		      the resources that the operating system manages and
		      few performance bottle-necks cannot be overcome with
		      clever feats of programming. On the other hand, this
		      makes operating systems harder to understand and
		      maintain. Furthermore, those languages have few
		      built-in barriers against bugs. This paper is an
		      experiment in side-stepping operating systems, and
		      pushing functionality into the runtime of high-level
		      programming languages. The question we try to answer
		      is how much support is needed to run an application
		      written in, say, Smalltalk or Python on bare metal,
		      that is, with no underlying operating system. We
		      present a framework named NopSys that allows this, and
		      we validate it with the implementation of CogNos a
		      Smalltalk virtual machine running on bare x86
		      hardware. Experimental results suggest that this
		      approach is promising.<br/>
<strong>Venue</strong>: Dynamic Language Symposium (DLS)<br/>
<strong>DOI</strong>: <a href="https://dx.doi.org/10.1145/3276945.3276948" target="_blank">10.1145/3276945.3276948</a>
<a href="pubs/dls18.pdf" target="_blank"><button class="btn btn-default btn-xs pn-download" type="button">PDF</button></a><br/>
</div>
</div>
</div>
</li>
<li class="pn-conferences"><div>
<div class="pn-publications">
<a class="pn-link"><span class="pn-publications-span">
<strong>ISSTA 2018</strong></span>Tests from Traces:
                    Automated Unit Test Extraction for R</a>
<div class="pn-readmore"> <br/>
<strong>Authors</strong>: Filip Krikava, Jan Vitek <br/>
<strong>Abstract</strong>: Unit tests are
		      labor-intensive to write and maintain. This paper
		      looks into the possibility of automatically generating
		      unit tests for a target software package from the
		      execution traces of client code and examples. Our
		      objective is to reduce the effort involved in creating
		      test suites while minimizing the number and size of
		      individual tests, and maximizing coverage. To evaluate
		      the viability of our approach, we select a challenging
		      target for automated test generation, namely R, a
		      programming language that is popular for data science
		      applications. The challenges presented by R are its
		      extreme dynamism and lack of types. This combination
		      decrease the efficacy of traditional test generation
		      techniques. We present Genthat, a tool developed over
		      the last couple of years to non-invasively record
		      execution traces of R programs and extract unit tests
		      from those traces. We have carried out an evaluation
		      on 1,547 packages comprising 1.7M lines of R code. The
		      tests generated by Genthat improved code coverage from
		      the original rather low value of 267,113 lines to
		      704,450 lines.<br/>
<strong>Venue</strong>: International Symposium on
                      Software Testing and Analysis (ISSTA)<br/>
<strong>DOI</strong>: <a href="https://dx.doi.org/10.1145/3213846.3213863" target="_blank">10.1145/3213846.3213863</a>
<a href="pubs/issta18.pdf" target="_blank"><button class="btn btn-default btn-xs pn-download" type="button">PDF</button></a><br/>
</div>
</div>
</div>
</li>
<li class="pn-conferences"><div>
<div class="pn-publications">
<a class="pn-link">
<span class="pn-publications-span">
<strong>ECOOP 2018</strong>
</span>KafKa: Gradual Typing for Objects</a>
<div class="pn-readmore"> <br/>
<strong>Authors</strong>: Benjamin Chung, Paley Li,
                      Francesco Zappa Nardelli, Jan Vitek <br/>
<strong>Abstract</strong>: The enduring popularity of
                      dynamically typed languages has motivated research on
                      gradual type systems to allow developers to annotate
                      legacy dynamic code piecemeal. Type soundness for a
                      program which contains a mixture of typed and untyped
                      code cannot mean the traditional absence of
                      errors. While some errors will be caught at type
                      checking time, other errors will only be caught as the
                      program executes. After a decade of research it there
                      are still a number of competing approaches to
                      providing gradual type support for object-oriented
                      languages. We introduce a framework for comparing
                      gradual type systems, combining a common source
                      languages with KafKa, a core calculus for
                      object-oriented gradual typing. KafKa decouples the
                      semantics of gradual typing from those of the source
                      language. KafKa is strongly typed in order to
                      highlight where dynamic operations are required. We
                      illustrate our approach by translating idealizations
                      of four different gradually typed semantics into the
                      core calculus and discuss the implications of their
                      respective designs.<br/>
<strong>Venue</strong>: European Conference on
                      Object-Oriented Programming (ECOOP)<br/>
<strong>DOI</strong>: <a href="https://dx.doi.org/10.4230/LIPIcs.ECOOP.2018.12" target="_blank">10.4230/LIPIcs.ECOOP.2018.12</a>
<a href="pubs/ecoop18.pdf" target="_blank"><button class="btn btn-default btn-xs pn-download" type="button">PDF</button></a><br/>
</div>
</div>
</div>
</li>
<li class="pn-conferences">
<div>
<div class="pn-publications">
<a class="pn-link"><span class="pn-publications-span"><strong>ESOP 2018</strong></span>Soundness
                    of a Concurrent Collector for Actors</a>
<div class="pn-readmore">
<br/>
<strong>Authors</strong>: Juliana Franco, Sylvan Clebsch, Sophia Drossopoulou,
		      Jan Vitek, Tobias Wrigstad <br/>
<strong>Abstract</strong>: ORCA is a garbage
                      collection protocol for actor-based programs. Multiple
                      actors may mutate the heap while the collector is
                      running without any dedicated synchronisation. ORCA is
                      applicable to any actor language whose type system
                      prevents data races and which supports causal message
                      delivery. We present a model of ORCA which is
                      parametric to the host language and its type
                      system. We describe the interplay between the host
                      language and the collector. We give invariants
                      preserved by ORCA, and prove its soundness and
                      completeness.<br/>
<strong>Venue</strong>: European Symposium on Programming (ESOP)<br/>
<strong>DOI</strong>: <a href="https://dx.doi.org/10.1007/978-3-319-89884-1_31" target="_blank">10.1007/978-3-319-89884-1_31</a>
<a href="pubs/esop18.pdf" target="_blank"><button class="btn btn-default btn-xs pn-download" type="button">PDF</button></a><br/>
</div>
</div>
</div>
</li>
<li class="pn-journals">
<div>
<div class="pn-publications">
<a class="pn-link"><span class="pn-publications-span">
<strong>POPL 2018</strong></span> Correctness of
		      Speculative Optimizations with Dynamic
		      Deoptimization</a>
<div class="pn-readmore">
<br/>
<strong>Authors</strong>: Olivier Fluckiger, Gabriel
		      Scherer, Ming-Ho Yee, Aviral Goel, Amal Ahmed and Jan
		      Vitek<br/>
<strong>Abstract</strong>: High-performance dynamic
                      language implementations make heavy use of speculative
                      optimizations to achieve speeds close to statically
                      compiled languages. These optimizations are typically
                      performed by a just-in-time compiler that generates
                      code under a set of assumptions about the state of the
                      program and its environment. In certain cases, a
                      program may execute code compiled under assumptions
                      that are no longer valid. The implementation must then
                      deoptimize the program on-the-fly; this entails
                      finding semantically equivalent code that does not
                      rely on invalid assumptions, translating program state
                      to that expected by the target code, and transferring
                      control. This paper looks at the interaction between
                      optimization and deoptimization, and shows that
                      reasoning about speculation is surprisingly easy when
                      assumptions are made explicit in the program
                      representation. This insight is demonstrated on a
                      compiler intermediate representation, named sourir,
                      modeled after the high-level representation for a
                      dynamic language. Traditional compiler optimizations
                      such as constant folding, unreachable code
                      elimination, and function inlining are shown to be
                      correct in the presence of assumptions. Furthermore,
                      the paper establishes the correctness of compiler
                      transformations specific to deoptimization: namely
                      unrestricted deoptimization, predicate hoisting, and
                      assume composition.<br/>
<strong>Venue</strong>: PACM PL: Symposium on
		      Principles of Programming Languages (POPL)<br/>
<strong>DOI</strong>: 
		      <a href="https://doi.org/10.1145/3158137" target="_blank">10.1145/3158137</a>
<a href="pubs/popl18.pdf" target="_blank">
<button class="btn btn-default btn-xs pn-download" type="button">PDF</button></a>
</div>
</div>
</div>
</li>
<li class="pn-journals">
<div>
<div class="pn-publications">
<a class="pn-link"><span class="pn-publications-span"><strong>OOPSLA 2017</strong></span>Dej́à Vu: A Map of Code Duplicates on GitHub</a>
<div class="pn-readmore">
<br/>
<strong>Authors</strong>: Crista Lopes, Petr Maj,
                       Pedro Martins, Di Yang, Jakub Zitny, Hitesh Sajnani,
                       Jan Vitek<br/>
<strong>Abstract</strong>: Previous studies have shown
		      that there is a non-trivial amount of duplication in
		      source code. This paper analyzes a corpus of 4.5
		      million non-fork projects hosted on GitHub
		      representing over 428 million les written in Java,
		      C++, Python, and JavaScript. We found that this corpus
		      has a mere 85 million unique les. In other words, 70%
		      of the code on GitHub consists of clones of previously
		      created les. There is considerable variation between
		      language ecosystems. JavaScript has the highest rate
		      of le duplication, only 6% of the les are
		      distinct. Java, on the other hand, has the least
		      duplication, 60% of les are distinct. Lastly, a
		      project-level analysis shows that between 9% and 31%
		      of the projects contain at least 80% of les that can
		      be found elsewhere. These rates of duplication have
		      implications for systems built on open source software
		      as well as for researchers interested in analyzing
		      large code bases. As a concrete artifact of this
		      study, we have created DéjàVu, a publicly available
		      map of code duplicates in GitHub repositories.<br/>
<strong>Venue</strong>: PACM PL: Conference on
		      Object-Oriented Programming Languages, Systems and
		      Applications (OOPSLA)<br/>
<strong>DOI</strong>:          
 <a href="https://dx.doi.org/10.1145/3133908" target="_blank">10.1145/3133908</a>
<a href="pubs/oopsla17b.pdf" target="_blank"><button class="btn btn-default btn-xs pn-download" type="button">PDF</button></a>
</div>
</div>
</div>
</li>
<li class="pn-journals">
<div>
<div class="pn-publications">
<a class="pn-link"><span class="pn-publications-span"><strong>OOPSLA 2017</strong></span> Orca:  GC and Type System Co-Design for Actor Languages</a>
<div class="pn-readmore"> <br/>
<strong>Authors</strong>: Sylvain Clebsch, Juliana
                      Franco, Sophia Drossopoulou, Albert Mingkun Yang,
                      Tobias Wrigstad, Jan Vitek<br/>
<strong>Abstract</strong>: Orca is a concurrent and
                      parallel garbage collector for actor programs, which
                      does not require any stop-the-world steps, or
                      synchronisation mechanisms, and which has been
                      designed to support zero-copy message passing and
                      sharing of mutable data. Orca is part of the runtime
                      of the actor-based language Pony. Pony’s runtime was
                      co-designed with the Pony language. This co-design
                      allowed to exploit certain language properties in
                      order to optimise performance of garbage
                      collection. Namely, Orca relies on the absence of race
                      conditions in order to avoid read/write barriers, and
                      it leverages the actor message passing for
                      synchronisation among actors. This paper describes
                      Pony, its type system, and the Orca garbage collection
                      algorithm. An evaluation of the performance of Orca
                      suggests that is fast and scalable for idiomatic
                      workloads.<br/>
<strong>Venue</strong>: PACM PL: Conference on
		      Object-Oriented Programming Languages, Systems and
		      Applications (OOPSLA)<br/>
<strong>DOI</strong>:          
 <a href="https://dx.doi.org/10.1145/3133896" target="_blank">10.1145/3133896</a>
<a href="pubs/oopsla17a.pdf" target="_blank"><button class="btn btn-default btn-xs pn-download" type="button">PDF</button></a>
</div>
</div>
</div>
</li>
<li class="pn-conferences">
<div>
<div class="pn-publications">
<a class="pn-link"><span class="pn-publications-span"><strong>ECOOP 2017</strong></span>Parallelizing Julia with a Non-invasive DSL</a>
<div class="pn-readmore">
<br/>
<strong>Authors</strong>: Todd Anderson, Hai Liu,
                      Lindsey Kuper, Ehsan Totoni, Jan Vitek, and Tatiana
                      Shpeisman<br/>
<strong>Abstract</strong>: Computational scientists
		      often prototype software using productivity languages
		      that offer high-level programming abstractions. When
		      higher performance is needed, they are obliged to
		      rewrite their code in a lower-level efficiency
		      language. Different solutions have been proposed to
		      address this tradeoff between productivity and
		      efficiency. One promising approach is to create
		      embedded domain-specific languages that sacrifice
		      generality for productivity and performance, but
		      practical experience with DSLs points to some road
		      blocks preventing widespread adoption. This paper
		      proposes a non-invasive domain-specific language that
		      makes as few visible changes to the host programming
		      model as possible. We present ParallelAccelerator, a
		      library and compiler for high-level, high-performance
		      scientific computing in Julia. ParallelAccelerator’s
		      programming model is aligned with existing Julia
		      programming idioms. Our compiler exposes the implicit
		      parallelism in high-level array-style programs and
		      compiles them to fast, parallel native code. Programs
		      can also run in “library-only” mode, letting users
		      benefit from the full Julia environment and
		      libraries. Our results show encouraging performance
		      improvements with very few changes to source code
		      required. In particular, few to no additional type
		      annotations are necessary.<br/>
<strong>Venue</strong>: European Confence on
                      Object-Oriented Programming (ECOOP)<br/>
<strong>DOI</strong>:          
 <a href="https://dx.doi.org/10.4230/LIPIcs.ECOOP.2017.4" target="_blank">10.4230/LIPIcs.ECOOP.2017.4</a>
<strong>Artifact</strong>: <a href="http://dx.doi.org/10.4230/DARTS.3.2.7">10.4230/DARTS.3.2.7</a><br/>
<a href="pubs/ecoop17.pdf" target="_blank"><button class="btn btn-default btn-xs pn-download" type="button">PDF</button></a>
</div>
</div>
</div>
</li>
<li class="pn-conferences">
<div>
<div class="pn-publications">
<a class="pn-link"><span class="pn-publications-span"><strong>ITP 2017</strong></span>
		      Verifying a Concurrent Garbage Collector using a Rely-Guarantee Methodology</a>
<div class="pn-readmore">
<br/>
<strong>Authors</strong>: Yannick Zakowski, David
                      Cachera, Delphine Demange, Gustavo Petri, David
                      Pichardie, Suresh Jagannathan, Jan Vitek<br/>
<strong>Abstract</strong>: Concurrent garbage
		      collection algorithms are a challenge in the area of
		      concurrent program verification. We proposed a
		      mechanized proof methodology based on the popular
		      Rely-Guarantee (RG) proof technique. We design a
		      specific compiler intermediate representation (IR)
		      with strong type guarantees, dedicated support for
		      abstract concurrent data structures, and high-level
		      iterators on runtime internals. In addition, we define
		      an RG program logic supporting an incremental proof
		      methodology where annotations and invariants can be
		      progressively enriched.  We formalize the IR, the
		      proof system, and prove the soundness of the methodol-
		      ogy in the Coq proof assistant. Equipped with this IR,
		      we prove a fully concurrent garbage collector where
		      mutators never have to wait for the collector.<br/>
<strong>Venue</strong>: International Conference on
                      Interactive Theorem Proving (ITP)<br/>
<strong>DOI</strong>: <a href="https://doi.org/10.1007/978-3-319-66107-0_31" target="blank">10.1007/978-3-319-66107-0_31</a>
<a href="pubs/ITP17.pdf" target="_blank"><button class="btn btn-default btn-xs pn-download" type="button">PDF</button></a>
</div>
</div>
</div>
</li>
<li class="pn-conferences">
<div>
<div class="pn-publications">
<a class="pn-link"><span class="pn-publications-span"><strong>RTAS 2017</strong></span>
		      Making Android Run on Time</a>
<div class="pn-readmore">
<strong>Authors</strong>:
		      Yin Yan, Karthik Dantu, Steven Y. Ko, Jan Vitek, Lukasz Ziarek<br/>
<strong>Abstract</strong>: 
		      Time predictability is difficult to achieve in the
		      complex, layered execution environments that are
		      common in modern embedded devices. We consider the
		      possibility of adopting the Android programming model
		      for a range of embedded applications that extends
		      beyond mobile devices, under the constraint that
		      changes to widely used libraries should be
		      minimized. The challenges we explore include: the
		      interplay between real-time activities and the rest of
		      the system, how to express the timeliness requirements
		      of components, and how well those requirements can be
		      met on stock embedded platforms. We report on the
		      design and implementation of an Android virtual
		      machine with soft-real-time support, and provides
		      experimental data validating feasibility over three
		      case studies.<br/>
<strong>Venue</strong>: Real-time and Embedded Technology and Application Symposium (RTAS)<br/>
<strong>DOI</strong>: <a href="https://doi.org/10.1109/RTAS.2017.38" target="_blan">10.1109/RTAS.2017.38</a>
<a href="pubs/rtas17.pdf" target="_blank"><button class="btn btn-default btn-xs pn-download" type="button">PDF</button></a>
</div>
</div>
</div>
</li>
<li class="pn-conferences">
<div>
<div class="pn-publications">
<a class="pn-link"><span class="pn-publications-span"><strong>POPL 2016</strong></span>Is Sound Gradual Typing Dead?</a>
<div class="pn-readmore">
<strong>Authors</strong>: Asumu Takikawa, Dan Feltey,
                      Ben Greenman, Max S. New, Jan Vitek, and Matthias
                      Felleisen<br/>
<strong>Abstract</strong>: Programmers have come to
		      embrace dynamically-typed languages for prototyping
		      and delivering large and complex systems. When it
		      comes to maintaining and evolving these systems, the
		      lack of explicit static typing becomes a
		      bottleneck. In response, researchers have explored the
		      idea of gradually-typed programming languages which
		      allow the incremental addition of type annotations to
		      software written in one of these untyped
		      languages. Some of these new, hybrid languages insert
		      run-time checks at the boundary between typed and
		      untyped code to establish type soundness for the
		      overall system. With sound gradual typing, programmers
		      can rely on the language implementation to provide
		      meaningful error messages when type invariants are
		      violated. While most research on sound gradual typing
		      remains theoretical, the few emerging implementations
		      suffer from performance overheads due to these
		      checks. None of the publications on this topic comes
		      with a comprehensive performance evaluation. Worse, a
		      few report disastrous numbers.  In response, this
		      paper proposes a method for evaluating the performance
		      of gradually-typed programming languages. The method
		      hinges on exploring the space of partial conversions
		      from untyped to typed. For each benchmark, the
		      performance of the different versions is reported in a
		      synthetic metric that associates runtime overhead to
		      conversion effort. The paper reports on the results of
		      applying the method to Typed Racket, a mature
		      implementation of sound gradual typing, using a suite
		      of real-world programs of various sizes and
		      complexities. Based on these results the paper con-
		      cludes that, given the current state of implementation
		      technologies, sound gradual typing faces significant
		      challenges. Conversely, it raises the question of how
		      implementations could reduce the overheads associated
		      with soundness and how tools could be used to steer
		      programmers clear from pathological cases.  <br/>
<strong>Venue</strong>: Principles of Programming Languages (POPL)<br/>
<strong>DOI</strong>: <a href="https://dx.doi.org/10.1145/2914770.2837630" target="_blank">10.1145/2914770.2837630</a> <a href="pubs/popl16.pdf" target="_blank"><button class="btn btn-default btn-xs pn-download" type="button">PDF</button></a><br/>
<strong>Artifact</strong>: <a href="http://www.ccs.neu.edu/home/asumu/artifacts/popl-2016/" target="_blank">http://www.ccs.neu.edu/home/asumu/artifacts/popl-2016/</a><br/>
</div>
</div>
</div>
</li>
<li class="pn-conferences">
<div>
<div class="pn-publications">
<a class="pn-link"><span class="pn-publications-span"><strong>ECOOP 2015</strong></span>Concrete Types for TypeScript </a>
<div class="pn-readmore">
<strong>Authors</strong>: Gregor Richards, 
		      Francesco Zappa Nardelli, and Jan Vitek <br/>
<strong>Abstract</strong>: TypeScript extends
                      JavaScript with optional type annotations that are, by
                      design, unsound and, that the TypeScript compiler
                      discards as it emits code. This design point preserves
                      programming idioms developers are familiar with, and
                      allows them to leave their legacy code unchanged,
                      while offering a measure of static error checking in
                      annotated parts of the program. We present an
                      alternative design for TypeScript that supports the
                      same degree of dynamism but that also allows types to
                      be strengthened to provide correctness guarantees. We
                      report on an implementation, called StrongScript, that
                      improves runtime performance of typed programs when
                      run on a modified version of the V8 JavaScript
                      engine.<br/>
<strong>Venue</strong>: European Conference on Object Oriented Programming (ECOOP)<br/>
<strong>DOI</strong>: <a href="https://dx.doi.org/10.4230/LIPIcs.ECOOP.2015.999" target="_blank">10.4230/LIPIcs.ECOOP.2015.999</a> <a href="pubs/ecoop15a.pdf" target="_blank"><button class="btn btn-default btn-xs pn-download" type="button">PDF</button></a><br/>
<strong>Artifact</strong>: <a href="http://plg.uwaterloo.ca/~dynjs/strongscript/" target="_blank">http://plg.uwaterloo.ca/~dynjs/strongscript</a><br/>
</div>
</div>
</div>
</li>
<li class="pn-conferences">
<div>
<div class="pn-publications">
<a class="pn-link"><span class="pn-publications-span"><strong>ECOOP 2015</strong></span>Cooking the Books: Formalizing JMM Implementation Recipes</a>
<div class="pn-readmore">
<strong>Authors</strong>: Gustavo Petri, Jan Vitek and Suresh Jagannathan<br/>
<strong>Abstract</strong>: The Java Memory Model (JMM)
		      is intended to characterize the meaning of concurrent
		      Java programs. Because of the model's complexity,
		      however, its definition cannot be easily transplanted
		      within an optimizing Java compiler, even though an
		      important rationale for its design was to ensure Java
		      compiler optimizations are not unduly hampered because
		      of the language's concurrency features. In response,
		      the JSR-133 Cookbook for Compiler Writers, an informal
		      guide to realizing the principles underlying the JMM
		      on different (relaxed-memory) platforms was
		      developed. The goal of the cookbook is to give
		      compiler writers a relatively simple, yet reasonably
		      efficient, set of reordering-based recipes that
		      satisfy JMM constraints. We present the first
		      formalization of the cookbook, providing a semantic
		      basis upon which the relationship between the recipes
		      defined by the cookbook and the guarantees enforced by
		      the JMM can be rigorously established. Notably, one
		      artifact of our investigation is that the rules
		      defined by the cookbook for compiling Java onto Power
		      are inconsistent with the requirements of the JMM, a
		      surprising result, and one which justifies our belief
		      in the need for formally provable definitions to
		      reason about sophisticated (and racy) concurrency
		      patterns in Java, and their implementation on
		      modern-day relaxed-memory hardware. Our formalization
		      enables simulation arguments between an
		      architecture-independent intermediate representation
		      of the kind suggested by the Cookbook with machine
		      abstractions for Power and x86. Moreover, we provide
		      fixes for cookbook recipes that are inconsistent with
		      the behaviors admitted by the target platform, and
		      prove the correctness of these repairs.  <br/>
<strong>Venue</strong>: European Conference on Object-Oriented Programming, 2015<br/>
<strong>DOI</strong>: <a href="http://dx.doi.org/10.4230/LIPIcs.ECOOP.2015.999" target="_blank">10.4230/LIPIcs.ECOOP.2015.999</a>
<a href="pubs/ecoop15b.pdf" target="_blank"><button class="btn btn-default btn-xs pn-download" type="button">PDF</button></a>
</div>
</div>
</div>
</li>
<li class="pn-journals">
<div>
<div class="pn-publications">
<a class="pn-link"><span class="pn-publications-span"><strong>CACM 2015</strong></span>The Real Software Crisis: Repeatability as a Core Value </a>
<div class="pn-readmore">
<strong>Authors</strong>: Shriram Krishnamurthi, Jan Vitek <br/>
<strong>Abstract</strong>: Where is the software in
                      programming language research? In our field, software
                      artifacts play a central role: they are the embodiments of
                      our ideas and contributions. Yet when we publish, we are
                      evaluated on our ability to describe informally those
                      artifacts in prose. Often, such prose gives only a
                      partial, and sometimes overly rosy, view of the
                      work. Especially so when the object of discourse is made
                      up of tens of thousands of lines of code that interact in
                      subtle ways with different parts of the software and
                      hardware stack on which it is deployed. Over the years,
                      our community's culture has evolved to value originality
                      above everything else, and our main conferences and
                      journals deny software its rightful place.<br/>
<strong>Venue</strong>: Communications of the ACM, Vol. 58 No. 3, Pages 34-36<br/>
<strong>DOI</strong>: <a href="https://dx.doi.org/10.1145/2658987" target="_blank">10.1145/2658987</a>
<a href="pubs/cacm15.pdf" target="_blank"><button class="btn btn-default btn-xs pn-download" type="button">PDF</button></a>
</div>
</div>
</div>
</li>
<li class="pn-journals">
<div>
<div class="pn-publications">
<a class="pn-link"><span class="pn-publications-span"><strong>TOPLAS 2014</strong></span>Atomicity Refinement for Verified Compilation</a>
<div class="pn-readmore">
<strong>Authors</strong>: Suresh Jagannathan, Vincent Laporte, Gustavo Petri, David Pichardie, Jan Vitek <br/>
<strong>Abstract</strong>: We consider the verified
                      compilation of high-level managed languages like Java or
                      C# whose intermediate representations provide support for
                      shared-memory synchronization and automatic memory
                      management. Our development is framed in the context of
                      the Total Store Order relaxed memory model. Ensuring
                      complier correctness is challenging because high-level
                      actions are translated into sequences of nonatomic actions
                      with compiler-injected snippets of racy code; the behavior
                      of this code depends not only on the actions of other
                      threads but also on out-of-order executions performed by
                      the processor. A naïve proof of correctness would require
                      reasoning over all possible thread interleavings. In this
                      article, we propose a refinement-based proof methodology
                      that precisely relates concurrent code expressed at
                      different abstraction levels, cognizant throughout of the
                      relaxed memory semantics of the underlying processor. Our
                      technique allows the compiler writer to reason
                      compositionally about the atomicity of low-level
                      concurrent code used to implement managed services. We
                      illustrate our approach with examples taken from the
                      verification of a concurrent garbage collector.  <br/>
<strong>Venue</strong>:  ACM Transactions on Programming Languages and Systems (TOPLAS), Volume 36 Issue 2, July 2014, Article No. 6 <br/>
<strong>DOI</strong>: <a href="https://dx.doi.org/10.1145/2601339" target="_blank">10.1145/2601339</a>
<a href="pubs/toplas14.pdf" target="_blank"><button class="btn btn-default btn-xs pn-download" type="button">PDF</button></a>
</div>
</div>
</div>
</li>
<li class="pn-conferences">
<div>
<div class="pn-publications">
<a class="pn-link"><span class="pn-publications-span"><strong>VEE 2014</strong></span>A Fast Abstract Syntax  Tree Interpteter for R</a>
<div class="pn-readmore">
<strong>Authors</strong>:   Tomas Kalibera  Petr Maj, Floreal Morandat, Jan Vitek <br/>
<strong>Abstract</strong>:Dynamic languages have been gaining popularity to the point that their performance is starting to matter. The effort required to develop a production-quality, high-performance runtime is, however, staggering and the expertise required to do so is often out of reach of the community maintaining a particular language. Many domain specific languages remain stuck with naive implementations, as they are easy to write and simple to maintain for domain scientists. In this paper, we try to see how far one can push a naive implementation while remaining portable and not requiring expertise in compilers and runtime systems. We choose the R language, a dynamic language used in statistics, as the target of our experiment and adopt the simplest possible implementation strategy, one based on evaluation of abstract syntax trees. We build our interpreter on top of a Java virtual machine and use only facilities available to all Java programmers. We compare our results to other implementations of R.  <br/>
<strong>Venue</strong>: Proceedings of the 10th ACM SIGPLAN/SIGOPS international conference on Virtual execution environments (VEE) Pages 89-102<br/>
<strong>DOI</strong>: <a href="https://dx.doi.org/10.1145/2674025.2576205" target="_blank">10.1145/2674025.2576205</a>
<a href="pubs/vee14.pdf" target="_blank"><button class="btn btn-default btn-xs pn-download" type="button">PDF</button></a>
</div>
</div>
</div>
</li>
<li class="pn-conferences">
<div>
<div class="pn-publications">
<a class="pn-link"><span class="pn-publications-span"><strong>ISMM 2014</strong></span>M3: high-performance memory management from off-the-shelf components</a>
<div class="pn-readmore">
<strong>Authors</strong>:   David Terei, Alex Aiken, Jan Vitek <br/>
<strong>Abstract</strong>: Real-world garbage collectors in managed languages are complex. We investigate whether this complexity is really necessary and show that by having a different (but wider) interface between the collector and the developer, we can achieve high performance with off-the-shelf components for real applications. We propose to assemble a memory manager out of multiple, simple collection strategies and to expose the choice of where to use those strategies in the program to the developer. We describe and evaluate an instantiation of our design for C. Our prototype allows developers to choose on a per-type basis whether data should be reference counted or reclaimed by a tracing collector. While neither strategy is optimised, our empirical data shows that we can achieve performance that is competitive with hand-tuned C code for real-world applications.<br/>
<strong>Venue</strong>: Proceedings of the 2014 international symposium on Memory management (ISMM) Pages 3-13 <br/>
<strong>DOI</strong>: <a href="https://dx.doi.org/10.1145/2602988.2602995" target="_blank">10.1145/2602988.2602995</a>
<a href="pubs/ismm14.pdf" target="_blank"><button class="btn btn-default btn-xs pn-download" type="button">PDF</button></a>
</div>
</div>
</div>
</li>
</ul>
    Older publication list still to be ported is <a href="yearly.htm">here</a>.
    </div>
</div>
<div class="row pn-grey-bg">
<div class="col-md-12">
<h2 class="pn-courier-bold" id="pn-anchor-teaching">[teaching]</h2>
</div>
<div class="col-md-4">
<h3>Active</h3>
<table>
<tr>
<td><a href="events/NEU/7580" target="_blank">7580</a></td>
<td>Intensive Software, Construction &amp; Engineering, Fall 2019 (12)</td>
</tr>
<tr>
<td><a href="events/NEU/6050" target="_blank">6050</a></td>
<td>Expeditions in Data Science, Spring 2019 (30)</td>
</tr>
<tr>
<td><a href="https://course.ccs.neu.edu/cs2510/" target="_blank">2510</a></td>
<td>Fundamentals II: Class-based Program Design, Spring 2018 (55)</td>
</tr>
<tr>
<td><a href="http://janvitek.github.io/pdpmr/f17/" target="_blank">6240</a></td>
<td>Parallel Data Processing in MapReduce, Fall 2017, (28)</td>
</tr>
<tr>
<td><a href="http://janvitek.org/events/NEU/5110/" target="_blank">5110</a></td>
<td>Introduction to Data Science, Winter 2017, (10)</td>
</tr>
<tr>
<td><a href="https://sites.google.com/site/mapreduce16s/" target="_blank">6240</a></td>
<td>Parallel Data Processing in MapReduce, Winter 2016, (40)</td>
</tr>
<tr>
<td><a href="https://sites.google.com/site/mapreduce15s/" target="_blank">6240</a></td>
<td>Parallel Data Processing in MapReduce, Winter 2015, (48)</td>
</tr>
<tr>
<td><a href="http://www.ccs.neu.edu/course/cs5010f14/" target="_blank">5010</a></td>
<td>Program Design Paradigms, Fall 2014, (52)</td>
</tr>
</table>
</div>
<div class="col-md-4">
<h3>History</h3>
<table>
<tr><td><a href="https://sites.google.com/site/scalabledataanalytics/" target="_blank">590</a></td><td>Scalable Data Analytics, Winter 2014, (12)</td>
</tr>
<tr><td><a href="https://sites.google.com/site/pucs240s14/" target="_blank">240</a></td><td>Programming in C, Winter 202014, (240)</td>
</tr>
<tr><td><a href="vitekj/240s12/" target="_blank">240</a></td><td>Programming in C, Winter 2012</td> </tr>
<tr><td><a href="vitekj/490s12/" target="_blank">490</a></td><td>Software for Embedded Systems, Winter 2012</td></tr>
<tr><td><a href="vitekj/240f11/" target="_blank">240</a></td><td>Programming in C, Fall 2011</td>
</tr>
<tr><td><a href="vitekj/490s11/" target="_blank">490</a></td><td>Sofware for Embedded Systems, Winter 2011</td></tr>
<tr>
<td><a href="vitekj/590vf09/" target="_blank">590</a></td>
<td>Embedded Computer Systems, Fall 2009</td>
</tr>
<tr>
<td><a href="vitekj/590vf08/" target="_blank">590</a></td>
<td>Programming Languags Seminar, Fall 2008</td>
</tr>
<tr>
<td><a href="vitekj/590v08/" target="_blank">590</a></td>
<td>Programming Languags Seminar, Winter 2008</td>
</tr>
<tr>
<td><a href="vitekj/565f08/" target="_blank">456</a></td>
<td>Programming Languages, Winter 2008</td>
</tr>
<tr>
<td><a href="vitekj/456-07/" target="_blank">456</a></td>
<td>Programming  Languages, Fall 2007</td>
</tr>
<tr>
<td><a href="vitekj/510s06/" target="_blank">510</a></td>
<td>Software Engineering, Winter 2006</td>
</tr>
</table>
</div>
<div class="col-md-4">
<h3>Students</h3>
<table>
<tr>
<td><strong>PhD</strong></td>
<td>
<a href="https://scholar.google.com/citations?user=doNFcFwAAAAJ&amp;hl=en">Alexi
		  Turcotte</a>, Jan Ječmen,
		  <a href="http://staff.mmcs.sfedu.ru/~ulysses/">
		    Artem Pelenitsyn</a>,
		  <a href="https://julbinb.github.io" target="blank">
		    Julia Belyakova</a>
<a href="http://aviral.io" target="_blank">
		    Aviral Goel</a>,
		  <a href="http://mhyee.com" target="_blank">
		    Ming-Ho Yee</a>,
		  <a href="http://benchung.github.io" target="_blank">
		    Benjamin Chung</a>,
		   <a href="http://www.o1o.ch" target="_blank"> 
		     Olivier Fluckiger</a>,
		   <a href="http://the.gregor.institute" target="_blank">
		     Gregor Richards</a> (2014),
                   <a href="http://www.filpizlo.com" target="_blank">
		     Filip Pizlo</a>, 
		   <a href="https://www.linkedin.com/profile/view?id=2882282&amp;authType=NAME_SEARCH&amp;authToken=s56e&amp;locale=en_US&amp;trk=tyah2&amp;trkInfo=idx%3A1-1-1%2CtarId%3A1425161580687%2Ctas%3Ajacques+t" target="_blank">
		     Jacques Thomas</a> (2011),
		   <a href="https://www.linkedin.com/in/jhSpring" target="_blank">                    Jesper H. Spring</a> (2008 EPFL),
		   <a href="https://www.linkedin.com/in/rajeevgopalakrishna" target="_blank">                    Rajeev Gopalakrishna</a> (2006),
		   <a href="http://users.cis.fiu.edu/~carbunar/" target="_blank">                    Bogdan Carbunar</a> (2005), 
		   <a href="https://www.linkedin.com/in/krzysztofpalacz" target="_blank">                    Krzystof Palacz</a> (2004) </td>
</tr>
<tr>
<td><strong>MSc</strong></td>
<td> 
                  Jakub Zitny (2017),
		  <a href="https://www.linkedin.com/pub/nadya-ortiz/32/310/342" target="_blank">Nadya Ortiz</a> (2012),
		  <a href="https://www.linkedin.com/in/fadiedward" target="_blank">Fadi Meawad</a>  (2013),
		  <a href="http://0xdata.com/team/brandon-hill/" target="_blank">Brandon Hill</a> (2013),
		  <a href="https://www.linkedin.com/profile/view?id=55662768" target="_blank">Petr Maj</a> (2011),
		  <a href="https://www.linkedin.com/profile/view?id=10911852&amp;authType=NAME_SEARCH&amp;authToken=1YcK&amp;locale=en_US&amp;srchid=133758541425161840298&amp;srchindex=1&amp;srchtotal=427&amp;trk=vsrp_people_res_name&amp;trkInfo=VSRPsearchId%3A133758541425161840298%2CVSRPtargetId%3A10911852%2CVSRPcmpt%3Aprimary" target="_blank">Daniel Tang</a> (2011),
<a href="http://user.it.uu.se/~johos902/" target="_blank">Johan Ostlund</a> (2010),
                   Jason Baker (2007),
                  <a href="https://www.linkedin.com/in/hiroshiyamauchi" target="_blank">Hiroshi Yamauchi</a> (2007),
		  <a href="http://grothoff.org/christian/" target="_blank">Christian Grothoff</a> (2005),
		     <a href="https://www.linkedin.com/pub/andrey-madan/0/4a6/a48" target="_blank">Andrey Madan</a> (2004),
<a href="https://www.linkedin.com/profile/view?id=3041899&amp;authType=NAME_SEARCH&amp;authToken=eveN&amp;locale=en_US&amp;srchid=133758541425161989514&amp;srchindex=1&amp;srchtotal=17&amp;trk=vsrp_people_res_name&amp;trkInfo=VSRPsearchId%3A133758541425161989514%2CVSRPtargetId%3A3041899%2CVSRPcmpt%3Aprimary" target="_blank"> 		     Gergana Markova</a> (2003),
		     Jason M. Fox (2003),
                  James Liang (2002) </td>
</tr>
<tr><td><strong>BSc</strong>
</td><td>
		  Jakob Hain (2020),
                  Lionel Zoubritzky (2018),
                  Chakshu Goyal (2018),
                  Michal Vácha (2018),
		  Borja Lorente Escobar (2018),
		  Paul Laforge (2017),
		  Ayaz Badouraly (2017),
                  Filippo Ghibellini (2016),
		  <a href="https://plus.google.com/+RyanMacnak/about" target="_blank">Ryan Macnak</a>,
                  <a href="http://brrian.org" target="_blank"> Brian Burg</a> (2010),
                  Brett Mravec (2010),
                  Jason Ward (2010), 
                  Chris Abernathy (2010),
                  Rob Gevers (2009),
		  <a href="https://www.linkedin.com/profile/view?id=10911852&amp;authType=NAME_SEARCH&amp;authToken=1YcK&amp;locale=en_US&amp;srchid=133758541425161840298&amp;srchindex=1&amp;srchtotal=427&amp;trk=vsrp_people_res_name&amp;trkInfo=VSRPsearchId%3A133758541425161840298%2CVSRPtargetId%3A10911852%2CVSRPcmpt%3Aprimary" target="_blank">Daniel Tang</a> (2008),
		  <a href="http://www.cc.gatech.edu/~wharris/" target="_blank"> William Harris</a> (2007), 
                  Andrew McClure (2006),
                  Zacchary Wiggins (2005),
                  <a href="http://www.kuliniewicz.org/blog/" target="_blank">Paul Kuliniewicz</a> (2004),
                  Wenchang Liu (2004),
                  <a href="http://www.filpizlo.com" target="_blank">Filip Pizlo</a> (2004),
                  Chris Willmore (2003),
                  Andrey Madan (2002),
                  <a href="http://research.google.com/pubs/BenTitzer.html" target="_blank">Ben Titzer</a> (2003), 
                  Adam Lugowski (2002),
                  Josh Moore (200),
		  <a href="https://www.linkedin.com/profile/view?id=3041899&amp;authType=NAME_SEARCH&amp;authToken=eveN&amp;locale=en_US&amp;srchid=133758541425161989514&amp;srchindex=1&amp;srchtotal=17&amp;trk=vsrp_people_res_name&amp;trkInfo=VSRPsearchId%3A133758541425161989514%2CVSRPtargetId%3A3041899%2CVSRPcmpt%3Aprimary" target="_blank">  Gergana Markova</a> (2001),
                  Theodore Witkamp (2003),
                  Javed Siddique (2003)
                  Alen Montz (2004).
		</td>
</tr>
<tr>
<td><strong>PostDoc</strong></td>
<td>
<a href="http://lafhis.dc.uba.ar/en/~gchari">Guido Chari</a> (2018--),
		  <a href="http://www.ccs.neu.edu/home/ryanc/" target="_blank">Ryan Culpepper</a> (2017--),
g		  <a href="https://kondziu.github.io" target="_blank">Konrad Siek</a> (2017--),
		  <a href="http://fikovnik.net">Filip Krikava</a> (2016--),
		  <a href="https://palez.github.io">Paley Li</a> (2015--2018),
		  <a href="http://www.liafa.univ-paris-diderot.fr/~gpetri" target="_blank"> Gustavo Petri</a> (2012--2015),
		  <a href="http://www.ssrg.nicta.com.au/people/?cn=Rafal+Kolanski" target="_blank">Rafal Kolanski</a> (2013-–2014),
		  <a href="http://0xdata.com/team/michal-malohlava/" target="_blank">Michal Malohlava</a> (2012--2013),
		  <a href="http://www.labri.fr/perso/fmoranda/" target="_blank">Floreal Morandat</a> (2011-–2012),
		  <a href="http://pages.cs.wisc.edu/~kidd/" target="_blank">Nicholas Kidd</a> (2009-–2010),
		  <a href="http://csl.cs.uni-saarland.de/people/hammer/" target="_blank">Christian Hammer</a> (2009-–2011),
                  <a href="http://aplsek.github.io/index.html" target="_blank">Ales Plsek</a> (2009-–2011),
                  <a href="https://www.linkedin.com/pub/sylvain-lebresne/20/66/87b" target="_blank">Sylvain Lebresne</a> (2008-2009),
		  <a href="https://www.cs.purdue.edu/homes/tkaliber/" target="_blank">Tomas Kalibera</a> (2007-–2009),
		  <a href="http://wrigstad.com" target="_blank">Tobias Wrigstad</a>  (2007-–2009),
		  <a href="http://www.cunei.com" target="_blank">Antonio Cunei</a>  (2003 – 2008),
		  <a href="http://info.uqam.ca/~privat/" target="_blank">Jean Privat</a> (2006-–2007),
                  <a href="https://www.linkedin.com/profile/view?id=12333726&amp;authType=NAME_SEARCH&amp;authToken=3DlE&amp;locale=en_US&amp;srchid=133758541425185752806&amp;srchindex=1&amp;srchtotal=18&amp;trk=vsrp_people_res_name&amp;trkInfo=VSRPsearchId%3A133758541425185752806%2CVSRPtargetId%3A12333726%2CVSRPcmpt%3Aprimary" target="">Marek Prochazka</a> (2003-–2005),
                  <a href="http://jeremymanson.blogspot.com" target="_blank">Jeremy Manson</a> (2003-–2005),
                  <a href="https://www.linkedin.com/profile/view?id=4399148&amp;authType=NAME_SEARCH&amp;authToken=CkhL&amp;locale=en_US&amp;srchid=133758541425185880579&amp;srchindex=1&amp;srchtotal=305&amp;trk=vsrp_people_res_name&amp;trkInfo=VSRPsearchId%3A133758541425185880579%2CVSRPtargetId%3A4399148%2CVSRPcmpt%3Aprimary" target="_blank">Michael Richmond</a>  (2002-–2003)
		</td>
</tr>
</table>
</div>
</div>
</div>
<div class="row pn-transparent-bg">
<div class="col-md-12">
<h2 class="pn-courier-bold" id="pn-anchor-publications">[varia]</h2>
</div>
<div class="col-md-4">
<table>
<tr>
<td width="10%"><p><a href="#" onmouseout="MM_swapImgRestore()" onmouseover="MM_swapImage('Image21','','images/before_0001.jpg',1)" target="_blank"><img border="0" id="Image21" name="Image21" src="images/after_0001.jpg" width="100"/></a><br/>
</p><p align="center">After / Before</p> </td>
<td width="90%"><div>
<p class="pn-grey-font">Is there any risk of brain damage? <br/>
<br/> Well, technically speaking, the operation is brain
		    damage, but it's on par with a night of heavy
		    drinking. Nothing you'll miss. </p>
<p class="style2"><em>Eternal Sunshine of the Spotless Mind</em></p>
</div></td>
</tr>
<tr>
<td>
<b>Comfy Chair</b><br/><br/>
		  \'kəm(p)-fē 'cher\</td>
<td>
<b>Definition </b><br/>
		  a : a position of authority, state, or dignity<br/>
		  b : he who makes things happen<br/>
                  c : <a href="http://www.urbandictionary.com/define.php?term=The+Comfy+Chair">a most feared torture device</a>
</td>
</tr>
</table>
<b>Examples</b><br/>
<a href="images/cactus-sofa.jpg"><img height="100" src="images/cactus-sofa.jpg"/></a>
<a href="images/comfyChairRomanStyle.jpg"><img height="100" src="images/comfyChairRomanStyle.jpg"/></a><br/>
<p class="pn-grey-font">With thanks to Camil, Irene and Wilfried.</p>
</div>
<div class="col-md-4">
<table>
<tr>
<p align="center"><a href="http://www.onion.com" target="_blank"><img border="0" height="25" src="images/onion.gif"/></a></p>
<p align="center"><a href="http://web.engr.illinois.edu/~taoxie/sefamily.htm" target="_blank"><img border="0" height="80" src="images/tree.jpg"/></a></p>
</tr>
</table>
</div>
<div class="col-md-4">
<p align="left" class="pn-grey-font">"I understand
		radiation better and feel like I could survive an atomic
		explosion somewhere on the planet, if it wasn't, of course,
		really close to me." </p>
<p><em>Amazon.com review of 'All About Radiation' by L.                                                      
		  Ron Hubbard.</em></p>
<p align="left" class="pn-grey-font">"DOS computers
		manufactured by companies such as IBM, Compaq, Tandy, and
		millions of others are by far the most popular, with about
		70 million machines in use worldwide.  Macintosh fans, on
		the other hand, may note that cockroaches are far more
		numerous than humans, and that numbers alone do not denote a
		higher life form."</p>
<p align="right"><em>-- New York Times, November 26, 1991.</em></p>
<p align="left" class="pn-grey-font">"Dad, do you say the Pledge
        of Allegiance at work? ... Ah.  Maybe you should, you know... to be
        a little bit part of this country."</p>
<p align="right"><em>-- Nadia Marie Vitek, Age 8.</em></p>
<p align="left" class="pn-grey-font">Хотели как лучше, а получилось как всегд</p>
<p align="right"><em>-- <a href="https://ru.wikipedia.org/wiki/Хотели_как_лучше,_а_получилось_как_всегда">Viktor Chernomyrdin</a></em></p>
</div>
</div>
</div>
<footer class="footer">
<p><a href="http://www.catchexception.cz/" target="_blank">© Catchexception s.r.o.</a></p>
<a class="pn-top pn-dark" href="#pn-top">top</a>
</footer>
<!-- jQuery (necessary for Bootstrap's JavaScript plugins) -->
<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.2/jquery.min.js"></script>
<!-- Include all compiled plugins (below), or include individual files as needed -->
<script src="js/bootstrap.min.js"></script>
<!-- Custom scripts -->
<script src="js/custom.js"></script>
<div>
<span class="style4">Publications</span>
<p align="right" class="style1"> All publications by Jan Vitek, sorted by
  date.<br/>  code: <span class="jrn">
   journal </span>, <span class="conf"> peer-reviewed </span>, <span class="wks"> workshop </span>, <span class="bk"> book
  chapter </span> , <span class="ed"> edited </span>.<br/>
  References in <a href="jv.bib">bibtex forma</a>t. </p>
<h4 align="left" style="background-color: #000099; color:white; text-align: left;">2013</h4>
<div class="ShortConference"> <span class="ShortAuthors">Richards, Hammer, Jagannathan, Zappa Nardelli, Vitek.</span> <span class="ShortTitle">Flexible Access Control Policies with Delimited Histories and Revocation.</span> <span class="ShortVenue">OOPSLA</span> <a href="pubs/oopsla13.pdf"><img alt="pdf" height="10" src="images/pdf.jpg"/></a></div>
<div class="ShortConference"> <span class="ShortAuthors">Marino, Hammer,  Dolby, Vaziri, Tip, Vitek.</span> <span class="ShortTitle">Detecting deadlock in programs with data-centric synchronization.</span> <span class="ShortVenue">ICSE</span> <a href="pubs/icse13.pdf"><img alt="pdf" height="10" src="images/pdf.jpg"/></a></div>
<div class="ShortConference"> <span class="ShortAuthors">DeVito, Hegarty, Aiken, Hanrahan, Vitek.</span> <span class="ShortTitle">Terra: a multi-stage language for high-performance computing.</span> <span class="ShortVenue">PLDI</span> <a href="pubs/pldi13.pdf"><img alt="pdf" height="10" src="images/pdf.jpg"/></a></div>
<div class="ShortConference"> <span class="ShortAuthors">Demange, Laporte, Zhao, Jagannathan, Pichardie,  Vitek.</span> <span class="ShortTitle">Plan B: a buffered memory model for Java.</span> <span class="ShortVenue">POPL</span> <a href="pubs/popl13.pdf"><img alt="pdf" height="10" src="images/pdf.jpg"/></a></div>
<h4 align="left" style="background-color: #000099; color:white; text-align: left;">2012</h4>
<div class="ShortConference"> <span class="ShortAuthors">Kalibera, Mole, Jones, Vitek.</span> <span class="ShortTitle">A black-box approach to understanding concurrency in DaCapo.</span> <span class="ShortVenue">OOPSLA</span> <a href="pubs/oopsla12a.pdf"><img alt="pdf" height="10" src="images/pdf.jpg"/></a></div>
<div class="ShortConference"> <span class="ShortAuthors">Meawad, Richards, Morandat, Vitek.</span> <span class="ShortTitle">Eval begone!: semi-automated removal of eval from JavaScript programs.</span> <span class="ShortVenue">OOPSLA</span> <a href="pubs/oopsla12b.pdf"><img alt="pdf" height="10" src="images/pdf.jpg"/></a></div>
<div class="ShortInBook"> <span class="ShortAuthors">Vitek. </span> <span class="ShortTitle">Atomicity in Real-time Computing</span> <span class="ShortVenue">Springer</span><a href="pubs/arc12.pdf"><img alt="pdf" height="10" src="images/pdf.jpg"/></a></div>
<div class="ShortJournal"> <span class="ShortAuthors">Vitek, Kalibera.</span><span class="ShortTitle">R3 -- Repeatability, Reproducibility and Rigor.</span> <span class="ShortVenue">SIGPLAN Notices</span> <a href="pubs/r3.pdf"><img alt="pdf" height="10" src="images/pdf.jpg"/></a></div>
<div class="ShortInBook"> <span class="ShortAuthors">Vitek. </span><span class="ShortTitle">Memory Safety for Safety Critical Java</span> <span class="ShortVenue">Springer</span> <a href="pubs/mssc12.pdf"><img alt="pdf" height="10" src="images/pdf.jpg"/></a> </div>
<div class="ShortJournal"> <span class="ShortAuthors">Dolby,  Hammer,  Marino, Tip, Vaziri, Vitek.</span><span class="ShortTitle">A Data-Centric Approach to Synchronization.</span> <span class="ShortVenue">TOPLAS</span> <a href="pubs/toplas12.pdf"><img alt="pdf" height="10" src="images/pdf.jpg"/></a></div>
<div class="ShortConference"> <span class="ShortAuthors">Morandat, Hill, Osvald, Vitek.</span> <span class="ShortTitle">Evaluating the Design of the R Language.</span> <span class="ShortVenue">ECOOP</span> <a href="pubs/ecoop12.pdf"><img alt="pdf" height="10" src="images/pdf.jpg"/></a></div>
<div class="ShortWorksop"> <span class="ShortAuthors">Macnak, Morandat,  Hill, Osvald, Vitek.</span><span class="ShortTitle">TraceR: A framework for understanding R performance.</span> <span class="ShortVenue">UseR!</span></div>
<div class="ShortConference"> <span class="ShortAuthors">Bouakaz,  Talpin  Vitek.</span> <span class="ShortTitle">Data-Flow Graphs for the Synthesis of Hard Real-Time Applications.</span> <span class="ShortVenue">ACSD</span> </div>
<div class="ShortJournal"> <span class="ShortAuthors">Meawad, Iyer, Schoeberl, Vitek.</span> <span class="ShortTitle">Micro-transactions for concurrent data structures. </span> <span class="ShortVenue">CCPE</span> <a href="pubs/ccpe11.pdf??"><img alt="pdf" height="10" src="images/pdf.jpg"/></a></div>
<div class="ShortInBook"> <span class="ShortAuthors">Hirschfeld, Krishnamurthi, Vitek. </span> <span class="ShortTitle"> Foundations for Scripting Languages.</span> <span class="ShortVenue">Dagstuhl</span><a href="pubs/dagstuhl12.pdf"><img alt="pdf" height="10" src="images/pdf.jpg"/></a></div>
<h4 align="left" style="background-color: #000099; color:white; text-align: left;">2011</h4>
<div class="ShortConference"> <span class="ShortAuthors">Vitek.</span><span class="ShortTitle">Virtualizing real-time embedded systems with Java.</span> <span class="ShortVenue">DAC</span> <a href="pubs/dac11.pdf"><img alt="pdf" height="10" src="images/pdf.jpg"/></a></div>
<div class="ShortWorksop"> <span class="ShortAuthors">Meawad, Iyer, Schoeberl, Vitek.</span> <span class="ShortTitle">Real-Time Wait-Free  Queues using Micro-Transactions. </span> <span class="ShortVenue">JTRES </span> <a href="pubs/jtres11.pdf"><img alt="pdf" height="10" src="images/pdf.jpg"/></a></div>
<div class="ShortConference"> <span class="ShortAuthors">Vitek, Kalibera.</span><span class="ShortTitle">Repeatability, Reproducibility and Rigor in Systems Research. (Invited)</span> <span class="ShortVenue">EMSOFT</span> <a href="pubs/emsoft11.pdf"><img alt="pdf" height="10" src="images/pdf.jpg"/></a></div>
<div class="ShortJournal">
<span class="ShortAuthors">Kalibera, Pizlo, Hosking, Vitek.</span><span class="ShortTitle">Scheduling Real-Time Garbage Collection on Uniprocessors.</span> <span class="ShortVenue">TOCS</span> <a href="pubs/tocs11.pdf"><img alt="pdf" height="10" src="images/pdf.jpg"/></a></div>
<div class="ShortConference">
<span class="ShortAuthors">Richards, Gal, Eich, Vitek.</span><span class="ShortTitle"> Automated Construction of JavaScript Benchmarks.</span> <span class="ShortVenue">OOPSLA</span> <a href="pubs/oopsla11.pdf"><img alt="pdf" height="10" src="images/pdf.jpg"/></a></div>
<div class="ShortWorksop"> <span class="ShortAuthors">Meawad, Macnak, Vitek.</span> <span class="ShortTitle">Collecting Transactional Garbage. </span> <span class="ShortVenue">TRANSACT</span> <a href="pubs/transact11.pdf"><img alt="pdf" height="10" src="images/pdf.jpg"/></a></div>
<div class="ShortJournal"><span class="ShortAuthors">
  Kalibera, Hagelberg,  Maj, Pizlo, Titzer, Vitek.</span>
<span class="ShortTitle"> A family of real-time Java benchmarks</span> <span class="style5"><strong>CC:PE</strong></span>
<a href="pubs/ccpe11.pdf"><img alt="pdf" height="10" src="images/pdf.jpg"/></a></div>
<div class="ShortConference">
<span class="ShortAuthors">Richards, Hammer, Burg, Vitek.</span><span class="ShortTitle">   The Eval that Men Do:
     A Large-scale Study of the Use of Eval in JavaScript Applications.</span> <span class="ShortVenue">ECOOP</span> <a href="pubs/ecoop11.pdf"><img alt="pdf" height="10" src="images/pdf.jpg"/></a></div>
<div class="ShortConference">
<span class="ShortAuthors"> Milanova, Vitek.</span><span class="ShortTitle">    Static Dominance Inference.
 </span> <span class="ShortVenue">TOOLS</span> </div>
<h4 align="left" style="background-color: #000099; color:white; text-align: left;">2010</h4>
<div class="ShortConference">
<span class="ShortAuthors">Vaiziri, Tip, Dolby, Hammer, Vitek.</span><span class="ShortTitle"> A
Type System for Data-Centric Synchronization.</span> <span class="ShortVenue">ECOOP</span> <a href="pubs/ecoop10.pdf"><img alt="pdf" height="10" src="images/pdf.jpg"/></a></div>
<div class="ShortConference">
<span class="ShortAuthors"> Pizlo, Blanton, Hosking, Maj, 
  Vitek, Ziarek.</span><span class="ShortTitle"> Schism: Fragmentation-Tolerant
  Real-Time Garbage Collection.</span> <span class="ShortVenue">PLDI</span> <a href="pubs/pldi10b.pdf"><img alt="pdf" height="10" src="images/pdf.jpg"/></a></div>
<div class="ShortConference">
<span class="ShortAuthors"> Richards, Lebresne, Burg,
   Vitek,</span><span class="ShortTitle"> An Analysis of the Dynamic Behavior
   of JavaScript Programs.</span> <span class="ShortVenue">PLDI</span> <a href="pubs/pldi10a.pdf"><img alt="pdf" height="10" src="images/pdf.jpg"/></a></div>
<div class="ShortConference">
<span class="ShortAuthors"> Pizlo Ziareck, Blanton, Maj, 
  Vitek,</span><span class="ShortTitle"> High-level
  Programming of Embedded Hard Real-Time Devices.</span> <span class="ShortVenue">EuroSys</span> <span class="ShortWorksop"><a href="pubs/eurosys10.pdf"><img alt="pdf" height="10" src="images/pdf.jpg"/></a></span></div>
<div class="ShortConference">
<span class="ShortAuthors"> Wrigstad, Zappa Nardelli, Lebresne, Ostlund, 
  Vitek,</span><span class="ShortTitle"> Integrating Typed and Untyped Code in
  a Scripting Language.</span> <span class="ShortVenue">POPL </span><span class="ShortWorksop"><a href="pubs/popl10.pdf"><img alt="pdf" height="10" src="images/pdf.jpg"/></a></span></div>
<div class="ShortConference">
<span class="ShortAuthors"> Schoeberl, Brandner, 
  Vitek,</span> <span class="ShortTitle">RTTM: Real-Time Transactional Memory.</span> <span class="ShortVenue">SAC</span>
<span class="ShortVenue"> </span><span class="ShortWorksop"><a href="pubs/sac10.pdf"><img alt="pdf" height="10" src="images/pdf.jpg"/></a></span></div>
<div class="ShortJournal"><span class="ShortAuthors"> Spring, Pizlo, Privat,
    Guerraoui, Vitek.</span> <span class="ShortTitle">Reflexes: Abstractions
for Integrating Highly Responsive Tasks into Java Applications. </span><span class="style5"><strong>TECS </strong></span><a href="pubs/tces09.pdf"><img alt="pdf" height="10" src="images/pdf.jpg"/></a></div>
<div class="ShortWorksop"> <span class="ShortAuthors"> Kalibera, Parizek, Haddad,
    Leavens, Vitek.</span> <span class="ShortTitle">Challenge Benchmarks for
    Verification of Real-time Programs. </span> <span class="ShortVenue">PLPV</span> <a href="pubs/plpv10.pdf"><img alt="pdf" height="10" src="images/pdf.jpg"/></a></div>
<div class="ShortWorksop"> <span class="ShortAuthors"> Kidd, Jagannathan,
     Vitek.</span> <span class="ShortTitle"> One Stack to Run Them All:
     Reducing Concurrent Analysis to Sequential Analysis Under Priority
     Scheduling. </span> <span class="ShortVenue">SPIN</span> <a href="pubs/spin10.pdf"><img alt="pdf" height="10" src="images/pdf.jpg"/></a></div>
<div class="ShortWorksop"> <span class="ShortAuthors"> Tang, Plsek,
    Vitek.</span> <span class="ShortTitle">Static Checking of Safety
    Critical Java
    Annotations. </span> <span class="ShortVenue">JTRES </span> <a href="pubs/jtres10a.pdf"><img alt="pdf" height="10" src="images/pdf.jpg"/></a></div>
<div class="ShortWorksop"> <span class="ShortAuthors"> Plsek,  Zhao,  Sahin,
     Tang,  Kalibera.</span> <span class="ShortTitle">Developing Safety Critical
     Java applications with oSCJ/L0. </span> <span class="ShortVenue">JTRES</span> <a href="pubs/jtres10b.pdf"><img alt="pdf" height="10" src="images/pdf.jpg"/></a></div>
<div class="ShortEdited"> <span class="ShortAuthors">Vitek. <span class="ShortTitle">Objects,
Models, Components, Pattern (TOOLS)</span> <span class="ShortVenue">Springer </span></span><a href="http://dx.doi.org/10.1007/978-3-642-13953-6"><img alt="pdf" height="10" src="images/pdf.jpg"/></a></div>
<div class="ShortEdited"> <span class="ShortAuthors">Vitek. <span class="ShortTitle">Workshop
      on Java Technologies for Real-time Systems (JTRES)</span> <span class="ShortVenue">ACM
      DL</span></span></div>
<h4 align="left" style="background-color: #000099; color:white; text-align: left;">2009</h4>
<div class="ShortEdited"> <span class="ShortAuthors"> Bonsanguea, Johnsen, Murphy,
    Vitek,<span class="ShortTitle"> Special Issue on Distributed Computing Techniques
    in Theoretical Computer Science.</span> <span class="ShortVenue">TCS</span></span></div>
<div class="ShortEdited"> <span class="ShortAuthors">Vitek, <span class="ShortTitle">Introduction
      to: The Myths of Object-Orientation.</span> <span class="ShortVenue">ECOOP</span></span></div>
<div class="ShortEdited"> <span class="ShortAuthors">Nystrom, Vitek, Wrigstad. <span class="ShortTitle">1st International Script to Program Workshop (STOP)</span> <span class="ShortVenue">ACM DL</span></span></div>
<div class="ShortInBook"> <span class="ShortAuthors">Suri,
Vitek. <em>Mobile Agents</em>. <span class="ShortTitle">Encyclopedia of Complexity
and System Science</span> <span class="ShortVenue">Springer</span></span></div>
<div class="ShortConference"><span class="ShortAuthors"> Kalibera, Pizlo, Hosking,
    Vitek.</span> <span class="ShortTitle"> Scheduling Hard Real-time
    Garbage Collection. </span><strong>RTSS</strong> <span class="ShortWorksop"><a href="pubs/rtss09.pdf"><img alt="pdf" height="10" src="images/pdf.jpg"/></a></span></div>
<div class="ShortConference"><span class="ShortAuthors"> Bloom, Field, Nystrom,
    Ostlund, Richards, Strnisa, Vitek, Wrigstad.</span> <span class="ShortTitle"> Thorn---Robust,
    Concurrent, Extensible Scripting on the JVM. </span><strong>OOPSLA</strong> <a href="pubs/oopsla09.pdf"><img alt="pdf" height="10" src="images/pdf.jpg"/></a></div>
<div class="ShortConference"><span class="ShortAuthors"> Wrigstad, Pizlo, Meawad,
    Zhao and Vitek.</span> <span class="ShortTitle"> Loci: Simple Thread-Locality
    for Java. </span><strong>ECOOP</strong> <a href="pubs/ecoop09.pdf"><img alt="pdf" height="10" src="images/pdf.jpg"/></a></div>
<div class="ShortConference"><span class="ShortAuthors"> Cunei, Guerraoui, Spring,
    Privat, Vitek. </span> <span class="ShortTitle"> High-Performance Transactional
    Event Processing. </span><strong>COORDINATION</strong> <a href="pubs/coord09.pdf"><img alt="pdf" height="10" src="images/pdf.jpg"/></a></div>
<div class="ShortConference"><span class="ShortAuthors">Kalibera, Prochazka,
    Pizlo, Vitek, Zulianello, Decky.</span> <span class="ShortTitle"> Real-time
    Java in Space: Potential Benefits and Open Challenges. </span><strong>DASIA</strong></div>
<div class="ShortJournal"><span class="ShortAuthors">Baker, Cunei, Pizlo, Vitek.</span> <span class="ShortTitle">Accurate
    Garbage Collection in Uncooperative Environments. </span><span class="style5"><strong>C&amp;C:PE </strong></span><a href="pubs/ccpe09.pdf"><img alt="pdf" height="10" src="images/pdf.jpg"/></a></div>
<div class="ShortWorksop"> <span class="ShortAuthors"> Hunt, Locke, Nilsen, Schoeberl,
    Vitek. </span><span class="ShortTitle">Java for Safety-Critical Applications.</span> <span class="ShortVenue">SafeCert</span> <a href="pubs/safecert09.pdf"><img alt="pdf" height="10" src="images/pdf.jpg"/></a></div>
<div class="ShortWorksop"> <span class="ShortAuthors">  Wrigstad, 
    Eugster,  Field,  Nystrom,  Vitek.</span><span class="ShortTitle"> Software
    Hardening: A Research Agenda.</span> <span class="ShortVenue">STOP</span></div>
<div class="ShortWorksop"> <span class="ShortAuthors">  Lebresne, 
    Richards,  Östlund,  Wrigstad,  Vitek.</span><span class="ShortTitle"> Understanding
    the Dynamics of JavaScript. </span> <span class="ShortVenue">STOP</span></div>
<div class="ShortWorksop"> <span class="ShortAuthors">  Kalibera,  Hagelberg,
     Pizlo,  Plsek,  Titzer,  Vitek.</span><span class="ShortTitle"> CDx:
    A Family of Real-time Java Benchmarks.</span> <span class="ShortVenue">JTRes <a href="pubs/jtres09c.pdf"><img alt="pdf" height="10" src="images/pdf.jpg"/></a></span></div>
<div class="ShortWorksop"> <span class="ShortAuthors">  Zhao,  Tang,
     Vitek.</span><span class="ShortTitle"> A Technology Compatibility Kit
    for Safety Critical Java.</span> <span class="ShortVenue">JTRes <a href="pubs/jtres09b.pdf"><img alt="pdf" height="10" src="images/pdf.jpg"/></a></span></div>
<div class="ShortWorksop"> <span class="ShortAuthors">Pizlo, Ziarek, Vitek. </span><span class="ShortTitle">Real
    Time Java on resource-constrained platforms with Fiji VM.</span> <span class="ShortVenue">JTRes</span> <a href="pubs/jtres09a.pdf"><img alt="pdf" height="10" src="images/pdf.jpg"/></a></div>
<h4 align="left" style="background-color: #000099; color:white; text-align: left;">2008</h4>
<div class="ShortEdited"> <span class="ShortAuthors">Vitek, <span class="ShortTitle">22nd
      European Conference on Object Oriented Programming (ECOOP 2008).</span> <span class="ShortVenue">Springer</span></span></div>
<div class="ShortConference"><span class="ShortAuthors">Auerbach, Bacon, Guerraoui,
    Spring, Vitek.</span> <span class="ShortTitle">Flexible Task Graphs: A Unified
    Restricted Thread Programming Model for Java. </span><strong>LCTES</strong> <a href="pubs/lctes08.pdf"><img alt="pdf" height="10" src="images/pdf.jpg"/></a></div>
<div class="ShortConference"><span class="ShortAuthors">Pizlo, Vitek.</span> <span class="ShortTitle">Memory
    Management for Real-time Java: State of the Art. </span><strong>ISORC</strong> <a href="pubs/isorc08.pdf"><img alt="pdf" height="10" src="images/pdf.jpg"/></a></div>
<div class="ShortConference"><span class="ShortAuthors">Hirzel, Bloom, Nystrom,
    Vitek.</span> <span class="ShortTitle">Matchete: Paths through the Pattern
    Matching Jungle. </span><strong>PADL</strong> <a href="pubs/padl08.pdf"><img alt="pdf" height="10" src="images/pdf.jpg"/></a></div>
<div class="ShortJournal"><span class="ShortAuthors"> Cunei, Vitek. </span><span class="ShortTitle"> An
    Efficient and Flexible Toolkit for Composing Customized Method Dispatchers. </span><span class="ShortVenue"> SP&amp;E<span class="ShortConference">  </span></span> <a href="pubs/spe08.pdf"><img alt="pdf" height="10" src="images/pdf.jpg"/></a></div>
<div class="ShortJournal"><span class="ShortAuthors">Zhao, Baker, Hunt, Noble,
    Vitek.</span> <span class="ShortTitle">Implicit Ownership Types for Memory
    Management. </span><span class="style5"><strong>SCP </strong></span><a href="pubs/scp08.pdf"><img alt="pdf" height="10" src="images/pdf.jpg"/></a></div>
<h4 align="left" style="background-color: #000099; color:white; text-align: left;"> 2007</h4>
<div class="ShortConference"><span class="ShortAuthors">Spring, Privat, Guerraoui,
    Vitek.</span> <span class="ShortTitle">StreamFlex: High-throughput Stream
    Programming in Java.</span> <span class="ShortVenue">OOPSLA</span> <a href="pubs/oopsla07.pdf"><img alt="pdf" height="10" src="images/pdf.jpg"/></a></div>
<div class="ShortWorksop"> <span class="ShortAuthors"> Schoeberl, Vitek.</span><span class="ShortTitle"> Garbage
    Collection for Safety Critical Java.</span> <span class="ShortVenue">JTRES  </span><a href="pubs/jtres07.pdf"><img alt="pdf" height="10" src="images/pdf.jpg"/> </a></div>
<div class="ShortConference"><span class="ShortAuthors">Pizlo, Hosking, Vitek.</span><span class="ShortTitle"> Hierarchical
    Real-time Garbage Collection.</span> <span class="ShortVenue">LCTES</span>   <a href="pubs/lctes07.pdf"><img alt="pdf" height="10" src="images/pdf.jpg"/></a></div>
<div class="ShortEdited"> <span class="ShortAuthors">Murphy, Vitek, <span class="ShortTitle">9th
      International Conference on Coordination Models and Languages (COORDINATION07).</span> <span class="ShortVenue">Springer</span></span></div>
<div class="ShortConference"> <span class="ShortAuthors">Spring, Pizlo, Guerraoui,
    Vitek.</span><span class="ShortTitle"> Reflexes: Abstractions for Highly
    Responsive Systems.</span> <span class="ShortVenue">VEE</span>  <a href="pubs/VEE07.pdf"><img alt="pdf" height="10" src="images/pdf.jpg"/></a></div>
<div class="ShortJournal"> <span class="ShortAuthors">Andrea, Coady, Gibbs, Noble,
    Vitek, Zhao. </span><span class="ShortTitle"> Scoped Types and Aspects for
    Real-time Java Memory management. </span><span class="ShortVenue"> RTS</span> <span class="ShortConference">  <a href="pubs/rts07.pdf"><img alt="pdf" height="10" src="images/pdf.jpg"/></a></span></div>
<div class="ShortConference"> <span class="ShortAuthors">Baker, Cunei, Pizlo,
    Vitek.</span><span class="ShortTitle"> Accurate Garbage Collection in Uncooperative
    Environments with Lazy Pointer Stacks.</span> <span class="ShortVenue">CC</span>  <a href="pubs/cc07.pdf"><img alt="pdf" height="10" src="images/pdf.jpg"/></a></div>
<div class="ShortConference"> <span class="ShortAuthors"> Kalpka, Guerraoui,
    Vitek.</span><span class="ShortTitle"> STMBench7: A Benchmark for Software
    Transactional Memory.</span> <span class="ShortVenue">EUROSYS</span>  <a href="pubs/eurosys07.pdf"><img alt="pdf" height="10" src="images/pdf.jpg"/></a></div>
<h4 align="left" style="background-color: #000099; color:white; text-align: left;"> 2006</h4>
<div class="ShortWorksop"> <span class="ShortAuthors"> Coady, Gibbs, Haupt, Vitek,
    Yamauchi.</span><span class="ShortTitle"> Towards a domain specific language
    for virtual machines.</span> <span class="ShortVenue">DSAL</span></div>
<div class="ShortConference"> <span class="ShortAuthors">Pizlo, Vitek.</span><span class="ShortTitle"> An
    Emprical Evaluation of Memory Management Alternatives for Real-time Java.</span> <span class="ShortVenue">RTSS</span>  <a href="pubs/rtss06.pdf"><img alt="pdf" height="10" src="images/pdf.jpg"/></a></div>
<div class="ShortConference"> <span class="ShortAuthors">Yamauchi, Vitek.</span><span class="ShortTitle"> Combining
    Offline and Online Optimizations: Register Allocation and Method Inlining.</span> <span class="ShortVenue">APLAS</span>  <a href="pubs/aplas06.pdf"><img alt="pdf" height="10" src="images/pdf.jpg"/></a></div>
<div class="ShortJournal"> <span class="ShortAuthors">Armbuster, Baker, Cunei,
    Flack, Holmes, Pizlo, Pla, Prochazka, Vitek. </span> <span class="ShortTitle">A
    Real-Time Java Virtual Machine with Applications in Avionics. </span><span class="ShortVenue">TECS</span><span class="ShortConference">  <a href="pubs/tecs06.pdf"><img alt="pdf" height="10" src="images/pdf.jpg"/></a></span></div>
<div class="ShortJournal"> <span class="ShortAuthors">Vitek, Craig, Bailey-Kellog,
    Vitek. </span> <span class="ShortTitle">Inferential backbone assignment for
    sparse data. </span><span class="ShortVenue">J.Biomol NMR</span><span class="ShortConference">  </span><a href="pubs/jbiol.pdf"><img alt="pdf" height="10" src="images/pdf.jpg"/></a></div>
<div class="ShortConference"> <span class="ShortAuthors">Andrea, Coady, Gibbs,
    Noble, Vitek, Zhao.</span><span class="ShortTitle"> Scoped Types and Aspects
    for Real-Time Systems.</span> <span class="ShortVenue">ECOOP</span>   <a href="pubs/ecoop06.pdf"><img alt="pdf" height="10" src="images/pdf.jpg"/></a></div>
<div class="ShortEdited"> <span class="ShortAuthors">Logozzo, Vitek, <span class="ShortTitle">7th
      Workshop on Formal Techniques for Java-like Programs - FTfJP 202005 (Special
      issue).</span> <span class="ShortVenue">JOT</span></span></div>
<div class="ShortConference"> <span class="ShortAuthors">Cunei, Vitek.</span> <span class="ShortTitle"> A
    New Approach to Real-time Checkpointing.</span> <span class="ShortVenue">VEE</span>   </div>
<div class="ShortJournal"><span class="ShortAuthors"> Grothoff, Palsberg, Vitek. </span><span class="ShortTitle">Encapsulating
    Objects with Confined Types. </span><span class="ShortVenue"> TOPLAS</span> (to
    appear)<span class="ShortConference">  <a href="pubs/toplas0X.pdf"><img alt="pdf" height="10" src="images/pdf.jpg"/></a></span></div>
<div class="ShortConference"> <span class="ShortAuthors">Baker, Cunei, Flack,
    Pizlo, Prochazka, Vitek, Armbuster, Pla, Holmes.</span> <span class="ShortTitle"> A
    Real-time Java Virtual Machine for Avionics.</span> <span class="ShortVenue">RTAS</span>   <a href="pubs/rtas06.pdf"><img alt="pdf" height="10" src="images/pdf.jpg"/></a></div>
<div class="ShortJournal"><span class="ShortAuthors"> Zhao, Palsberg, Vitek. </span><span class="ShortTitle"> Type-based
    Confinement. </span><span class="ShortVenue"> JFP</span> <span class="ShortConference">  <a href="pubs/jfp.pdf"><img alt="pdf" height="10" src="images/pdf.jpg"/></a></span></div>
<div class="ShortJournal"> <span class="ShortAuthors"> Carbunar, Grama, Vitek,
    Carbunar, </span> <span class="ShortTitle">Redundancy and Coverage Detection
    in Sensor Networks</span> <span class="ShortVenue">TOSN</span></div>
<h4 align="left" style="background-color: #000099; color:white; text-align: left;">2005 </h4>
<div class="ShortConference"> <span class="ShortAuthors"> Manson, Baker, Cunei,
    Jagannathan, Prochazka, Xin, Vitek.</span> <span class="ShortTitle"> Preemptible
    Atomic Regions for Real-time Java.</span> <span class="ShortVenue">RTSS<span class="ShortJournal">   <a href="pubs/rtss05.pdf"><img alt="pdf" height="10" src="images/pdf.jpg"/></a></span></span></div>
<div class="ShortEdited"> <span class="ShortAuthors"> Noir, Shavit, Vitek, <span class="ShortTitle">Concurrency
      and synchronization in Java programs (Special issue).</span> <span class="ShortVenue">SCP</span></span></div>
<div class="ShortJournal"><span class="ShortAuthors"> Castagna, Vitek, Zappa
    Nardeli. </span><span class="ShortTitle"> The Seal calculus. </span><span class="ShortVenue"> I&amp;C <span class="ShortConference">  <a href="pubs/ic05.pdf"><img alt="pdf" height="10" src="images/pdf.jpg"/></a></span></span></div>
<div class="ShortEdited"> <span class="ShortAuthors"> Hind, Vitek (Eds).</span> <span class="ShortTitle">First
    ACM/USENIX International Conference on Virtual Execution Environments VEE 2005.</span></div>
<div class="ShortConference"> <span class="ShortAuthors"> Cunei, Vitek.</span> <span class="ShortTitle"> PolyD:
    A Flexible Dispatching Framework.</span> <span class="ShortVenue">OOPSLA</span><span class="ShortJournal">   <a href="pubs/oopsla05.pdf"><img alt="pdf" height="10" src="images/pdf.jpg"/></a></span></div>
<div class="ShortEdited"> <span class="ShortAuthors"> Moir, Shavit, Vitek (Eds).</span> <span class="ShortTitle">Special
    issue on Concurrency and Synchronization in Java.</span> <span class="ShortVenue">SCP</span></div>
<div class="ShortJournal"><span class="ShortAuthors"> Vitek, Bailey-Kellogg,
    Craig, Kuliniewicz, Vitek. </span><span class="ShortTitle"> Reconsidering
    Complete Search Algorithms for Protein Backbone NMR Assignment. </span><span class="ShortVenue"> Bioinformatics <span class="ShortConference">  <a href="pubs/bioinf05.pdf"><img alt="pdf" height="10" src="images/pdf.jpg"/></a></span></span></div>
<div class="ShortWorksop"> <span class="ShortAuthors"> Manson, Jagannathan, and
    Vitek.</span> <span class="ShortTitle"> Dynamic Aspects for Runtime Fault
    Determination and Recovery.</span> <span class="ShortVenue">DAW</span></div>
<div class="ShortJournal"><span class="ShortAuthors"> Jagannathan, Vitek, Welc,
    Hosking. </span><span class="ShortTitle"> A Transactional Object Calculus. </span><span class="ShortVenue"> SCP <span class="ShortConference">  <a href="pubs/scp05.pdf"><img alt="pdf" height="10" src="images/pdf.jpg"/></a></span></span></div>
<div class="ShortConference"> <span class="ShortAuthors"> Gopalakrishna, Spafford,
    Vitek.</span> <span class="ShortTitle"> Efficient Intrusion Detection using
    Automaton Inlining.</span> <span class="ShortVenue"> S&amp;P</span><span class="ShortJournal">   <a href="pubs/sp05.pdf"><img alt="pdf" height="10" src="images/pdf.jpg"/></a></span></div>
<div class="ShortJournal"><span class="ShortAuthors"> Palacz, Baker, Flack, Grothoff,
    Yamauchi, Vitek. </span><span class="ShortTitle"> Engineering a common intermediate
    representation for the Ovm framework.</span><span class="ShortVenue"> SCP <span class="ShortConference">  <a href="pubs/scp04.pdf"><img alt="pdf" height="10" src="images/pdf.jpg"/></a></span></span></div>
<h4 align="left" style="background-color: #000099; color:white; text-align: left;"> 2004 </h4>
<div class="ShortConference"> <span class="ShortAuthors"> Zhao, Noble, Vitek.</span> <span class="ShortTitle">Scoped
    Types for Real-time Java.</span> <span class="ShortVenue"> RTSS<span class="ShortJournal">   <a href="pubs/rtss04.pdf"><img alt="pdf" height="10" src="images/pdf.jpg"/></a></span></span></div>
<div class="ShortWorksop"> <span class="ShortAuthors"> Pizlo, Prochazka, Jaggannathan
    and Vitek.</span> <span class="ShortTitle"> Transactional lock-free data
    structure for Real Time Java.</span> <span class="ShortVenue"> CSJP</span></div>
<div class="ShortConference"> <span class="ShortAuthors"> Carbunar, Ioannidis,
    Grama, Vitek.</span> <span class="ShortTitle"> A Secure Crediting Protocol
    for Hybrid Cellular, Ad-Hoc Networks.</span> <span class="ShortVenue"> ICETE</span></div>
<div class="ShortJournal"><span class="ShortAuthors"> Vitek, Vitek, Craig, Bailey-Kellogg. </span><span class="ShortTitle"> Model-based
    assignment, inference of protein backbone nuclear magnetic resonances. </span><span class="ShortVenue"> SGMB <span class="ShortConference">  <a href="pubs/sgmb04.pdf"><img alt="pdf" height="10" src="images/pdf.jpg"/></a></span></span></div>
<div class="ShortConference"> <span class="ShortAuthors"> Carbunar, Grama, Vitek.</span> <span class="ShortTitle"> Coverage
    Preserving Redundancy Elimination in Sensor Networks.</span> <span class="ShortVenue">SECON</span></div>
<div class="ShortConference"> <span class="ShortAuthors"> Chothia, Duggan, Vitek.</span> <span class="ShortTitle"> Principals,
    Policies, Keys in a Secure Distributed Programming Language.</span> <span class="ShortVenue">FCS</span><span class="ShortJournal">   </span></div>
<div class="ShortJournal"><span class="ShortAuthors"> Carbunar, Valente, Vitek. </span><span class="ShortTitle"> Coordination
    and Mobility in CoreLime.</span><span class="ShortVenue"> MSCS <span class="ShortConference">  <a href="pubs/mscs.pdf"><img alt="pdf" height="10" src="images/pdf.jpg"/></a></span></span></div>
<div class="ShortConference"> <span class="ShortAuthors"> Carbunar, Grama, Vitek.</span> <span class="ShortTitle"> Distributed,
    Dynamic Voronoi Overlays for Coverage Detection, Distributed Hash Tables
    in Ad-Hoc Networks.</span> <span class="ShortVenue">ICPADS</span></div>
<div class="ShortConference"> <span class="ShortAuthors"> Pizlo, Fox, Holmes,
    Vitek.</span> <span class="ShortTitle"> Real-Time Java scoped memory: design
    patterns, semantics.</span> <span class="ShortVenue">ISORC<span class="ShortJournal">   <a href="pubs/isorc04.pdf"><img alt="pdf" height="10" src="images/pdf.jpg"/></a></span></span></div>
<div class="ShortConference"> <span class="ShortAuthors"> Vitek, Jagannathan,
    Welc, Hosking.</span> <span class="ShortTitle">A semantic framework for designer
    transactions.</span> <span class="ShortVenue">ESOP<span class="ShortJournal">   <a href="pubs/esop04.pdf"><img alt="pdf" height="10" src="images/pdf.jpg"/></a></span></span></div>
<div class="ShortConference"> <span class="ShortAuthors"> Jagannathan, Vitek.</span> <span class="ShortTitle"> Optimistic
    concurrency semantics for transactions in coordination languages.</span> <span class="ShortVenue"> COORDINATION</span><span class="ShortJournal">   <a href="pubs/coord04.pdf"><img alt="pdf" height="10" src="images/pdf.jpg"/></a></span></div>
<h4 align="left" style="background-color: #000099; color:white; text-align: left;"> 2003 </h4>
<div class="ShortConference"> <span class="ShortAuthors"> Zhao, Palsberg, Vitek.</span> <span class="ShortTitle"> Lightweight
    confinement for featherweight Java.</span> <span class="ShortVenue"> OOPSLA</span><span class="ShortJournal">   <a href="pubs/oopsla03.pdf"><img alt="pdf" height="10" src="images/pdf.jpg"/></a></span></div>
<div class="ShortJournal"><span class="ShortAuthors"> Sewell, Vitek. </span><span class="ShortTitle"> Secure
    composition of untrusted code: box-pi, wrappers, causality types. </span><span class="ShortVenue"> JCS <span class="ShortConference">  <a href="pubs/jcs.pdf"><img alt="pdf" height="10" src="images/pdf.jpg"/></a></span></span></div>
<div class="ShortConference"> <span class="ShortAuthors"> Chothia, Duggan, Vitek.</span> <span class="ShortTitle"> Type-based
    distributed access control.</span> <span class="ShortVenue"> CSFW<span class="ShortJournal">   <a href="pubs/csfw03.pdf"><img alt="pdf" height="10" src="images/pdf.jpg"/></a></span></span></div>
<div class="ShortConference"> <span class="ShortAuthors"> Palacz, Vitek.</span> <span class="ShortTitle"> Subtype
    tests in real time.</span> <span class="ShortVenue">ECOOP<span class="ShortJournal">   <a href="pubs/ecoop03.pdf"><img alt="pdf" height="10" src="images/pdf.jpg"/></a></span></span></div>
<div class="ShortConference"> <span class="ShortAuthors"> Palacz, Baker, Flack,
    Grothoff, Yamauchi, Vitek.</span> <span class="ShortTitle"> Engineering a
    customizable intermediate representation.</span> <span class="ShortVenue">IVME</span><span class="ShortJournal">   <a href="pubs/ivme03.pdf"><img alt="pdf" height="10" src="images/pdf.jpg"/></a></span></div>
<h4 align="left" style="background-color: #000099; color:white; text-align: left;"> 2002</h4>
<div class="ShortConference"> <span class="ShortAuthors"> Palacz, Czaikowski,
    Daynes, Vitek.</span> <span class="ShortTitle"> Incommunicado: a communication
    substrate for Isolates.</span> <span class="ShortVenue">OOPSLA<span class="ShortJournal">   <a href="pubs/oopsla02.pdf"><img alt="pdf" height="10" src="images/pdf.jpg"/></a></span></span></div>
<div class="ShortJournal"><span class="ShortAuthors"> Vitek, Bryce, Oriol. </span><span class="ShortTitle"> Coordinating
    agents with secure spaces. </span><span class="ShortVenue">SCP <span class="ShortConference">  <a href="pubs/scp02.pdf"><img alt="pdf" height="10" src="images/pdf.jpg"/></a></span></span></div>
<h4 align="left" style="background-color: #000099; color:white; text-align: left;"> 2001 </h4>
<div class="ShortJournal"><span class="ShortAuthors"> Vitek, Bokowski. </span><span class="ShortTitle"> Confined
    types for Java. </span><span class="ShortVenue"> SP&amp;E</span> <span class="ShortConference">  <a href="pubs/spe00-1.pdf"><img alt="pdf" height="10" src="images/pdf.jpg"/></a></span></div>
<div class="ShortConference"> <span class="ShortAuthors"> Carbunar, Valente,
    Vitek.</span> <span class="ShortTitle">Lime revisited.</span> <span class="ShortVenue"> MA</span><span class="ShortJournal">   <img alt="pdf" height="10" src="images/pdf.jpg"/></span></div>
<div class="ShortWorksop"> <span class="ShortAuthors"> Carbunar, Valente and
    Vitek.</span> <span class="ShortTitle"> CoreLime: a coordination model for
    mobile agents.</span> <span class="ShortVenue">WCC </span></div>
<div class="ShortConference"> <span class="ShortAuthors"> Grothoff, Palsberg,
    Vitek.</span> <span class="ShortTitle">Encapsulating objects with confined
    types.</span> <span class="ShortVenue">OOPSLA<span class="ShortJournal">   <a href="pubs/oopsla01.pdf"><img alt="pdf" height="10" src="images/pdf.jpg"/></a></span></span></div>
<div class="ShortJournal"><span class="ShortAuthors"> Bryce, Vitek. </span><span class="ShortTitle"> The
    JavaSeal mobile agent kernel. </span><span class="ShortVenue"> AAMAS <span class="ShortConference">  <a href="pubs/agents.pdf"><img alt="pdf" height="10" src="images/pdf.jpg"/></a></span></span></div>
<h4 align="left" style="background-color: #000099; color:white; text-align: left;"> 2000 </h4>
<div class="ShortConference"> <span class="ShortAuthors"> Sewell, Vitek.</span> <span class="ShortTitle">Secure
    composition of untrusted code: wrappers, causality types.</span> <span class="ShortVenue"> CSFW<span class="ShortJournal">   <a href="pubs/csfw00.pdf"><img alt="pdf" height="10" src="images/pdf.jpg"/></a></span></span></div>
<h4 align="left" style="background-color: #000099; color:white; text-align: left;"> 1999 </h4>
<div class="ShortConference"> <span class="ShortAuthors"> Sewell, Vitek.</span> <span class="ShortTitle">Secure
    composition of insecure components.</span> <span class="ShortVenue"> CSFW</span><span class="ShortJournal">   <a href="pubs/csfw99.pdf"><img alt="pdf" height="10" src="images/pdf.jpg"/></a></span></div>
<div class="ShortWorksop"> <span class="ShortAuthors"> Vitek, Castagna.</span> <span class="ShortTitle"> Mobile
    computations and hostile host.</span> <span class="ShortVenue">JFLA </span></div>
<div class="ShortConference"> <span class="ShortAuthors"> Bryce, Oriol, Vitek.</span> <span class="ShortTitle">Secure
    object spaces: a coordination model for agents.</span> <span class="ShortVenue"> COORDINATION<span class="ShortJournal">   <img alt="pdf" height="10" src="images/pdf.jpg"/></span></span></div>
<div class="ShortEdited"> <span class="ShortAuthors"> Vitek, Jensen (Eds.).</span> <span class="ShortTitle"> Secure
    Internet Programming: Security Issues for Mobile, Distributed Object Systems.</span> <span class="ShortVenue"> Springer</span></div>
<div class="ShortConference"> <span class="ShortAuthors"> Bokowski, Vitek.</span> <span class="ShortTitle">Confined
    types.</span> <span class="ShortVenue">OOPSLA</span><span class="ShortJournal">   <a href="pubs/oopsla01.pdf"><img alt="pdf" height="10" src="images/pdf.jpg"/></a></span></div>
<div class="ShortEdited"> <span class="ShortAuthors"> Ciancarini, Tolskdorf,
    Vitek (Eds.).</span> <span class="ShortTitle"> Special issue on Distributed
    World Wide Web Processing: Applications, Techniques.</span> <span class="ShortVenue">WWWJ</span></div>
<div class="ShortConference"> <span class="ShortAuthors"> Vitek, Bryce.</span> <span class="ShortTitle">Security
    for mobile code: the JavaSeal experiment.</span> <span class="ShortVenue">ASA/MA<span class="ShortJournal">   <a href="pubs/asa99.pdf"><img alt="pdf" height="10" src="images/pdf.jpg"/></a></span></span></div>
<h4 align="left" style="background-color: #000099; color:white; text-align: left;"> 1998 </h4>
<div class="ShortConference"> <span class="ShortAuthors"> Bradley, Horspool.</span> <span class="ShortTitle"> JAZZ:
    An efficient compressed format for Java archive files.</span> <span class="ShortVenue">CASCON<span class="ShortJournal">   <a href="pubs/cascon.pdf"><img alt="pdf" height="10" src="images/pdf.jpg"/></a></span></span></div>
<div class="ShortInBook"> <span class="ShortAuthors"> Vitek, Castagna.</span> <span class="ShortTitle">Seal:
    a framework for secure mobile computations.</span> <span class="ShortVenue"> Internet
    Programming Languages<span class="ShortJournal"> <span class="ShortConference">  <img alt="pdf" height="10" src="images/pdf.jpg"/></span></span></span></div>
<div class="ShortConference"> <span class="ShortAuthors"> Noble, Vitek, Potter.</span> <span class="ShortTitle"> Flexible
    alias protection.</span> <span class="ShortVenue"> ECOOP<span class="ShortJournal">   <a href="pubs/ecoop98.pdf"><img alt="pdf" height="10" src="images/pdf.jpg"/></a></span></span></div>
<div class="ShortEdited"> <span class="ShortAuthors"> Vitek, Tschudin (Eds.).</span> <span class="ShortTitle">Proceedings
    of the Mobile Object Systems Workshop.</span> <span class="ShortVenue">Dpunkt</span></div>
<div class="ShortEdited"> <span class="ShortAuthors"> Ciancarini, Tolskdorf,
    Vitek (Eds.).</span> <span class="ShortTitle"> Workshop on Collaborative
    Agents in Distributed Web Applications.</span> <span class="ShortVenue"> WETICE</span></div>
<h4 align="left" style="background-color: #000099; color:white; text-align: left;"> 1997 </h4>
<div class="ShortConference"> <span class="ShortAuthors">Vitek, Horspool, Krall.</span> <span class="ShortTitle"> Efficient
    type inclusion tests.</span> <span class="ShortVenue"> OOPSLA<span class="ShortJournal">   <a href="pubs/oopsla97.pdf"><img alt="pdf" height="10" src="images/pdf.jpg"/></a></span></span></div>
<div class="ShortInBook"> <span class="ShortAuthors"> Vitek, Serrano, Thanos.</span> <span class="ShortTitle"> Security,
    communication in mobile object systems.</span> <span class="ShortVenue"> Mobile
    Object Systems: Towards the Programmable Internet</span></div>
<div class="ShortConference"> <span class="ShortAuthors"> Krall, Vitek, Horspool.</span> <span class="ShortTitle"> Near
    optimal hierarchical encoding of types.</span> <span class="ShortVenue"> ECOOP</span><span class="ShortJournal">   <a href="pubs/ecoop97.pdf"><img alt="pdf" height="10" src="images/pdf.jpg"/></a></span></div>
<div class="ShortEdited"> <span class="ShortAuthors"> Vitek, Tschudin (Eds.).</span> <span class="ShortTitle"> Mobile
    Object Systems: Towards the Programmable Internet.</span> <span class="ShortVenue"> Springer</span></div>
<div class="ShortConference"> <span class="ShortAuthors"> Krall, Vitek.</span> <span class="ShortTitle">On
    extending Java.</span> <span class="ShortVenue"> JMLC</span><span class="ShortJournal">   <a href="pubs/jmlc97.pdf"><img alt="pdf" height="10" src="images/pdf.jpg"/></a></span></div>
<div class="ShortWorksop"> <span class="ShortAuthors"> Vitek .</span> <span class="ShortTitle">New
    Paradigms in distributed computing.</span> <span class="ShortVenue"> ERSADS</span> </div>
<h4 align="left" style="background-color: #000099; color:white; text-align: left;"> 1996 </h4>
<div class="ShortConference"> <span class="ShortAuthors"> Vitek, Horspool.</span> <span class="ShortTitle">Compact
    dispatch tables for dynamically typed object oriented languages.</span> <span class="ShortVenue"> CC<span class="ShortJournal">   </span></span></div>
<div class="ShortWorksop"> <span class="ShortAuthors"> Vitek.</span> <span class="ShortTitle"> Secure
    object spaces</span> <span class="ShortVenue">MOS</span></div>
<div class="ShortWorksop"> <span class="ShortAuthors"> Konstantas, Morin and
    Vitek.</span> <span class="ShortTitle"> MEDIA: A platform for the commercialization
    of electronic documents.</span> <span class="ShortVenue">UofG TR</span> </div>
<h4 align="left" style="background-color: #000099; color:white; text-align: left;"> 1995 </h4>
<div class="ShortConference"> <span class="ShortAuthors"> Driesen, Holzle, Vitek.</span> <span class="ShortTitle"> Message
    dispatch on pipelined processors.</span> <span class="ShortVenue">ECOOP<span class="ShortJournal">   <a href="pubs/ecoop95.pdf"><img alt="pdf" height="10" src="images/pdf.jpg"/></a></span></span></div>
<h4 align="left" style="background-color: #000099; color:white; text-align: left;"> 1994 </h4>
<div class="ShortConference"> <span class="ShortAuthors"> Vitek, Horspool.</span> <span class="ShortTitle"> Taming
    message passing: efficient method look-up for dynamically typed languages.</span> <span class="ShortVenue">ECOOP<span class="ShortJournal">   <a href="pubs/ecoop94.pdf"><img alt="pdf" height="10" src="images/pdf.jpg"/></a></span></span></div>
<h4 align="left" style="background-color: #000099; color:white; text-align: left;"> 1993 </h4>
<div class="ShortJournal"><span class="ShortAuthors"> Horspool, Vitek. </span><span class="ShortTitle"> Static
    analysis of PostScript code. </span><span class="ShortVenue"> JCL <span class="ShortConference">  </span></span></div>
<h4 align="left" style="background-color: #000099; color:white; text-align: left;"> 1992 </h4>
<div class="ShortConference"> <span class="ShortAuthors"> Vitek, Horspool, Uhl.</span> <span class="ShortTitle">Compile-time
    analysis of object-oriented programs.</span> <span class="ShortVenue">CC<span class="ShortJournal">   </span></span></div>
<div class="ShortJournal"><span class="ShortAuthors"> Kappel, Vitek, Nierstrasz,
    Junod, Stadelmann. </span><span class="ShortTitle"> Scripting applications
    in the public administration domain. .</span> <span class="ShortVenue">SIGOIS</span></div>
<div class="ShortConference"> <span class="ShortAuthors"> Horspool, Vitek.</span> <span class="ShortTitle"> Static
    analysis of PostScript code.</span> <span class="ShortVenue"> ICCL<span class="ShortJournal">   </span></span></div>
</div></body>
</html>
